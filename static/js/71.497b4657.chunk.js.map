{"version":3,"sources":["components/container/PageContainer.js","layouts/full-layout/breadcrumb/Breadcrumb.js","views/treeview/Treeview.js"],"names":["PageContainer","title","description","children","name","content","Breadcrumb","subtitle","items","container","sx","p","item","xs","sm","lg","color","fontWeight","variant","separator","fontSize","map","to","underline","component","NavLink","lineHeight","display","alignItems","md","justifyContent","width","BCrumb","MinusSquare","props","icon","style","height","PlusSquare","CloseSquare","TransitionComponent","div","StyledTreeItem","styled","theme","treeItemClasses","iconContainer","opacity","group","marginLeft","paddingLeft","borderLeft","alpha","palette","text","primary","Treeview","defaultExpanded","defaultCollapseIcon","defaultExpandIcon","defaultEndIcon","flexGrow","overflowY","nodeId","label"],"mappings":"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","file":"static/js/71.497b4657.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Helmet } from 'react-helmet';\r\n\r\nconst PageContainer = ({ title, description, children }) => (\r\n  <div>\r\n    <Helmet>\r\n      <title>{title}</title>\r\n      <meta name='description' content={description} />\r\n    </Helmet>\r\n    {children}\r\n  </div>\r\n);\r\n\r\nPageContainer.propTypes = {\r\n  title: PropTypes.string,\r\n  description: PropTypes.string,\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default PageContainer;\r\n","import React from 'react';\r\nimport { Grid, Typography, Box, Breadcrumbs, Link } from '@mui/material';\r\nimport { NavLink } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport NavigateNextIcon from '@mui/icons-material/NavigateNext';\r\n\r\nconst Breadcrumb = ({ subtitle, items, title, children }) => (\r\n  <Grid\r\n    container\r\n    sx={{\r\n      p: '15px',\r\n    }}\r\n  >\r\n    <Grid item xs={12} sm={6} lg={8}>\r\n      <Typography color='textSecondary' fontWeight='400' variant='h4'>\r\n        {subtitle}\r\n      </Typography>\r\n\r\n      <Breadcrumbs\r\n        separator={<NavigateNextIcon fontSize='small' />}\r\n        aria-label='breadcrumb'\r\n      >\r\n        {items\r\n          ? items.map((item) => (\r\n              <div key={item.title}>\r\n                {item.to ? (\r\n                  <Link\r\n                    underline='none'\r\n                    color='inherit'\r\n                    component={NavLink}\r\n                    to={item.to}\r\n                  >\r\n                    {item.title}\r\n                  </Link>\r\n                ) : (\r\n                  <Typography color='textPrimary'>{item.title}</Typography>\r\n                )}\r\n              </div>\r\n            ))\r\n          : ''}\r\n      </Breadcrumbs>\r\n      <Typography\r\n        fontWeight='700'\r\n        variant='h1'\r\n        sx={{\r\n          lineHeight: '1.235',\r\n        }}\r\n      >\r\n        {title}\r\n      </Typography>\r\n    </Grid>\r\n    <Grid item xs={12} sm={6} lg={4} display='flex' alignItems='flex-end'>\r\n      <Box\r\n        sx={{\r\n          display: { xs: 'none', md: 'block', lg: 'flex' },\r\n          alignItems: 'center',\r\n          justifyContent: 'flex-end',\r\n          width: '100%',\r\n        }}\r\n      >\r\n        {children}\r\n      </Box>\r\n    </Grid>\r\n  </Grid>\r\n);\r\n\r\nBreadcrumb.propTypes = {\r\n  subtitle: PropTypes.string,\r\n  items: PropTypes.array,\r\n  title: PropTypes.string,\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default Breadcrumb;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { alpha, styled } from '@mui/material/styles';\r\nimport TreeView from '@mui/lab/TreeView';\r\nimport TreeItem, { treeItemClasses } from '@mui/lab/TreeItem';\r\nimport { animated } from 'react-spring/dist/react-spring.cjs';\r\nimport { Card, Collapse } from '@mui/material';\r\nimport FeatherIcon from 'feather-icons-react';\r\n\r\nimport Breadcrumb from '../../layouts/full-layout/breadcrumb/Breadcrumb';\r\nimport PageContainer from '../../components/container/PageContainer';\r\n\r\nconst BCrumb = [\r\n  {\r\n    to: '/',\r\n    title: 'Home',\r\n  },\r\n  {\r\n    title: 'Treeview',\r\n  },\r\n];\r\n\r\nfunction MinusSquare(props) {\r\n  return (\r\n    <>\r\n      <FeatherIcon\r\n        icon='folder-minus'\r\n        style={{ width: 15, height: 15 }}\r\n        {...props}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nfunction PlusSquare(props) {\r\n  return (\r\n    <>\r\n      <FeatherIcon\r\n        icon='folder-plus'\r\n        style={{ width: 15, height: 15 }}\r\n        {...props}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nfunction CloseSquare(props) {\r\n  return (\r\n    <>\r\n      <FeatherIcon icon='folder' style={{ width: 15, height: 15 }} {...props} />\r\n    </>\r\n  );\r\n}\r\n\r\nfunction TransitionComponent(props) {\r\n  //   const style = useSpring({\r\n  //     from: {\r\n  //       opacity: 0,\r\n  //       transform: 'translate3d(20px,0,0)',\r\n  //     },\r\n  //     to: {\r\n  //       opacity: props.in ? 1 : 0,\r\n  //       transform: `translate3d(${props.in ? 0 : 20}px,0,0)`,\r\n  //     },\r\n  //   });\r\n\r\n  return (\r\n    <animated.div>\r\n      <Collapse {...props} />\r\n    </animated.div>\r\n  );\r\n}\r\n\r\nTransitionComponent.propTypes = {\r\n  /**\r\n   * Show the component; triggers the enter or exit states\r\n   */\r\n  in: PropTypes.bool,\r\n};\r\n\r\nconst StyledTreeItem = styled((props) => (\r\n  <TreeItem {...props} TransitionComponent={TransitionComponent} />\r\n))(({ theme }) => ({\r\n  [`& .${treeItemClasses.iconContainer}`]: {\r\n    '& .close': {\r\n      opacity: 0.3,\r\n    },\r\n  },\r\n  [`& .${treeItemClasses.group}`]: {\r\n    marginLeft: 15,\r\n    paddingLeft: 18,\r\n    borderLeft: `1px dashed ${alpha(theme.palette.text.primary, 0.4)}`,\r\n  },\r\n}));\r\n\r\nconst Treeview = () => {\r\n  return (\r\n    <PageContainer title='Treeview' description='this is Treeview page'>\r\n      {/* breadcrumb */}\r\n      <Breadcrumb title='Treeview' items={BCrumb} />\r\n      {/* end breadcrumb */}\r\n      <Card>\r\n        <TreeView\r\n          aria-label='customized'\r\n          defaultExpanded={['1']}\r\n          defaultCollapseIcon={<MinusSquare />}\r\n          defaultExpandIcon={<PlusSquare />}\r\n          defaultEndIcon={<CloseSquare />}\r\n          sx={{ height: 200, flexGrow: 1, overflowY: 'auto' }}\r\n        >\r\n          <StyledTreeItem nodeId='1' label='Main'>\r\n            <StyledTreeItem nodeId='2' label='Hello' />\r\n            <StyledTreeItem nodeId='3' label='Subtree with children'>\r\n              <StyledTreeItem nodeId='6' label='Hello' />\r\n              <StyledTreeItem nodeId='7' label='Sub-subtree with children'>\r\n                <StyledTreeItem nodeId='9' label='Child 1' />\r\n                <StyledTreeItem nodeId='10' label='Child 2' />\r\n                <StyledTreeItem nodeId='11' label='Child 3' />\r\n              </StyledTreeItem>\r\n              <StyledTreeItem nodeId='8' label='Hello' />\r\n            </StyledTreeItem>\r\n            <StyledTreeItem nodeId='4' label='World' />\r\n            <StyledTreeItem nodeId='5' label='Something something' />\r\n          </StyledTreeItem>\r\n        </TreeView>\r\n      </Card>\r\n    </PageContainer>\r\n  );\r\n};\r\n\r\nexport default Treeview;\r\n"],"sourceRoot":""}