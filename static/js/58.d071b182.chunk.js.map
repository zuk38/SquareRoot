{"version":3,"sources":["components/container/PageContainer.js","layouts/full-layout/breadcrumb/Breadcrumb.js","components/base-card/BaseCard.js","views/alert/ExAlert.js"],"names":["PageContainer","title","description","children","name","content","Breadcrumb","subtitle","items","container","sx","p","item","xs","sm","lg","color","fontWeight","variant","separator","fontSize","map","to","underline","component","NavLink","lineHeight","display","alignItems","md","justifyContent","width","BaseCard","BCrumb","ExAlert","React","useState","open","setOpen","spacing","severity","onClose","action","size","in","onClick","icon","disabled"],"mappings":"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","file":"static/js/58.d071b182.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Helmet } from 'react-helmet';\n\nconst PageContainer = ({ title, description, children }) => (\n  <div>\n    <Helmet>\n      <title>{title}</title>\n      <meta name='description' content={description} />\n    </Helmet>\n    {children}\n  </div>\n);\n\nPageContainer.propTypes = {\n  title: PropTypes.string,\n  description: PropTypes.string,\n  children: PropTypes.node,\n};\n\nexport default PageContainer;\n","import React from 'react';\nimport { Grid, Typography, Box, Breadcrumbs, Link } from '@mui/material';\nimport { NavLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport NavigateNextIcon from '@mui/icons-material/NavigateNext';\n\nconst Breadcrumb = ({ subtitle, items, title, children }) => (\n  <Grid\n    container\n    sx={{\n      p: '15px',\n    }}\n  >\n    <Grid item xs={12} sm={6} lg={8}>\n      <Typography color='textSecondary' fontWeight='400' variant='h4'>\n        {subtitle}\n      </Typography>\n\n      <Breadcrumbs\n        separator={<NavigateNextIcon fontSize='small' />}\n        aria-label='breadcrumb'\n      >\n        {items\n          ? items.map((item) => (\n              <div key={item.title}>\n                {item.to ? (\n                  <Link\n                    underline='none'\n                    color='inherit'\n                    component={NavLink}\n                    to={item.to}\n                  >\n                    {item.title}\n                  </Link>\n                ) : (\n                  <Typography color='textPrimary'>{item.title}</Typography>\n                )}\n              </div>\n            ))\n          : ''}\n      </Breadcrumbs>\n      <Typography\n        fontWeight='700'\n        variant='h1'\n        sx={{\n          lineHeight: '1.235',\n        }}\n      >\n        {title}\n      </Typography>\n    </Grid>\n    <Grid item xs={12} sm={6} lg={4} display='flex' alignItems='flex-end'>\n      <Box\n        sx={{\n          display: { xs: 'none', md: 'block', lg: 'flex' },\n          alignItems: 'center',\n          justifyContent: 'flex-end',\n          width: '100%',\n        }}\n      >\n        {children}\n      </Box>\n    </Grid>\n  </Grid>\n);\n\nBreadcrumb.propTypes = {\n  subtitle: PropTypes.string,\n  items: PropTypes.array,\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\n\nexport default Breadcrumb;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Card, CardHeader, CardContent, Divider } from '@mui/material';\n\nconst BaseCard = ({ title, children }) => (\n  <Card\n    sx={{\n      width: '100%',\n      p: 0,\n    }}\n  >\n    <CardHeader title={title} />\n\n    <Divider />\n    <CardContent>{children}</CardContent>\n  </Card>\n);\n\nBaseCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node,\n};\n\nexport default BaseCard;\n","import React from 'react';\nimport { Grid, Stack, Button, IconButton, Collapse } from '@mui/material';\nimport Alert from '@mui/lab/Alert';\nimport FeatherIcon from 'feather-icons-react';\nimport Breadcrumb from '../../layouts/full-layout/breadcrumb/Breadcrumb';\nimport BaseCard from '../../components/base-card/BaseCard';\nimport PageContainer from '../../components/container/PageContainer';\n\nconst BCrumb = [\n  {\n    to: '/',\n    title: 'Home',\n  },\n  {\n    title: 'Alert',\n  },\n];\n\nconst ExAlert = () => {\n  const [open, setOpen] = React.useState(true);\n\n  return (\n    <PageContainer title='Alert' description='this is Alert page'>\n      {/* breadcrumb */}\n      <Breadcrumb title='Alert' items={BCrumb} />\n      {/* end breadcrumb */}\n      <Grid container spacing={0}>\n        {/* ------------------------- row 1 ------------------------- */}\n        <Grid item xs={12} lg={6} sm={6} display='flex' alignItems='stretch'>\n          <BaseCard title='Filled Alert'>\n            <Stack spacing={1}>\n              <Alert variant='filled' severity='error'>\n                This is an error alert — check it out!\n              </Alert>\n              <Alert variant='filled' severity='warning'>\n                This is a warning alert — check it out!\n              </Alert>\n              <Alert variant='filled' severity='info'>\n                This is an info alert — check it out!\n              </Alert>\n              <Alert variant='filled' severity='success'>\n                This is a success alert — check it out!\n              </Alert>\n            </Stack>\n          </BaseCard>\n        </Grid>\n        {/* ------------------------- row 1 ------------------------- */}\n        <Grid item xs={12} lg={6} sm={6} display='flex' alignItems='stretch'>\n          <BaseCard title='Action Alert'>\n            <Stack spacing={1}>\n              <Alert variant='filled' severity='warning' onClose={() => {}}>\n                This is a success alert — check it out!\n              </Alert>\n              <Alert\n                variant='filled'\n                severity='info'\n                action={\n                  <Button color='inherit' size='small'>\n                    UNDO\n                  </Button>\n                }\n              >\n                This is a success alert — check it out!\n              </Alert>\n            </Stack>\n          </BaseCard>\n        </Grid>\n        {/* ------------------------- row 1 ------------------------- */}\n        <Grid item xs={12} lg={6} sm={6} display='flex' alignItems='stretch'>\n          <BaseCard title='Transition Alert'>\n            <Stack spacing={1}>\n              <Collapse in={open}>\n                <Alert\n                  variant='filled'\n                  severity='info'\n                  action={\n                    <IconButton\n                      aria-label='close'\n                      color='inherit'\n                      size='small'\n                      onClick={() => {\n                        setOpen(false);\n                      }}\n                    >\n                      <FeatherIcon icon='x' width='20' />\n                    </IconButton>\n                  }\n                >\n                  Close me!\n                </Alert>\n              </Collapse>\n              <Button\n                disabled={open}\n                variant='outlined'\n                onClick={() => {\n                  setOpen(true);\n                }}\n              >\n                Re-open\n              </Button>\n            </Stack>\n          </BaseCard>\n        </Grid>\n      </Grid>\n    </PageContainer>\n  );\n};\n\nexport default ExAlert;\n"],"sourceRoot":""}