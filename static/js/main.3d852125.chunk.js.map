{"version":3,"sources":["redux/ducks/userReducer.js","graphql/mutations.js","assets/global/Typography.js","assets/fonts/Poppins/Poppins-SemiBold.ttf","assets/fonts/IBM/IBMPlexSerif-BoldItalic.ttf","assets/global/Override.js","assets/global/Theme-variable.js","assets/global/Shadows.js","graphql/projectQueries.js","styles/Footer.js","components/footer/FooterContainer.js","routes/Router.js","images/logos/logo--dark.png","components/navbar/NavbarData.js","components/navbar/NavbarDropdown.js","components/navbar/LanguageSelect.js","components/hooks/useOutsideAlerter.js","components/navbar/Navbar.js","App.js","redux/sagas/conceptSaga.js","graphql/conceptQueries.js","redux/helpers/conceptSagaHelper.js","graphql/plantsQueries.js","redux/sagas/plantsSaga.js","redux/helpers/plantsSagaHelper.js","redux/sagas/userSaga.js","redux/sagas/projectSaga.js","redux/sagas/rootSaga.js","redux/ConfigureStore.js","reportWebVitals.js","components/utility/i18n.js","views/spinner/Spinner.js","aws-exports.js","index.js","redux/ducks/alertReducer.js","redux/ducks/projectsReducer.js","redux/ducks/conceptsReducer.js","redux/ducks/plantsReducer.js"],"names":["AUTH_STATES","AUTH_UNKNOWN","PRE_AUTHORIZE","SENT_VERIFICATION","FORGOT_PASSWORD_STARTED","CODE_VERIFIED","AUTH_FAILED","AUTHED","SET_AUTH_STATE","LOGIN","LOGIN_GOOGLE","LOGOUT","SIGN_UP","USER_SIGNED_UP","FETCH_USER","FETCH_GOOGLE_USER","FORGOT_PASSWORD","CHANGE_PASSWORD","setAuth","state","type","loginUser","values","loginGoogle","logout","fetchUser","fetchGoogleUser","credentials","signupUser","userSignedUp","data","forgotPassword","changePassword","initialState","user","status","UserReducer","action","createProject","updateProject","deleteProject","createProjectMember","createMember","typography","fontFamily","join","primary","fontWeight","secondary","fontStyle","body1","h1","fontSize","lineHeight","h2","h3","h4","h5","h6","button","textTransform","subtitle1","subtitle2","poppinsSemiBold","fontDisplay","src","Poppins","ibmBoldItalic","IBM","SidebarWidth","TopbarHeight","commonColors","baseTheme","direction","palette","text","disabled","danger","background","main","light","dark","contrastText","success","info","error","warning","grey","A100","A200","A400","A700","disabledBackground","hoverOpacity","hover","shape","borderRadius","mixins","toolbar","color","minHeight","padding","components","MuiCssBaseline","styleOverrides","boxSizing","html","height","width","body","margin","transform","position","right","bottom","alignSelf","borderRight","backgroundPosition","MuiContainer","root","paddingLeft","paddingRight","maxWidth","MuiButton","boxShadow","MuiListItem","MuiCard","MuiListItemIcon","minWidth","MuiGridItem","paddingTop","MuiLinearProgress","backgroundColor","MuiMenuItem","MuiChip","shadows","theme","createTheme","_","merge","mode","default","paper","listProjects","Container","styled","div","Bottom","BottomLeft","BottomRight","Document","a","Wrapper","hr","Column","first","Row","Title","p","FooterLink","mail","Icon","i","Description","Button","Link","FooterContainer","t","useTranslation","to","href","onClick","window","open","Date","getFullYear","target","FullLayout","lazy","BlankLayout","Home","Who","Howitworks","About","Contact","Partner","What","Categories","SingleConcept","SingleCategory","Error","Login","Register","ResetPassword","Dashboard1","Dashboard2","Dashboard3","Plants","ConceptsForCategory","Treeview","Pricing","CustomTimeline","CustomTypography","Calendar","CustomerEdit","CustomerLists","BasicTable","PaginationTable","EnhancedTable","CollapsibleTable","FixedHeaderTable","ExAutoComplete","ExButton","ExCheckbox","ExDateTime","ExRadio","ExSlider","ExSwitch","FormWizard","FormLayouts","FormCustom","WidgetFeed","WidgetApps","UserProfile","ShopDetail","LineChart","GredientChart","DoughnutChart","AreaChart","ColumnChart","CandlestickChart","RadialbarChart","ReactIcons","ExAlert","Router","isLoggedIn","path","element","children","NavbarData","title","className","i18nKey","dropdown","subtitle","NavbarDropdown","props","useState","click","setClick","map","item","index","openLink","Trans","languages","en","code","name","country_code","no","LanguageSelect","selected","cookies","get","menuAnchor","setMenuAnchor","useEffect","ref","dropdownRef","useRef","setDropdown","handleClickOutside","event","current","contains","document","addEventListener","removeEventListener","variant","endIcon","style","Object","keys","language","i18next","changeLanguage","setLang","Navbar","navigate","useNavigate","lgUp","useMediaQuery","breakpoints","down","dropdownAbout","dropdownGreenspaces","dropdownContact","navDropdown","setNavDropdown","closeMobileMenu","undefined","indexOf","go","onMouseLeave","logo","alt","onMouseEnter","innerWidth","console","log","Stack","spacing","textDecoration","IconButton","size","connect","React","googleCreds","JSON","parse","localStorage","getItem","location","useLocation","routing","useRoutes","ThemeProvider","CssBaseline","pathname","fetchCategories","fetchConcepts","watchCatFetch","watchConceptsFetch","conceptSaga","call","API","query","authMode","items","listCategorys","categories","tempPlants","plants","plant","norwegian_name","latin_name","put","CATEGORIES_FETCHED","payload","listConcepts","concepts","concept","id","metadata","quantity","c","category","category_name","CONCEPTS_FETCHED","takeEvery","FETCH_CATEGORIES","FETCH_CONCEPTS","all","fetchPlants","watchPlantsFetch","plantsSaga","listPlants","PLANTS_SET_STATE","FETCH_PLANTS","login","signUp","watchLoginUser","watchLoginGoogleUser","watchSignupUser","watchLogoutUser","watchFetchUser","watchFetchGoogleUser","watchForgotPassword","watchChangePassword","userSaga","Auth","username","email","password","loginPassword","setAlertAction","message","attributes","phone_number","phone","role","ga","gapi","auth2","getAuthInstance","Promise","resolve","reject","signIn","then","googleUser","getAuthResponse","id_token","expires_at","profile","getBasicProfile","getEmail","getName","federatedSignIn","token","forgotPasswordSubmit","takeLatest","fetchProjects","addProject","watchProjectsFetch","watchProjectAdd","watchProjectDelete","projectSaga","projects","SET_PROJECTS_STATE","deleteP","variables","input","PROJECT_DELETED","zip","city","address","description","projectDetails","uuidv4","postalCode","FETCH_PROJECTS","ADD_PROJECT","DELETE_PROJECT","watcherSaga","reducer","combineReducers","userReducer","alert","alertReducer","conceptsReducer","plantsReducer","projectsReducer","sagaMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","run","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","i18n","use","LanguageDetector","initReactI18next","HttpApi","init","supportedLngs","fallbackLng","detection","order","backend","loadPath","react","useSuspense","Spinner","awsmobile","aws_project_region","aws_cognito_identity_pool_id","aws_cognito_region","aws_user_pools_id","aws_user_pools_web_client_id","oauth","aws_cognito_username_attributes","aws_cognito_social_providers","aws_cognito_signup_attributes","aws_cognito_mfa_configuration","aws_cognito_mfa_types","aws_cognito_password_protection_settings","passwordPolicyMinLength","passwordPolicyCharacters","aws_cognito_verification_mechanisms","aws_user_files_s3_bucket","aws_user_files_s3_bucket_region","aws_dynamodb_all_tables_region","aws_dynamodb_table_schemas","tableName","region","aws_appsync_graphqlEndpoint","aws_appsync_region","aws_appsync_authenticationType","aws_appsync_apiKey","aws_cloud_logic_custom","endpoint","updatedAwsConfig","config","redirectSignIn","redirectSignOut","Amplify","configure","require","subscribe","getState","ReactDOM","render","fallback","getElementById","SET_ALERT","RESET_ALERT","msg","resetAlertAction","AlertReducer","OPEN_MODAL","openAddProjectModal","addProjectModalOpen","currentMember","members","ProjectsReducer","filter","project","selectConceptFromCategory","categoryName","some","ConceptsReducer","PlantsReducer"],"mappings":"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","file":"static/js/main.3d852125.chunk.js","sourcesContent":["export const AUTH_STATES = {\r\n  AUTH_UNKNOWN: 'AUTH_UNKNOWN',\r\n  PRE_AUTHORIZE: 'PRE_AUTHORIZE',\r\n  SENT_VERIFICATION: 'SENT_VERIFICATION',\r\n  FORGOT_PASSWORD_STARTED: 'FORGOT_PASSWORD_STARTED',\r\n  CODE_VERIFIED: 'CODE_VERIFIED',\r\n  AUTH_FAILED: 'AUTH_FAILED',\r\n  AUTHED: 'AUTHED',\r\n};\r\n\r\n//actions\r\nexport const SET_AUTH_STATE = 'setAuth';\r\nexport const LOGIN = 'loginUser';\r\nexport const LOGIN_GOOGLE = 'loginGoogle';\r\nexport const LOGOUT = 'logout';\r\nexport const SIGN_UP = 'signupUser';\r\nconst USER_SIGNED_UP = 'userSignedUp';\r\nexport const FETCH_USER = 'fetchUser';\r\nexport const FETCH_GOOGLE_USER = 'fetchGoogleUser';\r\nexport const FORGOT_PASSWORD = 'forgotPassword';\r\nexport const CHANGE_PASSWORD = 'changePassword';\r\n\r\nexport const setAuth = (state) => ({\r\n  type: SET_AUTH_STATE,\r\n  state,\r\n});\r\n\r\nexport const loginUser = (values) => ({\r\n  type: LOGIN,\r\n  values,\r\n});\r\n\r\nexport const loginGoogle = (values) => ({\r\n  type: LOGIN_GOOGLE,\r\n  values,\r\n});\r\n\r\nexport const logout = () => ({\r\n  type: LOGOUT,\r\n});\r\n\r\nexport const fetchUser = () => ({\r\n  type: FETCH_USER,\r\n});\r\n\r\nexport const fetchGoogleUser = (credentials) => ({\r\n  type: FETCH_GOOGLE_USER,\r\n  credentials,\r\n});\r\n\r\nexport const signupUser = (values) => ({\r\n  type: SIGN_UP,\r\n  values,\r\n});\r\n\r\nexport const userSignedUp = (data) => ({\r\n  type: USER_SIGNED_UP,\r\n  data,\r\n});\r\n\r\nexport const forgotPassword = (values) => {\r\n  return {\r\n    type: FORGOT_PASSWORD,\r\n    values,\r\n  };\r\n};\r\n\r\nexport const changePassword = (values) => {\r\n  return {\r\n    type: CHANGE_PASSWORD,\r\n    values,\r\n  };\r\n};\r\n\r\nexport const initialState = {\r\n  //contains email, name, custom:role\r\n  user: null,\r\n  status: AUTH_STATES.AUTH_UNKNOWN,\r\n};\r\n\r\nconst UserReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_AUTH_STATE:\r\n      return { ...state, ...action.state };\r\n    case USER_SIGNED_UP:\r\n      return { ...state, ...action.values };\r\n    case FORGOT_PASSWORD:\r\n      return { ...state, ...action.values };\r\n    case CHANGE_PASSWORD:\r\n      return { ...state, ...action.values };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default UserReducer;\r\n","/* eslint-disable */\r\n// this is an auto generated file. This will be overwritten\r\n\r\nexport const createPlantMetadata = /* GraphQL */ `\r\n  mutation CreatePlantMetadata(\r\n    $input: CreatePlantMetadataInput!\r\n    $condition: ModelPlantMetadataConditionInput\r\n  ) {\r\n    createPlantMetadata(input: $input, condition: $condition) {\r\n      id\r\n      latin_name\r\n      norwegian_name\r\n      createdAt\r\n      updatedAt\r\n      category {\r\n        items {\r\n          id\r\n          plant_ID\r\n          category_ID\r\n          createdAt\r\n          updatedAt\r\n        }\r\n        nextToken\r\n      }\r\n    }\r\n  }\r\n`;\r\nexport const updatePlantMetadata = /* GraphQL */ `\r\n  mutation UpdatePlantMetadata(\r\n    $input: UpdatePlantMetadataInput!\r\n    $condition: ModelPlantMetadataConditionInput\r\n  ) {\r\n    updatePlantMetadata(input: $input, condition: $condition) {\r\n      id\r\n      latin_name\r\n      norwegian_name\r\n      createdAt\r\n      updatedAt\r\n      category {\r\n        items {\r\n          id\r\n          plant_ID\r\n          category_ID\r\n          createdAt\r\n          updatedAt\r\n        }\r\n        nextToken\r\n      }\r\n    }\r\n  }\r\n`;\r\nexport const deletePlantMetadata = /* GraphQL */ `\r\n  mutation DeletePlantMetadata(\r\n    $input: DeletePlantMetadataInput!\r\n    $condition: ModelPlantMetadataConditionInput\r\n  ) {\r\n    deletePlantMetadata(input: $input, condition: $condition) {\r\n      id\r\n      latin_name\r\n      norwegian_name\r\n      createdAt\r\n      updatedAt\r\n      category {\r\n        items {\r\n          id\r\n          plant_ID\r\n          category_ID\r\n          createdAt\r\n          updatedAt\r\n        }\r\n        nextToken\r\n      }\r\n    }\r\n  }\r\n`;\r\nexport const createPlant = /* GraphQL */ `\r\n  mutation CreatePlant(\r\n    $input: CreatePlantInput!\r\n    $condition: ModelPlantConditionInput\r\n  ) {\r\n    createPlant(input: $input, condition: $condition) {\r\n      id\r\n      metadataID\r\n      createdAt\r\n      updatedAt\r\n      metadata {\r\n        id\r\n        latin_name\r\n        norwegian_name\r\n        createdAt\r\n        updatedAt\r\n        category {\r\n          nextToken\r\n        }\r\n      }\r\n      concepts {\r\n        items {\r\n          id\r\n          plant_id\r\n          concept_id\r\n          quantity\r\n          createdAt\r\n          updatedAt\r\n          owner\r\n        }\r\n        nextToken\r\n      }\r\n    }\r\n  }\r\n`;\r\nexport const updatePlant = /* GraphQL */ `\r\n  mutation UpdatePlant(\r\n    $input: UpdatePlantInput!\r\n    $condition: ModelPlantConditionInput\r\n  ) {\r\n    updatePlant(input: $input, condition: $condition) {\r\n      id\r\n      metadataID\r\n      createdAt\r\n      updatedAt\r\n      metadata {\r\n        id\r\n        latin_name\r\n        norwegian_name\r\n        createdAt\r\n        updatedAt\r\n        category {\r\n          nextToken\r\n        }\r\n      }\r\n      concepts {\r\n        items {\r\n          id\r\n          plant_id\r\n          concept_id\r\n          quantity\r\n          createdAt\r\n          updatedAt\r\n          owner\r\n        }\r\n        nextToken\r\n      }\r\n    }\r\n  }\r\n`;\r\nexport const deletePlant = /* GraphQL */ `\r\n  mutation DeletePlant(\r\n    $input: DeletePlantInput!\r\n    $condition: ModelPlantConditionInput\r\n  ) {\r\n    deletePlant(input: $input, condition: $condition) {\r\n      id\r\n      metadataID\r\n      createdAt\r\n      updatedAt\r\n      metadata {\r\n        id\r\n        latin_name\r\n        norwegian_name\r\n        createdAt\r\n        updatedAt\r\n        category {\r\n          nextToken\r\n        }\r\n      }\r\n      concepts {\r\n        items {\r\n          id\r\n          plant_id\r\n          concept_id\r\n          quantity\r\n          createdAt\r\n          updatedAt\r\n          owner\r\n        }\r\n        nextToken\r\n      }\r\n    }\r\n  }\r\n`;\r\nexport const createConceptPlant = /* GraphQL */ `\r\n  mutation CreateConceptPlant(\r\n    $input: CreateConceptPlantInput!\r\n    $condition: ModelConceptPlantConditionInput\r\n  ) {\r\n    createConceptPlant(input: $input, condition: $condition) {\r\n      id\r\n      plant_id\r\n      concept_id\r\n      quantity\r\n      createdAt\r\n      updatedAt\r\n      plant {\r\n        id\r\n        metadataID\r\n        createdAt\r\n        updatedAt\r\n        metadata {\r\n          id\r\n          latin_name\r\n          norwegian_name\r\n          createdAt\r\n          updatedAt\r\n        }\r\n        concepts {\r\n          nextToken\r\n        }\r\n      }\r\n      owner\r\n      concept {\r\n        id\r\n        name\r\n        owner\r\n        userDefined\r\n        image\r\n        price\r\n        description\r\n        createdAt\r\n        updatedAt\r\n        plants {\r\n          nextToken\r\n        }\r\n        categories {\r\n          nextToken\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\nexport const updateConceptPlant = /* GraphQL */ `\r\n  mutation UpdateConceptPlant(\r\n    $input: UpdateConceptPlantInput!\r\n    $condition: ModelConceptPlantConditionInput\r\n  ) {\r\n    updateConceptPlant(input: $input, condition: $condition) {\r\n      id\r\n      plant_id\r\n      concept_id\r\n      quantity\r\n      createdAt\r\n      updatedAt\r\n      plant {\r\n        id\r\n        metadataID\r\n        createdAt\r\n        updatedAt\r\n        metadata {\r\n          id\r\n          latin_name\r\n          norwegian_name\r\n          createdAt\r\n          updatedAt\r\n        }\r\n        concepts {\r\n          nextToken\r\n        }\r\n      }\r\n      owner\r\n      concept {\r\n        id\r\n        name\r\n        owner\r\n        userDefined\r\n        image\r\n        price\r\n        description\r\n        createdAt\r\n        updatedAt\r\n        plants {\r\n          nextToken\r\n        }\r\n        categories {\r\n          nextToken\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\nexport const deleteConceptPlant = /* GraphQL */ `\r\n  mutation DeleteConceptPlant(\r\n    $input: DeleteConceptPlantInput!\r\n    $condition: ModelConceptPlantConditionInput\r\n  ) {\r\n    deleteConceptPlant(input: $input, condition: $condition) {\r\n      id\r\n      plant_id\r\n      concept_id\r\n      quantity\r\n      createdAt\r\n      updatedAt\r\n      plant {\r\n        id\r\n        metadataID\r\n        createdAt\r\n        updatedAt\r\n        metadata {\r\n          id\r\n          latin_name\r\n          norwegian_name\r\n          createdAt\r\n          updatedAt\r\n        }\r\n        concepts {\r\n          nextToken\r\n        }\r\n      }\r\n      owner\r\n      concept {\r\n        id\r\n        name\r\n        owner\r\n        userDefined\r\n        image\r\n        price\r\n        description\r\n        createdAt\r\n        updatedAt\r\n        plants {\r\n          nextToken\r\n        }\r\n        categories {\r\n          nextToken\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\nexport const createConcept = /* GraphQL */ `\r\n  mutation CreateConcept(\r\n    $input: CreateConceptInput!\r\n    $condition: ModelConceptConditionInput\r\n  ) {\r\n    createConcept(input: $input, condition: $condition) {\r\n      id\r\n      name\r\n      owner\r\n      userDefined\r\n      image\r\n      price\r\n      description\r\n      createdAt\r\n      updatedAt\r\n      plants {\r\n        items {\r\n          id\r\n          plant_id\r\n          concept_id\r\n          quantity\r\n          createdAt\r\n          updatedAt\r\n          owner\r\n        }\r\n        nextToken\r\n      }\r\n      categories {\r\n        items {\r\n          id\r\n          concept_ID\r\n          category_ID\r\n          createdAt\r\n          updatedAt\r\n        }\r\n        nextToken\r\n      }\r\n    }\r\n  }\r\n`;\r\nexport const updateConcept = /* GraphQL */ `\r\n  mutation UpdateConcept(\r\n    $input: UpdateConceptInput!\r\n    $condition: ModelConceptConditionInput\r\n  ) {\r\n    updateConcept(input: $input, condition: $condition) {\r\n      id\r\n      name\r\n      owner\r\n      userDefined\r\n      image\r\n      price\r\n      description\r\n      createdAt\r\n      updatedAt\r\n      plants {\r\n        items {\r\n          id\r\n          plant_id\r\n          concept_id\r\n          quantity\r\n          createdAt\r\n          updatedAt\r\n          owner\r\n        }\r\n        nextToken\r\n      }\r\n      categories {\r\n        items {\r\n          id\r\n          concept_ID\r\n          category_ID\r\n          createdAt\r\n          updatedAt\r\n        }\r\n        nextToken\r\n      }\r\n    }\r\n  }\r\n`;\r\nexport const deleteConcept = /* GraphQL */ `\r\n  mutation DeleteConcept(\r\n    $input: DeleteConceptInput!\r\n    $condition: ModelConceptConditionInput\r\n  ) {\r\n    deleteConcept(input: $input, condition: $condition) {\r\n      id\r\n      name\r\n      owner\r\n      userDefined\r\n      image\r\n      price\r\n      description\r\n      createdAt\r\n      updatedAt\r\n      plants {\r\n        items {\r\n          id\r\n          plant_id\r\n          concept_id\r\n          quantity\r\n          createdAt\r\n          updatedAt\r\n          owner\r\n        }\r\n        nextToken\r\n      }\r\n      categories {\r\n        items {\r\n          id\r\n          concept_ID\r\n          category_ID\r\n          createdAt\r\n          updatedAt\r\n        }\r\n        nextToken\r\n      }\r\n    }\r\n  }\r\n`;\r\nexport const createCategory = /* GraphQL */ `\r\n  mutation CreateCategory(\r\n    $input: CreateCategoryInput!\r\n    $condition: ModelCategoryConditionInput\r\n  ) {\r\n    createCategory(input: $input, condition: $condition) {\r\n      id\r\n      category_name\r\n      description\r\n      createdAt\r\n      updatedAt\r\n      concepts {\r\n        items {\r\n          id\r\n          concept_ID\r\n          category_ID\r\n          createdAt\r\n          updatedAt\r\n        }\r\n        nextToken\r\n      }\r\n      plants {\r\n        items {\r\n          id\r\n          plant_ID\r\n          category_ID\r\n          createdAt\r\n          updatedAt\r\n        }\r\n        nextToken\r\n      }\r\n    }\r\n  }\r\n`;\r\nexport const updateCategory = /* GraphQL */ `\r\n  mutation UpdateCategory(\r\n    $input: UpdateCategoryInput!\r\n    $condition: ModelCategoryConditionInput\r\n  ) {\r\n    updateCategory(input: $input, condition: $condition) {\r\n      id\r\n      category_name\r\n      description\r\n      createdAt\r\n      updatedAt\r\n      concepts {\r\n        items {\r\n          id\r\n          concept_ID\r\n          category_ID\r\n          createdAt\r\n          updatedAt\r\n        }\r\n        nextToken\r\n      }\r\n      plants {\r\n        items {\r\n          id\r\n          plant_ID\r\n          category_ID\r\n          createdAt\r\n          updatedAt\r\n        }\r\n        nextToken\r\n      }\r\n    }\r\n  }\r\n`;\r\nexport const deleteCategory = /* GraphQL */ `\r\n  mutation DeleteCategory(\r\n    $input: DeleteCategoryInput!\r\n    $condition: ModelCategoryConditionInput\r\n  ) {\r\n    deleteCategory(input: $input, condition: $condition) {\r\n      id\r\n      category_name\r\n      description\r\n      createdAt\r\n      updatedAt\r\n      concepts {\r\n        items {\r\n          id\r\n          concept_ID\r\n          category_ID\r\n          createdAt\r\n          updatedAt\r\n        }\r\n        nextToken\r\n      }\r\n      plants {\r\n        items {\r\n          id\r\n          plant_ID\r\n          category_ID\r\n          createdAt\r\n          updatedAt\r\n        }\r\n        nextToken\r\n      }\r\n    }\r\n  }\r\n`;\r\nexport const createConceptCategory = /* GraphQL */ `\r\n  mutation CreateConceptCategory(\r\n    $input: CreateConceptCategoryInput!\r\n    $condition: ModelConceptCategoryConditionInput\r\n  ) {\r\n    createConceptCategory(input: $input, condition: $condition) {\r\n      id\r\n      concept_ID\r\n      category_ID\r\n      createdAt\r\n      updatedAt\r\n      concept {\r\n        id\r\n        name\r\n        owner\r\n        userDefined\r\n        image\r\n        price\r\n        description\r\n        createdAt\r\n        updatedAt\r\n        plants {\r\n          nextToken\r\n        }\r\n        categories {\r\n          nextToken\r\n        }\r\n      }\r\n      category {\r\n        id\r\n        category_name\r\n        description\r\n        createdAt\r\n        updatedAt\r\n        concepts {\r\n          nextToken\r\n        }\r\n        plants {\r\n          nextToken\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\nexport const updateConceptCategory = /* GraphQL */ `\r\n  mutation UpdateConceptCategory(\r\n    $input: UpdateConceptCategoryInput!\r\n    $condition: ModelConceptCategoryConditionInput\r\n  ) {\r\n    updateConceptCategory(input: $input, condition: $condition) {\r\n      id\r\n      concept_ID\r\n      category_ID\r\n      createdAt\r\n      updatedAt\r\n      concept {\r\n        id\r\n        name\r\n        owner\r\n        userDefined\r\n        image\r\n        price\r\n        description\r\n        createdAt\r\n        updatedAt\r\n        plants {\r\n          nextToken\r\n        }\r\n        categories {\r\n          nextToken\r\n        }\r\n      }\r\n      category {\r\n        id\r\n        category_name\r\n        description\r\n        createdAt\r\n        updatedAt\r\n        concepts {\r\n          nextToken\r\n        }\r\n        plants {\r\n          nextToken\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\nexport const deleteConceptCategory = /* GraphQL */ `\r\n  mutation DeleteConceptCategory(\r\n    $input: DeleteConceptCategoryInput!\r\n    $condition: ModelConceptCategoryConditionInput\r\n  ) {\r\n    deleteConceptCategory(input: $input, condition: $condition) {\r\n      id\r\n      concept_ID\r\n      category_ID\r\n      createdAt\r\n      updatedAt\r\n      concept {\r\n        id\r\n        name\r\n        owner\r\n        userDefined\r\n        image\r\n        price\r\n        description\r\n        createdAt\r\n        updatedAt\r\n        plants {\r\n          nextToken\r\n        }\r\n        categories {\r\n          nextToken\r\n        }\r\n      }\r\n      category {\r\n        id\r\n        category_name\r\n        description\r\n        createdAt\r\n        updatedAt\r\n        concepts {\r\n          nextToken\r\n        }\r\n        plants {\r\n          nextToken\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\nexport const createPlantCategory = /* GraphQL */ `\r\n  mutation CreatePlantCategory(\r\n    $input: CreatePlantCategoryInput!\r\n    $condition: ModelPlantCategoryConditionInput\r\n  ) {\r\n    createPlantCategory(input: $input, condition: $condition) {\r\n      id\r\n      plant_ID\r\n      category_ID\r\n      createdAt\r\n      updatedAt\r\n      plant {\r\n        id\r\n        latin_name\r\n        norwegian_name\r\n        createdAt\r\n        updatedAt\r\n        category {\r\n          nextToken\r\n        }\r\n      }\r\n      category {\r\n        id\r\n        category_name\r\n        description\r\n        createdAt\r\n        updatedAt\r\n        concepts {\r\n          nextToken\r\n        }\r\n        plants {\r\n          nextToken\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\nexport const updatePlantCategory = /* GraphQL */ `\r\n  mutation UpdatePlantCategory(\r\n    $input: UpdatePlantCategoryInput!\r\n    $condition: ModelPlantCategoryConditionInput\r\n  ) {\r\n    updatePlantCategory(input: $input, condition: $condition) {\r\n      id\r\n      plant_ID\r\n      category_ID\r\n      createdAt\r\n      updatedAt\r\n      plant {\r\n        id\r\n        latin_name\r\n        norwegian_name\r\n        createdAt\r\n        updatedAt\r\n        category {\r\n          nextToken\r\n        }\r\n      }\r\n      category {\r\n        id\r\n        category_name\r\n        description\r\n        createdAt\r\n        updatedAt\r\n        concepts {\r\n          nextToken\r\n        }\r\n        plants {\r\n          nextToken\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\nexport const deletePlantCategory = /* GraphQL */ `\r\n  mutation DeletePlantCategory(\r\n    $input: DeletePlantCategoryInput!\r\n    $condition: ModelPlantCategoryConditionInput\r\n  ) {\r\n    deletePlantCategory(input: $input, condition: $condition) {\r\n      id\r\n      plant_ID\r\n      category_ID\r\n      createdAt\r\n      updatedAt\r\n      plant {\r\n        id\r\n        latin_name\r\n        norwegian_name\r\n        createdAt\r\n        updatedAt\r\n        category {\r\n          nextToken\r\n        }\r\n      }\r\n      category {\r\n        id\r\n        category_name\r\n        description\r\n        createdAt\r\n        updatedAt\r\n        concepts {\r\n          nextToken\r\n        }\r\n        plants {\r\n          nextToken\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\nexport const createProject = /* GraphQL */ `\r\n  mutation CreateProject(\r\n    $input: CreateProjectInput!\r\n    $condition: ModelProjectConditionInput\r\n  ) {\r\n    createProject(input: $input, condition: $condition) {\r\n      id\r\n      name\r\n      address\r\n      city\r\n      postalCode\r\n      end_date\r\n      owner\r\n      description\r\n      members {\r\n        items {\r\n          id\r\n          project_ID\r\n          member_ID\r\n          createdAt\r\n          updatedAt\r\n        }\r\n        nextToken\r\n      }\r\n      createdAt\r\n      updatedAt\r\n    }\r\n  }\r\n`;\r\nexport const updateProject = /* GraphQL */ `\r\n  mutation UpdateProject(\r\n    $input: UpdateProjectInput!\r\n    $condition: ModelProjectConditionInput\r\n  ) {\r\n    updateProject(input: $input, condition: $condition) {\r\n      id\r\n      name\r\n      address\r\n      city\r\n      postalCode\r\n      end_date\r\n      owner\r\n      description\r\n      members {\r\n        items {\r\n          id\r\n          project_ID\r\n          member_ID\r\n          createdAt\r\n          updatedAt\r\n        }\r\n        nextToken\r\n      }\r\n      createdAt\r\n      updatedAt\r\n    }\r\n  }\r\n`;\r\nexport const deleteProject = /* GraphQL */ `\r\n  mutation DeleteProject(\r\n    $input: DeleteProjectInput!\r\n    $condition: ModelProjectConditionInput\r\n  ) {\r\n    deleteProject(input: $input, condition: $condition) {\r\n      id\r\n      name\r\n      address\r\n      city\r\n      postalCode\r\n      end_date\r\n      owner\r\n      description\r\n      members {\r\n        items {\r\n          id\r\n          project_ID\r\n          member_ID\r\n          createdAt\r\n          updatedAt\r\n        }\r\n        nextToken\r\n      }\r\n      createdAt\r\n      updatedAt\r\n    }\r\n  }\r\n`;\r\nexport const createProjectMember = /* GraphQL */ `\r\n  mutation CreateProjectMember(\r\n    $input: CreateProjectMemberInput!\r\n    $condition: ModelProjectMemberConditionInput\r\n  ) {\r\n    createProjectMember(input: $input, condition: $condition) {\r\n      id\r\n      project_ID\r\n      member_ID\r\n      project {\r\n        id\r\n        name\r\n        address\r\n        city\r\n        postalCode\r\n        end_date\r\n        owner\r\n        description\r\n        members {\r\n          nextToken\r\n        }\r\n        createdAt\r\n        updatedAt\r\n      }\r\n      member {\r\n        id\r\n        username\r\n        role\r\n        name\r\n        projects {\r\n          nextToken\r\n        }\r\n        createdAt\r\n        updatedAt\r\n      }\r\n      createdAt\r\n      updatedAt\r\n    }\r\n  }\r\n`;\r\nexport const updateProjectMember = /* GraphQL */ `\r\n  mutation UpdateProjectMember(\r\n    $input: UpdateProjectMemberInput!\r\n    $condition: ModelProjectMemberConditionInput\r\n  ) {\r\n    updateProjectMember(input: $input, condition: $condition) {\r\n      id\r\n      project_ID\r\n      member_ID\r\n      project {\r\n        id\r\n        name\r\n        address\r\n        city\r\n        postalCode\r\n        end_date\r\n        owner\r\n        description\r\n        members {\r\n          nextToken\r\n        }\r\n        createdAt\r\n        updatedAt\r\n      }\r\n      member {\r\n        id\r\n        username\r\n        role\r\n        name\r\n        projects {\r\n          nextToken\r\n        }\r\n        createdAt\r\n        updatedAt\r\n      }\r\n      createdAt\r\n      updatedAt\r\n    }\r\n  }\r\n`;\r\nexport const deleteProjectMember = /* GraphQL */ `\r\n  mutation DeleteProjectMember(\r\n    $input: DeleteProjectMemberInput!\r\n    $condition: ModelProjectMemberConditionInput\r\n  ) {\r\n    deleteProjectMember(input: $input, condition: $condition) {\r\n      id\r\n      project_ID\r\n      member_ID\r\n      project {\r\n        id\r\n        name\r\n        address\r\n        city\r\n        postalCode\r\n        end_date\r\n        owner\r\n        description\r\n        members {\r\n          nextToken\r\n        }\r\n        createdAt\r\n        updatedAt\r\n      }\r\n      member {\r\n        id\r\n        username\r\n        role\r\n        name\r\n        projects {\r\n          nextToken\r\n        }\r\n        createdAt\r\n        updatedAt\r\n      }\r\n      createdAt\r\n      updatedAt\r\n    }\r\n  }\r\n`;\r\nexport const createMember = /* GraphQL */ `\r\n  mutation CreateMember(\r\n    $input: CreateMemberInput!\r\n    $condition: ModelMemberConditionInput\r\n  ) {\r\n    createMember(input: $input, condition: $condition) {\r\n      id\r\n      username\r\n      role\r\n      name\r\n      projects {\r\n        items {\r\n          id\r\n          project_ID\r\n          member_ID\r\n          createdAt\r\n          updatedAt\r\n        }\r\n        nextToken\r\n      }\r\n      createdAt\r\n      updatedAt\r\n    }\r\n  }\r\n`;\r\nexport const updateMember = /* GraphQL */ `\r\n  mutation UpdateMember(\r\n    $input: UpdateMemberInput!\r\n    $condition: ModelMemberConditionInput\r\n  ) {\r\n    updateMember(input: $input, condition: $condition) {\r\n      id\r\n      username\r\n      role\r\n      name\r\n      projects {\r\n        items {\r\n          id\r\n          project_ID\r\n          member_ID\r\n          createdAt\r\n          updatedAt\r\n        }\r\n        nextToken\r\n      }\r\n      createdAt\r\n      updatedAt\r\n    }\r\n  }\r\n`;\r\nexport const deleteMember = /* GraphQL */ `\r\n  mutation DeleteMember(\r\n    $input: DeleteMemberInput!\r\n    $condition: ModelMemberConditionInput\r\n  ) {\r\n    deleteMember(input: $input, condition: $condition) {\r\n      id\r\n      username\r\n      role\r\n      name\r\n      projects {\r\n        items {\r\n          id\r\n          project_ID\r\n          member_ID\r\n          createdAt\r\n          updatedAt\r\n        }\r\n        nextToken\r\n      }\r\n      createdAt\r\n      updatedAt\r\n    }\r\n  }\r\n`;\r\n","const typography = {\r\n  fontFamily: ['Poppins', 'IBM Plex Serif'].join(','),\r\n  primary: {\r\n    fontFamily: 'Poppins',\r\n    fontWeight: 400,\r\n  },\r\n  secondary: {\r\n    fontFamily: 'IBM Plex Serif',\r\n    fontWeight: 700,\r\n    fontStyle: 'italic',\r\n  },\r\n  body1: {\r\n    fontWeight: 500, //Poppins\r\n  },\r\n  h1: {\r\n    fontSize: '1.875rem',\r\n    lineHeight: '1.5',\r\n  },\r\n  h2: {\r\n    fontWeight: 500,\r\n    fontSize: '1.5rem',\r\n    lineHeight: '1.5',\r\n  },\r\n  h3: {\r\n    fontWeight: 500,\r\n    fontSize: '1.3125rem',\r\n    lineHeight: '1.5',\r\n  },\r\n  h4: {\r\n    fontWeight: 500,\r\n    fontSize: '1.125rem',\r\n    lineHeight: '1.5',\r\n  },\r\n  h5: {\r\n    fontWeight: 500,\r\n    fontSize: '1rem',\r\n    lineHeight: '1.5',\r\n  },\r\n  h6: {\r\n    fontWeight: 500,\r\n    fontSize: '0.875rem',\r\n    lineHeight: '1.5',\r\n  },\r\n  button: {\r\n    textTransform: 'none',\r\n    fontWeight: '400',\r\n  },\r\n  subtitle1: {\r\n    fontSize: '1rem',\r\n    fontWeight: '400',\r\n  },\r\n  subtitle2: {\r\n    fontSize: '0.875rem',\r\n    fontWeight: '400',\r\n  },\r\n};\r\n\r\nexport default typography;\r\n","export default __webpack_public_path__ + \"static/media/Poppins-SemiBold.cce5625b.ttf\";","export default __webpack_public_path__ + \"static/media/IBMPlexSerif-BoldItalic.adc7d962.ttf\";","import Poppins from '../fonts/Poppins/Poppins-SemiBold.ttf';\r\nimport IBM from '../fonts/IBM/IBMPlexSerif-BoldItalic.ttf';\r\n\r\nconst poppinsSemiBold = {\r\n  fontFamily: 'Poppins',\r\n  fontStyle: 'normal',\r\n  fontDisplay: 'swap',\r\n  fontWeight: 600,\r\n  src: `\r\n  local('Poppins SemiBold'),\r\n  local('Poppins-SemiBold'),\r\n    url(${Poppins}) format('ttf')\r\n  `,\r\n};\r\n\r\nconst ibmBoldItalic = {\r\n  fontFamily: 'IBM Plex Serif',\r\n  fontStyle: 'italic',\r\n  fontDisplay: 'swap',\r\n  fontWeight: 700,\r\n  src: `\r\n  local('IBM Plex Serif Bold Italic'),\r\n  local('IBMPlexSerif-BoldItalic'),\r\n    url(${IBM}) format('ttf')\r\n  `,\r\n};\r\n\r\nconst components = {\r\n  MuiCssBaseline: {\r\n    styleOverrides: {\r\n      '*': {\r\n        boxSizing: 'border-box',\r\n      },\r\n      html: {\r\n        height: '100%',\r\n        width: '100%',\r\n      },\r\n      body: {\r\n        height: '100%',\r\n        margin: 0,\r\n        padding: 0,\r\n      },\r\n      '@global': {\r\n        '@font-face': [poppinsSemiBold, ibmBoldItalic],\r\n      },\r\n      '#root': {\r\n        height: '100%',\r\n      },\r\n      \"*[dir='rtl'] .buyNowImg\": {\r\n        transform: 'scaleX(-1)',\r\n      },\r\n\r\n      '.buyNowImg': {\r\n        position: 'absolute',\r\n        right: '-44px',\r\n        bottom: '0px',\r\n        width: '230px',\r\n      },\r\n      '.MuiCardHeader-action': {\r\n        alignSelf: 'center !important',\r\n      },\r\n      '.scrollbar-container': {\r\n        borderRight: '0 !important',\r\n      },\r\n      \"*[dir='rtl'] .welcomebg:before\": {\r\n        backgroundPosition: 'top -24px left -9px !important',\r\n      },\r\n    },\r\n  },\r\n  MuiContainer: {\r\n    styleOverrides: {\r\n      root: {\r\n        paddingLeft: '15px !important',\r\n        paddingRight: '15px !important',\r\n        maxWidth: '1600px',\r\n      },\r\n    },\r\n  },\r\n\r\n  MuiButton: {\r\n    styleOverrides: {\r\n      root: {\r\n        textTransform: 'none',\r\n        boxShadow: 'none',\r\n        fontSize: '15px',\r\n        '&:hover': {\r\n          boxShadow: 'none',\r\n        },\r\n      },\r\n    },\r\n  },\r\n\r\n  MuiListItem: {\r\n    styleOverrides: {\r\n      root: {\r\n        borderRadius: '9px',\r\n      },\r\n    },\r\n  },\r\n\r\n  MuiCard: {\r\n    styleOverrides: {\r\n      root: {\r\n        borderRadius: '20px',\r\n        padding: '14px',\r\n        margin: '15px',\r\n        boxShadow: '0px 7px 30px 0px rgba(90, 114, 123, 0.11)',\r\n      },\r\n    },\r\n  },\r\n\r\n  MuiListItemIcon: {\r\n    styleOverrides: {\r\n      root: {\r\n        minWidth: '40px',\r\n      },\r\n    },\r\n  },\r\n\r\n  MuiGridItem: {\r\n    styleOverrides: {\r\n      root: {\r\n        paddingTop: '30px',\r\n        paddingLeft: '30px !important',\r\n      },\r\n    },\r\n  },\r\n  MuiLinearProgress: {\r\n    styleOverrides: {\r\n      root: {\r\n        backgroundColor: '#ecf0f2',\r\n        borderRadius: '6px',\r\n      },\r\n    },\r\n  },\r\n  MuiMenuItem: {\r\n    styleOverrides: {\r\n      root: {\r\n        borderRadius: '0',\r\n      },\r\n    },\r\n  },\r\n  MuiChip: {\r\n    styleOverrides: {\r\n      root: {\r\n        fontWeight: '500',\r\n        fontSize: '0.75rem',\r\n      },\r\n    },\r\n  },\r\n};\r\n\r\nexport default components;\r\n","import _ from 'lodash';\r\nimport { createTheme } from '@mui/material/styles';\r\nimport typography from './Typography';\r\nimport components from './Override';\r\nimport shadows from './Shadows';\r\n\r\nconst SidebarWidth = 265;\r\nconst TopbarHeight = 70;\r\n\r\nconst commonColors = {\r\n  black: '#111111',\r\n  lightGray: '#DDDDDD',\r\n};\r\n\r\nconst baseTheme = {\r\n  direction: 'ltr',\r\n  palette: {\r\n    text: {\r\n      primary: commonColors.black,\r\n      secondary: commonColors.lightGray,\r\n      disabled: '#9e9e9e',\r\n      danger: '#fc4b6c',\r\n    },\r\n    background: {\r\n      main: commonColors.lightGray,\r\n    },\r\n    primary: {\r\n      main: '#8ca68c',\r\n      light: '#bcd7bc',\r\n      dark: '#5e775f',\r\n      contrastText: '#ffffff',\r\n    },\r\n    secondary: {\r\n      main: '#3e3d3d',\r\n      light: '#7d7a7a',\r\n      dark: '#292828',\r\n    },\r\n    success: {\r\n      main: '#00c292',\r\n      light: '#ebfaf2',\r\n      dark: '#00964b',\r\n      contrastText: '#ffffff',\r\n    },\r\n    danger: {\r\n      main: '#e46a76',\r\n      light: '#fdf3f5',\r\n    },\r\n    info: {\r\n      main: '#0bb2fb',\r\n      light: '#a7e3f4',\r\n    },\r\n    error: {\r\n      main: '#c10810',\r\n    },\r\n    warning: {\r\n      main: '#fec90f',\r\n      light: '#fff4e5',\r\n      dark: '#dcb014',\r\n      contrastText: '#ffffff',\r\n    },\r\n    grey: {\r\n      A100: '#ecf0f2',\r\n      A200: '#99abb4',\r\n      A400: '#767e89',\r\n      A700: '#e6f4ff',\r\n    },\r\n    action: {\r\n      disabledBackground: 'rgba(73,82,88,0.12)',\r\n      hoverOpacity: 0.02,\r\n      hover: 'rgba(0, 0, 0, 0.03)',\r\n    },\r\n  },\r\n\r\n  shape: {\r\n    borderRadius: 5,\r\n  },\r\n  mixins: {\r\n    toolbar: {\r\n      color: '#949db2',\r\n      '@media(min-width:1280px)': {\r\n        minHeight: TopbarHeight,\r\n        padding: '0 30px',\r\n      },\r\n      '@media(max-width:1280px)': {\r\n        minHeight: '64px',\r\n      },\r\n    },\r\n  },\r\n  status: {\r\n    danger: '#e53e3e',\r\n  },\r\n  components,\r\n  typography,\r\n  shadows,\r\n};\r\n\r\nexport const BuildTheme = () => {\r\n  const baseMode = {\r\n    palette: {\r\n      mode: 'light',\r\n      background: {\r\n        default: '#fafbfb',\r\n        dark: '#ffffff',\r\n        paper: '#ffffff',\r\n      },\r\n      text: {\r\n        primary: 'rgba(0, 0, 0, 0.87)',\r\n        secondary: '#777e89',\r\n      },\r\n    },\r\n  };\r\n\r\n  const theme = createTheme(\r\n    _.merge({}, baseTheme, baseMode, {\r\n      direction: 'ltr',\r\n    })\r\n  );\r\n  return theme;\r\n};\r\n\r\nexport const theme = BuildTheme();\r\n\r\nexport { TopbarHeight, SidebarWidth, baseTheme };\r\n","const shadows = [\r\n  'none',\r\n  '0px 2px 3px rgba(0,0,0,0.10)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 2px 2px -2px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 3px 4px -2px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 3px 4px -2px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 6px -2px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 6px -2px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 8px -2px rgba(0,0,0,0.25)',\r\n  '1px 2px 10px rgba(0,0,0,0.08)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 6px 12px -4px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 7px 12px -4px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 6px 16px -4px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 7px 16px -4px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 8px 18px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 9px 18px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 10px 20px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 11px 20px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 12px 22px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 13px 22px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 14px 24px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 16px 28px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 18px 30px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 20px 32px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 22px 34px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 24px 36px -8px rgba(0,0,0,0.25)',\r\n];\r\n\r\nexport default shadows;\r\n","export const listProjects = /* GraphQL */ `\r\n  query ListProjects(\r\n    $filter: ModelProjectFilterInput\r\n    $limit: Int\r\n    $nextToken: String\r\n  ) {\r\n    listProjects(filter: $filter, limit: $limit, nextToken: $nextToken) {\r\n      items {\r\n        id\r\n        name\r\n        address\r\n        city\r\n        postalCode\r\n        end_date\r\n        owner\r\n        description\r\n        createdAt\r\n        updatedAt\r\n        members {\r\n          items {\r\n            member {\r\n              username\r\n              role\r\n              name\r\n            }\r\n          }\r\n        }\r\n      }\r\n      nextToken\r\n    }\r\n  }\r\n`;\r\n","import styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport const Container = styled.div`\r\n  padding: 30px 0px 130px 0px;\r\n  background: radial-gradient(\r\n    circle,\r\n    rgba(62, 61, 61, 1) 0%,\r\n    rgba(79, 77, 77, 1) 100%\r\n  );\r\n  position: relative;\r\n  width: 100%;\r\n  @media (max-width: 1000px) {\r\n    padding: 0px 10px 90px;\r\n  }\r\n`;\r\n\r\nexport const Bottom = styled.div`\r\n  text-align: center;\r\n  padding-top: 15px;\r\n  width: 85%;\r\n  border-top: 1.5px solid white;\r\n  color: white;\r\n  position: absolute;\r\n  left: 50%;\r\n  bottom: 0px;\r\n  transform: translate(-50%, -50%);\r\n  margin: 0 auto;\r\n  font-size: 14px;\r\n\r\n  text-align: justify;\r\n  text-align-last: justify;\r\n`;\r\n\r\nexport const BottomLeft = styled.div`\r\n  float: left;\r\n`;\r\nexport const BottomRight = styled.div`\r\n  float: right;\r\n\r\n  &p {\r\n    margin-left: 10px;\r\n  }\r\n`;\r\n\r\nexport const Document = styled.a`\r\n  color: white;\r\n  display: inline-block;\r\n  cursor: pointer;\r\n  transition: 200ms ease-in;\r\n\r\n  &:nth-child(1) {\r\n    padding: 0 20px;\r\n  }\r\n  &:nth-child(2) {\r\n    padding-left: 20px;\r\n  }\r\n\r\n  &:hover {\r\n    color: #8ca68c;\r\n    transition: 200ms ease-in;\r\n  }\r\n`;\r\n\r\nexport const Separator = styled.hr`\r\n  margin-top: 100px;\r\n  width: 90%;\r\n`;\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n`;\r\n\r\nexport const Column = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  text-align: left;\r\n  margin: ${({ first }) => (first ? '0px 0px 0px 10px' : '0px  0px 0px 60px')};\r\n  transition: all 0.2s ease-in-out;\r\n\r\n  @media (max-width: 1200px) {\r\n    transition: all 0.2s ease-in-out;\r\n    margin: 0px 0px 0px 40px;\r\n  }\r\n`;\r\n\r\nexport const Row = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));\r\n  grid-gap: 20px;\r\n  @media (max-width: 1200px) {\r\n    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\r\n  }\r\n`;\r\n\r\nexport const Title = styled.p`\r\n  font-size: ${({ primary }) => (primary ? '32px' : '22px')};\r\n  color: #fff;\r\n  margin-bottom: ${({ primary }) => (primary ? '10px' : '40px')};\r\n  font-weight: bold;\r\n`;\r\n\r\nexport const FooterLink = styled.a`\r\n  color: #fff;\r\n  margin-bottom: 20px;\r\n  text-decoration: none;\r\n  font-size: 16px;\r\n  cursor: ${({ mail }) => (mail ? 'pointer' : 'default')};\r\n\r\n  &:hover {\r\n    color: #8ca68c;\r\n    transition: 200ms ease-in;\r\n  }\r\n`;\r\n\r\nexport const Icon = styled.i`\r\n  font-size: 18px;\r\n  margin-right: 16px;\r\n`;\r\n\r\nexport const Description = styled.p`\r\n  color: #fff;\r\n  margin-bottom: 40px;\r\n  font-size: 18px;\r\n`;\r\n\r\nexport const Button = styled(Link)`\r\n  background: #8ca68c;\r\n  border-radius: 3px;\r\n  white-space: nowrap;\r\n  padding: 10px 16px;\r\n  color: white;\r\n  font-size: 17px;\r\n  outline: none;\r\n  border: none;\r\n  cursor: pointer;\r\n  display: flex;\r\n  width: fit-content;\r\n  transition: all 0.2s ease-in-out;\r\n  margin-top: 20px;\r\n\r\n  &:hover {\r\n    transition: all 0.2s ease-in-out;\r\n    background: #697a69;\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport {\r\n  Container,\r\n  Wrapper,\r\n  FooterLink,\r\n  Title,\r\n  Column,\r\n  Row,\r\n  Bottom,\r\n  Description,\r\n  Button,\r\n  Icon,\r\n  BottomLeft,\r\n  BottomRight,\r\n  Document,\r\n} from '../../styles/Footer';\r\nimport { GoLocation } from 'react-icons/go';\r\nimport { HiOutlineMail, HiOutlinePhone } from 'react-icons/hi';\r\n\r\nexport function FooterContainer() {\r\n  const { t } = useTranslation();\r\n  return (\r\n    <Container>\r\n      <Wrapper>\r\n        <Row>\r\n          <Column first>\r\n            <Title primary>SquareRoot</Title>\r\n            <Description>{t('footer.description')}</Description>\r\n            <Button to='/contact-us'>{t('footer.button')}</Button>\r\n          </Column>\r\n          <Column>\r\n            <Title>{t('footer.greenspaces')}</Title>\r\n            <FooterLink href='/categories/takterrasse'>\r\n              {t('footer.rooftop')}\r\n            </FooterLink>\r\n            <FooterLink href='/categories/regnseng'>\r\n              {t('footer.rainbed')}\r\n            </FooterLink>\r\n            <FooterLink href='/categories/innendørsplanter'>\r\n              {t('footer.indoor')}\r\n            </FooterLink>\r\n          </Column>\r\n          <Column>\r\n            <Title>{t('footer.about')}</Title>\r\n            <FooterLink href='/who-we-are'>{t('footer.why')}</FooterLink>\r\n            <FooterLink href='/what-we-do'>{t('footer.what')}</FooterLink>\r\n            <FooterLink href='/how-it-works'>{t('footer.how')}</FooterLink>\r\n          </Column>\r\n\r\n          <Column>\r\n            <Title>{t('footer.contact')}</Title>\r\n            <FooterLink>\r\n              <Icon>\r\n                <GoLocation />\r\n              </Icon>\r\n              Thaulows vei 1B, Oslo\r\n            </FooterLink>\r\n            <FooterLink\r\n              mail\r\n              onClick={() => window.open('mailto:michel@squareroot.cc')}\r\n            >\r\n              <Icon>\r\n                <HiOutlineMail />\r\n              </Icon>\r\n              michel@squareroot.cc\r\n            </FooterLink>\r\n            <FooterLink>\r\n              <Icon>\r\n                <HiOutlinePhone />\r\n              </Icon>\r\n              +47 925 57 654\r\n            </FooterLink>\r\n          </Column>\r\n        </Row>\r\n      </Wrapper>\r\n      <Bottom>\r\n        <BottomLeft>&copy; {new Date().getFullYear()} SquareRoot</BottomLeft>\r\n        <BottomRight>\r\n          <Document\r\n            href='https://squareroot-as.github.io/SquareRoot/privacy.html'\r\n            target='_blank'\r\n          >\r\n            Privacy Policy\r\n          </Document>\r\n          |\r\n          <Document\r\n            href='https://squareroot-as.github.io/SquareRoot/tou.html'\r\n            target='_blank'\r\n          >\r\n            Terms of Use\r\n          </Document>\r\n        </BottomRight>\r\n      </Bottom>\r\n    </Container>\r\n  );\r\n}\r\n","import React, { lazy } from 'react';\r\nimport { Navigate } from 'react-router-dom';\r\n\r\n/* ***Layouts**** */\r\nconst FullLayout = lazy(() => import('../layouts/full-layout/FullLayout'));\r\nconst BlankLayout = lazy(() => import('../layouts/blank-layout/BlankLayout'));\r\n/* ***End Layouts**** */\r\n\r\n/* *** Landing page *** */\r\nconst Home = lazy(() => import('../views/landing/Home'));\r\nconst Who = lazy(() => import('../views/landing/Who'));\r\nconst Howitworks = lazy(() => import('../views/landing/Howitworks'));\r\nconst About = lazy(() => import('../views/landing/About'));\r\nconst Contact = lazy(() => import('../views/landing/Contact'));\r\nconst Partner = lazy(() => import('../views/landing/Partner'));\r\nconst What = lazy(() => import('../views/landing/What'));\r\nconst Categories = lazy(() => import('../views/landing/Categories'));\r\nconst SingleConcept = lazy(() => import('../views/landing/SingleConcept'));\r\nconst SingleCategory = lazy(() => import('../views/landing/SingleCategory'));\r\nconst Error = lazy(() => import('../views/Error'));\r\n\r\n/* *** Auth *** */\r\nconst Login = lazy(() => import('../views/authentication/Login'));\r\nconst Register = lazy(() => import('../views/authentication/Register'));\r\nconst ResetPassword = lazy(() =>\r\n  import('../views/authentication/ResetPassword')\r\n);\r\n\r\n/* ****Pages***** */\r\nconst Dashboard1 = lazy(() => import('../views/dashboards/AllProjects'));\r\nconst Dashboard2 = lazy(() => import('../views/dashboards/SingleProject'));\r\nconst Dashboard3 = lazy(() => import('../views/dashboards/Dashboard3'));\r\nconst Plants = lazy(() => import('../views/plants/Plants'));\r\nconst ConceptsForCategory = lazy(() =>\r\n  import('../views/apps/shop/ConceptsForCategory')\r\n);\r\n\r\n/* ****Apps***** */\r\n\r\nconst Treeview = lazy(() => import('../views/treeview/Treeview'));\r\nconst Pricing = lazy(() => import('../views/pricing/Pricing'));\r\nconst CustomTimeline = lazy(() => import('../views/timeline/CustomTimeline'));\r\nconst CustomTypography = lazy(() =>\r\n  import('../views/typography/CustomTypography')\r\n);\r\nconst Calendar = lazy(() => import('../views/apps/calendar/ACalendar'));\r\nconst CustomerEdit = lazy(() => import('../views/apps/customers/CustomerEdit'));\r\nconst CustomerLists = lazy(() =>\r\n  import('../views/apps/customers/CustomerLists')\r\n);\r\n/* ****Tables***** */\r\nconst BasicTable = lazy(() => import('../views/tables/BasicTable'));\r\nconst PaginationTable = lazy(() => import('../views/tables/PaginationTable'));\r\nconst EnhancedTable = lazy(() => import('../views/tables/EnhancedTable'));\r\nconst CollapsibleTable = lazy(() => import('../views/tables/CollapsibleTable'));\r\nconst FixedHeaderTable = lazy(() => import('../views/tables/FixedHeaderTable'));\r\n\r\n// form elements\r\nconst ExAutoComplete = lazy(() =>\r\n  import('../views/form-elements/ExAutoComplete')\r\n);\r\nconst ExButton = lazy(() => import('../views/form-elements/ExButton'));\r\nconst ExCheckbox = lazy(() => import('../views/form-elements/ExCheckbox'));\r\nconst ExDateTime = lazy(() => import('../views/form-elements/ExDateTime'));\r\nconst ExRadio = lazy(() => import('../views/form-elements/ExRadio'));\r\nconst ExSlider = lazy(() => import('../views/form-elements/ExSlider'));\r\nconst ExSwitch = lazy(() => import('../views/form-elements/ExSwitch'));\r\nconst FormWizard = lazy(() => import('../views/form-layouts/FormWizard'));\r\n// form layouts\r\nconst FormLayouts = lazy(() => import('../views/form-layouts/FormLayouts'));\r\nconst FormCustom = lazy(() => import('../views/form-layouts/FormCustom'));\r\n\r\n// widgets\r\nconst WidgetFeed = lazy(() =>\r\n  import('../views/widgets/widget-feed/WidgetFeed')\r\n);\r\nconst WidgetApps = lazy(() =>\r\n  import('../views/widgets/widget-apps/WidgetApps')\r\n);\r\n\r\n// userprofile\r\nconst UserProfile = lazy(() => import('../views/user-profile/UserProfile'));\r\nconst ShopDetail = lazy(() => import('../views/apps/shop-detail/ShopDetail'));\r\n\r\n// chart\r\nconst LineChart = lazy(() => import('../views/charts/LineChart'));\r\nconst GredientChart = lazy(() => import('../views/charts/GredientChart'));\r\nconst DoughnutChart = lazy(() => import('../views/charts/DoughnutChart'));\r\nconst AreaChart = lazy(() => import('../views/charts/AreaChart'));\r\nconst ColumnChart = lazy(() => import('../views/charts/ColumnChart'));\r\nconst CandlestickChart = lazy(() => import('../views/charts/CandlestickChart'));\r\nconst RadialbarChart = lazy(() => import('../views/charts/RadialbarChart'));\r\n\r\n// icons\r\nconst ReactIcons = lazy(() => import('../views/icons/ReactIcons'));\r\n\r\n// Alert\r\nconst ExAlert = lazy(() => import('../views/alert/ExAlert'));\r\n\r\n/* ****Routes***** */\r\n\r\nconst Router = (isLoggedIn) => [\r\n  {\r\n    path: '/',\r\n    element: <BlankLayout />,\r\n    children: [\r\n      /* landing page */\r\n      { path: '/', element: <Home /> },\r\n      { path: 'en', element: <Home /> },\r\n      { path: 'no', element: <Home /> },\r\n      { path: 'who-we-are', element: <Who /> },\r\n      { path: 'how-it-works', element: <Howitworks /> },\r\n      { path: 'about-us', element: <About /> },\r\n      { path: 'become-a-partner', element: <Partner /> },\r\n      { path: 'what-we-do', element: <What /> },\r\n      { path: 'contact-us', element: <Contact /> },\r\n      { path: 'categories', element: <Categories /> },\r\n      { path: 'concepts/:name', element: <SingleConcept /> },\r\n      { path: 'categories/:name', element: <SingleCategory /> },\r\n      { path: '404', element: <Error /> },\r\n\r\n      /* template elements will be refactored later */\r\n\r\n      { path: '/customers/lists', element: <CustomerLists /> },\r\n\r\n      { path: '/calendar', element: <Calendar /> },\r\n      { path: '/customers/edit', element: <CustomerEdit /> },\r\n      { path: '/tables/basic-table', element: <BasicTable /> },\r\n      { path: '/tables/pagination-table', element: <PaginationTable /> },\r\n      { path: '/tables/enhanced-table', element: <EnhancedTable /> },\r\n      { path: '/tables/collapsible-table', element: <CollapsibleTable /> },\r\n      { path: '/tables/fixed-header-table', element: <FixedHeaderTable /> },\r\n      { path: '/form-layouts/form-layouts', element: <FormLayouts /> },\r\n      { path: '/form-elements/autocomplete', element: <ExAutoComplete /> },\r\n      { path: '/form-elements/button', element: <ExButton /> },\r\n      { path: '/form-elements/checkbox', element: <ExCheckbox /> },\r\n      { path: '/form-elements/date-time', element: <ExDateTime /> },\r\n      { path: '/form-elements/radio', element: <ExRadio /> },\r\n      { path: '/form-elements/slider', element: <ExSlider /> },\r\n      { path: '/form-elements/switch', element: <ExSwitch /> },\r\n      { path: '/form-layouts/form-wizard', element: <FormWizard /> },\r\n      { path: '/widgets/widget-feed', element: <WidgetFeed /> },\r\n      { path: '/widgets/widget-apps', element: <WidgetApps /> },\r\n      { path: '/user-profile', element: <UserProfile /> },\r\n      { path: '/shop/shop-detail', element: <ShopDetail /> },\r\n      { path: '/charts/line-chart', element: <LineChart /> },\r\n      { path: '/charts/gredient-chart', element: <GredientChart /> },\r\n      { path: '/charts/doughnut-pie-chart', element: <DoughnutChart /> },\r\n      { path: '/charts/area-chart', element: <AreaChart /> },\r\n      { path: '/charts/column-chart', element: <ColumnChart /> },\r\n      { path: '/charts/candlestick-chart', element: <CandlestickChart /> },\r\n      { path: '/charts/radialbar-chart', element: <RadialbarChart /> },\r\n      { path: '/react-icons', element: <ReactIcons /> },\r\n      { path: '/form-layouts/form-custom', element: <FormCustom /> },\r\n      { path: '/treeview', element: <Treeview /> },\r\n      { path: '/pricing', element: <Pricing /> },\r\n      { path: '/timeline', element: <CustomTimeline /> },\r\n      { path: '/typography', element: <CustomTypography /> },\r\n      { path: '/alert', element: <ExAlert /> },\r\n      { path: '*', element: <Navigate to='/404' /> },\r\n    ],\r\n  },\r\n  /* platform */\r\n  {\r\n    path: 'dashboard',\r\n    element: isLoggedIn ? <FullLayout /> : <Navigate to='/auth/login' />,\r\n    children: [\r\n      { path: '', element: <Dashboard1 /> },\r\n      { path: ':name', element: <Dashboard2 /> },\r\n      { path: 'plants', element: <Plants /> },\r\n      { path: 'dashboard3', element: <Dashboard3 /> },\r\n      { path: 'concepts/:name', element: <ConceptsForCategory /> },\r\n      { path: 'shop/shop-detail', element: <ShopDetail /> },\r\n      { path: '*', element: <Navigate to='/404' /> },\r\n    ],\r\n  },\r\n  /* auth */\r\n  {\r\n    path: 'auth',\r\n    element: !isLoggedIn ? <BlankLayout /> : <Navigate to='/dashboard' />,\r\n    children: [\r\n      { path: 'login', element: <Login /> },\r\n      { path: 'register', element: <Register /> },\r\n      { path: 'reset-password', element: <ResetPassword /> },\r\n      { path: '*', element: <Navigate to='/404' /> },\r\n    ],\r\n  },\r\n];\r\n\r\nexport default Router;\r\n","export default __webpack_public_path__ + \"static/media/logo--dark.445cdfdd.png\";","export const NavbarData = [\r\n  {\r\n    title: 'HOME',\r\n    path: '/',\r\n    className: 'sidebar-text',\r\n    i18nKey: 'home',\r\n  },\r\n  {\r\n    title: 'WHO WE ARE',\r\n    path: '/who-we-are',\r\n    className: 'sidebar-text',\r\n    i18nKey: 'who',\r\n  },\r\n  {\r\n    title: 'PROJECTS',\r\n    path: '/categories',\r\n    className: 'sidebar-text',\r\n    i18nKey: 'greenspaces',\r\n    dropdown: 'dropdownGreenspaces',\r\n    subtitle: [\r\n      {\r\n        title: 'ROOFTOP',\r\n        i18nKey: 'rooftop',\r\n        path: '/categories/takhage',\r\n        className: 'd-link',\r\n      },\r\n      {\r\n        title: 'RAINBED',\r\n        i18nKey: 'rainbed',\r\n        path: '/categories/regnbed',\r\n        className: 'd-link',\r\n      },\r\n      {\r\n        title: 'INDOOR',\r\n        i18nKey: 'indoor',\r\n        path: '/categories/innendørsplanter',\r\n        className: 'd-link',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    title: 'CONTACT',\r\n    path: '/contact',\r\n    i18nKey: 'contact',\r\n    className: 'sidebar-text',\r\n    dropdown: 'dropdownContact',\r\n    subtitle: [\r\n      {\r\n        title: 'CONTACT US',\r\n        i18nKey: 'contactU',\r\n        path: '/contact-us',\r\n        className: 'd-link',\r\n      },\r\n      {\r\n        title: 'BECOME A PARTNER',\r\n        i18nKey: 'partner',\r\n        path: '/become-a-partner',\r\n        className: 'd-link',\r\n      },\r\n    ],\r\n  },\r\n];\r\n","import React, { useState } from 'react';\r\nimport { NavbarData } from './NavbarData';\r\nimport './Dropdown.css';\r\nimport { Link } from 'react-router-dom';\r\nimport { Trans } from 'react-i18next';\r\n\r\nexport default function NavbarDropdown(props) {\r\n  const [click, setClick] = useState(false);\r\n  const handleClick = () => setClick(!click);\r\n\r\n  return (\r\n    <>\r\n      <ul onClick={handleClick} className={click ? 'd-menu clicked' : 'd-menu'}>\r\n        {NavbarData.map(\r\n          (item) =>\r\n            item.subtitle &&\r\n            item === props.item &&\r\n            item.subtitle.map((subtitle, index) => (\r\n              <li key={index}>\r\n                <Link\r\n                  className={subtitle.className}\r\n                  to={subtitle.path}\r\n                  onClick={() => props.openLink(subtitle.path)}\r\n                >\r\n                  <Trans i18nKey={subtitle.i18nKey}>{subtitle.title}</Trans>\r\n                </Link>\r\n              </li>\r\n            ))\r\n        )}\r\n      </ul>\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport useOutsideAlerter from '../hooks/useOutsideAlerter';\r\nimport i18next from 'i18next';\r\nimport cookies from 'js-cookie';\r\nimport DownIcon from '@mui/icons-material/KeyboardArrowDown';\r\nimport { Button } from '@mui/material';\r\n\r\nconst languages = {\r\n  en: {\r\n    code: 'en',\r\n    name: 'English',\r\n    country_code: 'gb',\r\n  },\r\n  no: {\r\n    code: 'no',\r\n    name: 'Norsk',\r\n    country_code: 'no',\r\n  },\r\n};\r\n\r\nexport default function LanguageSelect() {\r\n  const selected = cookies.get('i18next') || 'en';\r\n  const [menuAnchor, setMenuAnchor] = useState(null);\r\n\r\n  useEffect(() => {\r\n    setMenuAnchor(languages[selected]);\r\n  }, [selected]);\r\n\r\n  const dropdownRef = useRef(null);\r\n  useOutsideAlerter(dropdownRef, () => setDropdown(false));\r\n  const [dropdown, setDropdown] = useState(false);\r\n\r\n  const setLang = (language) => {\r\n    setDropdown(!dropdown);\r\n    setMenuAnchor(languages[language]);\r\n    i18next.changeLanguage(language);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div ref={dropdownRef}>\r\n        <Button\r\n          variant='outlined'\r\n          endIcon={<DownIcon />}\r\n          onClick={() => setDropdown(!dropdown)}\r\n        >\r\n          <span\r\n            style={{ 'margin-right': '10px' }}\r\n            className={\r\n              menuAnchor\r\n                ? `flag-icon flag-icon-${menuAnchor.country_code} mx-2`\r\n                : `flag-icon flag-icon-${languages[selected].country_code} mx-2`\r\n            }\r\n          />\r\n          {menuAnchor ? menuAnchor.name : languages[selected].name}\r\n        </Button>\r\n        {dropdown && (\r\n          <ul onClick={() => setDropdown(false)} className='d-language-menu'>\r\n            {Object.keys(languages).map((language) => (\r\n              <li key={languages[language].country_code}>\r\n                <button\r\n                  name={language}\r\n                  className='d-language'\r\n                  onClick={() => setLang(language)}\r\n                >\r\n                  <span\r\n                    className={`flag-icon flag-icon-${languages[language].country_code} mx-2`}\r\n                  />\r\n                  {languages[language].name}\r\n                </button>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import { useEffect } from 'react';\r\n\r\n/**\r\n * Hook that alerts clicks outside of the passed ref\r\n */\r\nexport default function useOutsideAlerter(ref, action) {\r\n  useEffect(() => {\r\n    /**\r\n     * Alert if clicked on outside of element\r\n     */\r\n    function handleClickOutside(event) {\r\n      if (ref.current && !ref.current.contains(event.target)) {\r\n        //alert(\"You clicked outside of me!\");\r\n        action();\r\n      }\r\n    }\r\n\r\n    // Bind the event listener\r\n    document.addEventListener('mousedown', handleClickOutside);\r\n    return () => {\r\n      // Unbind the event listener on clean up\r\n      document.removeEventListener('mousedown', handleClickOutside);\r\n    };\r\n  }, [ref]);\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport logo from '../../images/logos/logo--dark.png';\r\nimport { Link, NavLink, useNavigate } from 'react-router-dom';\r\nimport { NavbarData } from './NavbarData';\r\nimport NavbarDropdown from './NavbarDropdown';\r\nimport { Trans, useTranslation } from 'react-i18next';\r\nimport LanguageSelect from './LanguageSelect';\r\nimport { Button, IconButton, Stack, useMediaQuery } from '@mui/material';\r\nimport GoIcon from '@mui/icons-material/ChevronRight';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\n\r\nfunction Navbar(props) {\r\n  let navigate = useNavigate();\r\n  const lgUp = useMediaQuery((theme) => theme.breakpoints.down('lg'));\r\n  const { t } = useTranslation();\r\n  const [click, setClick] = useState(false);\r\n  const [navDropdown, setNavDropdown] = useState({\r\n    dropdownAbout: false,\r\n    dropdownGreenspaces: false,\r\n    dropdownContact: false,\r\n  });\r\n\r\n  useEffect(() => {\r\n    closeMobileMenu();\r\n  }, [lgUp]);\r\n\r\n  const handleClick = () => setClick(!click);\r\n  const closeMobileMenu = (path) => {\r\n    setClick(false);\r\n    if (path === undefined) return;\r\n    else {\r\n      navigate(path);\r\n      if (path.indexOf('/categories') > -1) navigate.go(0);\r\n    }\r\n  };\r\n\r\n  const onMouseEnter = (dropdown) => {\r\n    if (window.innerWidth < 1190) {\r\n      setNavDropdown(false);\r\n    } else {\r\n      setNavDropdown({ [dropdown]: true });\r\n    }\r\n    console.log(dropdown);\r\n  };\r\n\r\n  const onMouseLeave = () => {\r\n    setNavDropdown(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <nav className='nav'>\r\n        <div className='nav-header'>\r\n          <Link to='/'>\r\n            <img src={logo} alt='SQUAREROOT' />\r\n          </Link>\r\n        </div>\r\n        {click ? (\r\n          <ul className='nav-menu active'>\r\n            {NavbarData.map((item, index) => (\r\n              <>\r\n                {!item.dropdown ? (\r\n                  <NavLink\r\n                    to={item.path}\r\n                    key={item.path}\r\n                    className='nav-links-no-hover'\r\n                    onClick={() => closeMobileMenu(item.path)}\r\n                  >\r\n                    <Trans i18nKey={item.i18nKey}>{item.title}</Trans>\r\n                  </NavLink>\r\n                ) : (\r\n                  <div\r\n                    key={index}\r\n                    className='nav-links-no-hover-title'\r\n                    onClick={() => closeMobileMenu(undefined)}\r\n                  >\r\n                    <Trans i18nKey={item.i18nKey}>{item.title}</Trans>\r\n                  </div>\r\n                )}\r\n                {item.subtitle &&\r\n                  item.subtitle.map((item, index) => (\r\n                    <NavLink\r\n                      to={item.path}\r\n                      key={item.path}\r\n                      className='sub-item'\r\n                      onClick={() => closeMobileMenu(item.path)}\r\n                    >\r\n                      <Trans i18nKey={item.i18nKey}>{item.title}</Trans>\r\n                    </NavLink>\r\n                  ))}\r\n              </>\r\n            ))}\r\n          </ul>\r\n        ) : (\r\n          <ul className='nav-menu'>\r\n            {NavbarData.map((item, index) =>\r\n              item.dropdown ? (\r\n                <li\r\n                  key={item.path}\r\n                  className='nav-item'\r\n                  onMouseEnter={() => onMouseEnter(item.dropdown)}\r\n                  onMouseLeave={onMouseLeave}\r\n                >\r\n                  <div\r\n                    className='nav-links-no-hover-title'\r\n                    onClick={() => closeMobileMenu(undefined)}\r\n                  >\r\n                    <Trans i18nKey={item.i18nKey}>{item.title}</Trans>\r\n                    <i className='fas fa-caret-down' />\r\n                  </div>\r\n                  {\r\n                    {\r\n                      dropdownGreenspaces: navDropdown.dropdownGreenspaces && (\r\n                        <NavbarDropdown\r\n                          {...props}\r\n                          item={item}\r\n                          openLink={closeMobileMenu}\r\n                        />\r\n                      ),\r\n                      dropdownAbout: navDropdown.dropdownAbout && (\r\n                        <NavbarDropdown\r\n                          {...props}\r\n                          item={item}\r\n                          openLink={closeMobileMenu}\r\n                        />\r\n                      ),\r\n                      dropdownContact: navDropdown.dropdownContact && (\r\n                        <NavbarDropdown\r\n                          {...props}\r\n                          item={item}\r\n                          openLink={closeMobileMenu}\r\n                        />\r\n                      ),\r\n                    }[item.dropdown]\r\n                  }\r\n                </li>\r\n              ) : (\r\n                <li key={index} className='nav-item'>\r\n                  {!item.dropdown ? (\r\n                    <NavLink\r\n                      to={item.path}\r\n                      className={click ? 'nav-links-no-hover' : 'nav-links'}\r\n                      onClick={() => closeMobileMenu(item.path)}\r\n                    >\r\n                      <Trans i18nKey={item.i18nKey}>{item.title}</Trans>\r\n                    </NavLink>\r\n                  ) : (\r\n                    <div\r\n                      className={\r\n                        click ? 'nav-links-no-hover-title' : 'nav-links-title'\r\n                      }\r\n                      onClick={() => closeMobileMenu(undefined)}\r\n                    >\r\n                      <Trans i18nKey={item.i18nKey}>{item.title}</Trans>\r\n                    </div>\r\n                  )}\r\n                </li>\r\n              )\r\n            )}\r\n          </ul>\r\n        )}\r\n        <ul className='navbar-nav'>\r\n          <Stack direction='row' spacing={2}>\r\n            {/*language */}\r\n            <LanguageSelect />\r\n            {/* platform */}\r\n            <Link\r\n              style={{\r\n                textDecoration: 'none',\r\n              }}\r\n              to='/dashboard'\r\n            >\r\n              <Button variant='contained' endIcon={<GoIcon />}>\r\n                Visit Platform\r\n              </Button>\r\n            </Link>\r\n\r\n            {/*sidebar*/}\r\n            {lgUp && (\r\n              <IconButton\r\n                aria-label='delete'\r\n                size='large'\r\n                onClick={handleClick}\r\n              >\r\n                {!click ? <MenuIcon /> : <CloseIcon />}\r\n              </IconButton>\r\n            )}\r\n          </Stack>\r\n        </ul>\r\n      </nav>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","import React from 'react';\r\nimport { useRoutes, useLocation, Outlet, useNavigate } from 'react-router-dom';\r\nimport { CssBaseline, ThemeProvider } from '@mui/material';\r\nimport Router from './routes/Router';\r\nimport 'react-perfect-scrollbar/dist/css/styles.css';\r\nimport './App.css';\r\nimport Navbar from './components/navbar/Navbar';\r\nimport { FooterContainer } from './components/footer/FooterContainer';\r\nimport { theme } from './assets/global/Theme-variable';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  fetchUser,\r\n  AUTH_STATES,\r\n  fetchGoogleUser,\r\n} from './redux/ducks/userReducer';\r\n\r\nconst App = (props) => {\r\n  const { status, fetchUser, fetchGoogleUser } = props;\r\n  let navigate = useNavigate();\r\n\r\n  React.useEffect(() => {\r\n    if (\r\n      status === AUTH_STATES.AUTH_FAILED ||\r\n      status === AUTH_STATES.SENT_VERIFICATION ||\r\n      status === AUTH_STATES.FORGOT_PASSWORD_STARTED\r\n    )\r\n      return;\r\n\r\n    if (status === AUTH_STATES.CODE_VERIFIED) navigate('/auth/login');\r\n\r\n    let googleCreds =\r\n      JSON.parse(localStorage.getItem('aws-amplify-federatedInfo')) ===\r\n      undefined\r\n        ? null\r\n        : JSON.parse(localStorage.getItem('aws-amplify-federatedInfo'));\r\n\r\n    if (googleCreds) {\r\n      fetchGoogleUser(googleCreds);\r\n    } else {\r\n      fetchUser();\r\n    }\r\n  }, [status, fetchUser, fetchGoogleUser, navigate]);\r\n\r\n  let location = useLocation();\r\n  let isLoggedIn = status === AUTH_STATES.AUTHED;\r\n  let routing = useRoutes(Router(isLoggedIn));\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <CssBaseline />\r\n      {location.pathname.indexOf('/auth') <= -1 &&\r\n        location.pathname.indexOf('/dashboard') <= -1 && <Navbar />}\r\n      {routing}\r\n      {location.pathname.indexOf('/auth') <= -1 &&\r\n        location.pathname.indexOf('/dashboard') <= -1 &&\r\n        location.pathname !== '/forgotpassword' && <FooterContainer />}\r\n      <Outlet />\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ user }) => ({\r\n  status: user.status,\r\n});\r\n\r\nexport default connect(mapStateToProps, { fetchUser, fetchGoogleUser })(App);\r\n","import { call, put, all, takeEvery } from 'redux-saga/effects';\r\nimport { listCategorys, listConcepts } from '../../graphql/conceptQueries';\r\nimport { API } from 'aws-amplify';\r\nimport {\r\n  CONCEPTS_FETCHED,\r\n  CATEGORIES_FETCHED,\r\n  FETCH_CATEGORIES,\r\n  FETCH_CONCEPTS,\r\n} from '../ducks/conceptsReducer';\r\nimport {\r\n  formatCategoryData,\r\n  formatConceptData,\r\n} from '../helpers/conceptSagaHelper';\r\n\r\nexport function* fetchCategories() {\r\n  try {\r\n    const { data } = yield call([API, 'graphql'], {\r\n      query: listCategorys,\r\n      authMode: 'API_KEY',\r\n    });\r\n    let categories = formatCategoryData(data.listCategorys.items);\r\n    yield put({ type: CATEGORIES_FETCHED, payload: categories });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n}\r\n\r\nexport function* fetchConcepts() {\r\n  try {\r\n    const { data } = yield call([API, 'graphql'], {\r\n      query: listConcepts,\r\n      authMode: 'API_KEY',\r\n    });\r\n    let concepts = formatConceptData(data.listConcepts.items);\r\n    yield put({ type: CONCEPTS_FETCHED, payload: concepts });\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nfunction* watchCatFetch() {\r\n  yield takeEvery(FETCH_CATEGORIES, fetchCategories);\r\n}\r\n\r\nfunction* watchConceptsFetch() {\r\n  yield takeEvery(FETCH_CONCEPTS, fetchConcepts);\r\n}\r\n\r\nexport function* conceptSaga() {\r\n  yield all([watchCatFetch(), watchConceptsFetch()]);\r\n}\r\n","export const listCategorys = /* GraphQL */ `\r\n  query ListCategorys(\r\n    $filter: ModelCategoryFilterInput\r\n    $limit: Int\r\n    $nextToken: String\r\n  ) {\r\n    listCategorys(filter: $filter, limit: $limit, nextToken: $nextToken) {\r\n      items {\r\n        id\r\n        category_name\r\n        concepts {\r\n          items {\r\n            concept {\r\n              name\r\n            }\r\n          }\r\n        }\r\n        plants {\r\n          items {\r\n            plant {\r\n              norwegian_name\r\n              latin_name\r\n            }\r\n          }\r\n        }\r\n      }\r\n      nextToken\r\n    }\r\n  }\r\n`;\r\n\r\nexport const listConcepts = /* GraphQL */ `\r\n  query ListConcepts(\r\n    $filter: ModelConceptFilterInput\r\n    $limit: Int\r\n    $nextToken: String\r\n  ) {\r\n    listConcepts(filter: $filter, limit: $limit, nextToken: $nextToken) {\r\n      items {\r\n        id\r\n        name\r\n        owner\r\n        userDefined\r\n        image\r\n        price\r\n        description\r\n        createdAt\r\n        updatedAt\r\n        categories {\r\n          items {\r\n            category {\r\n              category_name\r\n            }\r\n          }\r\n        }\r\n        plants {\r\n          items {\r\n            quantity\r\n            plant {\r\n              id\r\n              metadata {\r\n                norwegian_name\r\n                latin_name\r\n                #type\r\n                #native\r\n                #norwegian_nursery\r\n                #size_in_cm\r\n                #image\r\n\r\n                #climate_zone\r\n                #pollinator_friendly\r\n                #edible\r\n                #rain_garden\r\n                #pet_kids_friendly\r\n                #air_puryfying\r\n                #sun_seeker\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n      nextToken\r\n    }\r\n  }\r\n`;\r\nexport const createConceptPlant = /* GraphQL */ `\r\n  mutation CreateConceptPlant(\r\n    $input: CreateConceptPlantInput!\r\n    $condition: ModelConceptPlantConditionInput\r\n  ) {\r\n    createConceptPlant(input: $input, condition: $condition) {\r\n      id\r\n      plant_id\r\n      concept_id\r\n      quantity\r\n      createdAt\r\n      updatedAt\r\n      owner\r\n    }\r\n  }\r\n`;\r\n","export const formatCategoryData = (items) => {\r\n  let categorys = items.map((item) => {\r\n    let tempPlants = item.plants.items.map((plant) => {\r\n      let norwegian_name = plant.plant.norwegian_name ?? '';\r\n      let latin_name = plant.plant.latin_name ?? '';\r\n      let p = { norwegian_name, latin_name };\r\n      return p;\r\n    });\r\n    let category = { ...item, plants: tempPlants };\r\n    return category;\r\n  });\r\n  return categorys;\r\n};\r\n\r\nexport const formatConceptData = (items) => {\r\n  let tempConcepts = items.map((concept) => {\r\n    let plants = concept.plants.items.map((p) => {\r\n      let id = p.plant.id;\r\n      let metadata = p.plant.metadata;\r\n      let quantity = p.quantity;\r\n      let plant = { id, quantity, ...metadata };\r\n      return plant;\r\n    });\r\n    let categories = concept.categories.items.map((c) => {\r\n      return c.category.category_name;\r\n    });\r\n    let c = {\r\n      ...concept,\r\n      plants,\r\n      categories,\r\n    };\r\n    return c;\r\n  });\r\n  return tempConcepts;\r\n};\r\n\r\n/*\r\ntruthyObjLoop = (user) => {\r\n    for (var key in user) {\r\n      if (user.hasOwnProperty(key) && !user[key]) delete user[key];\r\n    }\r\n    return user;\r\n  };\r\n\r\n  highest = (arr) =>\r\n    (arr || []).reduce(\r\n      (acc, el) => {\r\n        acc.k[el] = acc.k[el] ? acc.k[el] + 1 : 1;\r\n        acc.max = acc.max ? (acc.max < acc.k[el] ? el : acc.max) : el;\r\n        return acc;\r\n      },\r\n      { k: {} }\r\n    ).max;\r\n\r\nformatConceptData(items) {\r\n  /*let maintenance = items.map((item) => {\r\n    let tempItems = item.plants.items.map((p) => {\r\n      return p.plant.metadata.sun_seeker;\r\n    });\r\n    return tempItems;\r\n  });\r\n  let m = this.highest(maintenance[0]);*/\r\n/*let tempItems = items.map((item) => {\r\n    let benefits;\r\n\r\n    let tempPlants = item.plants.items.map((p) => {\r\n      let id = p.plant.id;\r\n      let metadata = p.plant.metadata;\r\n      let quantity = p.quantity;\r\n      let plant = { id, quantity, ...metadata };\r\n      console.log(plant);\r\n      /*const {\r\n        pollinator_friendly,\r\n        edible,\r\n        pet_kids_friendly,\r\n        air_puryfying,\r\n      } = metadata;\r\n\r\n      benefits = {\r\n        pollinator_friendly: pollinator_friendly,\r\n        edible: edible,\r\n        pet_kids_friendly: pet_kids_friendly,\r\n        air_puryfying: air_puryfying,\r\n      };\r\n      this.truthyObjLoop(benefits);*/\r\n/*return plant;\r\n    });\r\n    let concept = {\r\n      ...item,\r\n      plants: tempPlants,\r\n      //benefits: benefits,\r\n      //maintenance: m,\r\n    };\r\n    return concept;\r\n  });\r\n  return tempItems;\r\n}*/\r\n","export const listPlants = /* GraphQL */ `\r\n  query ListPlants(\r\n    $filter: ModelPlantFilterInput\r\n    $limit: Int\r\n    $nextToken: String\r\n  ) {\r\n    listPlants(filter: $filter, limit: $limit, nextToken: $nextToken) {\r\n      items {\r\n        id\r\n        metadata {\r\n          latin_name\r\n          norwegian_name\r\n          #type\r\n          #native\r\n          #norwegian_nursery\r\n          #size_in_cm\r\n          #image\r\n          #featured\r\n          #climate_zone\r\n          #pollinator_friendly\r\n          #edible\r\n          #rain_garden\r\n          #pet_kids_friendly\r\n          #air_puryfying\r\n          #sun_seeker\r\n          category {\r\n            items {\r\n              category {\r\n                category_name\r\n              }\r\n            }\r\n          }\r\n        }\r\n        concepts {\r\n          nextToken\r\n        }\r\n      }\r\n      nextToken\r\n    }\r\n  }\r\n`;\r\n","import { call, put, all, takeEvery } from 'redux-saga/effects';\r\nimport { API } from 'aws-amplify';\r\nimport { listPlants } from '../../graphql/plantsQueries';\r\nimport { FETCH_PLANTS, PLANTS_SET_STATE } from '../ducks/plantsReducer';\r\nimport { formatPlantData } from '../helpers/plantsSagaHelper';\r\n\r\nexport function* fetchPlants() {\r\n  try {\r\n    const { data } = yield call([API, 'graphql'], {\r\n      query: listPlants,\r\n      authMode: 'API_KEY',\r\n    });\r\n    let plants = formatPlantData(data.listPlants.items);\r\n\r\n    yield put({\r\n      type: PLANTS_SET_STATE,\r\n      payload: plants,\r\n    });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n\r\n  /*fetchPlants = async () => {\r\n    try {\r\n      // Switch authMode to API_KEY for public access\r\n      const { data } = await API.graphql({\r\n        query: listPlants,\r\n        authMode: 'API_KEY',\r\n      });\r\n      let plants = this.formatData(data.listPlants.items);\r\n      //console.log(plants);\r\n      let featuredPlants = plants.filter((plant) => plant.featured === true);\r\n        let maxSize = Math.max(...plants.map((item) => item.size_in_cm)); //find the max size from the data\r\n      this.setState({\r\n        plants,\r\n        featuredPlants,\r\n        sortedPlants: plants,\r\n        loading: false,\r\n        size_in_cm: maxSize,\r\n        maxSize,\r\n      });\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };*/\r\n}\r\n\r\nfunction* watchPlantsFetch() {\r\n  yield takeEvery(FETCH_PLANTS, fetchPlants);\r\n}\r\n\r\nexport function* plantsSaga() {\r\n  yield all([watchPlantsFetch()]);\r\n}\r\n","export const formatPlantData = (items) => {\r\n  let plants = items.map((plant) => {\r\n    let id = plant.id;\r\n    let metadata = plant.metadata;\r\n\r\n    let categories = metadata.category.items.map((category) => {\r\n      let c = category.category.category_name;\r\n      return c;\r\n    });\r\n    delete metadata.category;\r\n    let p = { id, ...metadata, categories };\r\n    return p;\r\n  });\r\n  return plants;\r\n};\r\n","import { call, put, all, takeLatest } from 'redux-saga/effects';\r\nimport {\r\n  AUTH_STATES,\r\n  CHANGE_PASSWORD,\r\n  FETCH_GOOGLE_USER,\r\n  FETCH_USER,\r\n  FORGOT_PASSWORD,\r\n  initialState,\r\n  LOGIN,\r\n  LOGIN_GOOGLE,\r\n  LOGOUT,\r\n  setAuth,\r\n  SIGN_UP,\r\n  userSignedUp,\r\n} from '../ducks/userReducer';\r\nimport { setAlertAction } from '../ducks/alertReducer';\r\nimport { Auth } from 'aws-amplify';\r\n\r\nexport function* login({ values }) {\r\n  try {\r\n    yield call([Auth, 'signIn'], {\r\n      username: values.email,\r\n      password: values.loginPassword,\r\n    });\r\n    yield put(setAuth({ status: AUTH_STATES.PRE_AUTHORIZE }));\r\n  } catch (error) {\r\n    yield put(\r\n      setAlertAction({\r\n        text: error.message,\r\n        color: 'error',\r\n      })\r\n    );\r\n  }\r\n}\r\n\r\nexport function* logout() {\r\n  try {\r\n    yield call([Auth, 'signOut']);\r\n    yield put(setAuth(initialState));\r\n  } catch (error) {\r\n    yield put(\r\n      setAlertAction({\r\n        text: error.message,\r\n        color: 'error',\r\n      })\r\n    );\r\n  }\r\n}\r\n\r\nfunction* signUp({ values }) {\r\n  try {\r\n    yield call([Auth, 'signUp'], {\r\n      username: values.email,\r\n      password: values.password,\r\n      attributes: {\r\n        email: values.email,\r\n        name: values.name,\r\n        phone_number: values.phone,\r\n        'custom:role': values.role,\r\n      },\r\n    });\r\n    yield put(userSignedUp({ status: AUTH_STATES.SENT_VERIFICATION }));\r\n    yield put(\r\n      setAlertAction({\r\n        text: 'User Signed Up! Please click the link sent to the email you provided',\r\n        color: 'success',\r\n      })\r\n    );\r\n  } catch (e) {\r\n    yield put(\r\n      setAlertAction({\r\n        text: e.message,\r\n        color: 'error',\r\n      })\r\n    );\r\n  }\r\n}\r\n\r\nexport function* fetchUser() {\r\n  try {\r\n    yield call([Auth, 'currentSession']);\r\n    const user = yield call([Auth, 'currentAuthenticatedUser']);\r\n    const { attributes } = user;\r\n    yield put(setAuth({ user: attributes, status: AUTH_STATES.AUTHED }));\r\n  } catch (error) {\r\n    yield put(setAuth({ user: null, status: AUTH_STATES.AUTH_FAILED }));\r\n  }\r\n}\r\n\r\nexport function* loginGoogle() {\r\n  try {\r\n    const ga = window.gapi.auth2.getAuthInstance();\r\n\r\n    const googleUser = yield call(\r\n      () => new Promise((resolve, reject) => ga.signIn().then(resolve, reject))\r\n    );\r\n    const { id_token, expires_at } = googleUser.getAuthResponse();\r\n    const profile = googleUser.getBasicProfile();\r\n    let user = {\r\n      email: profile.getEmail(),\r\n      name: profile.getName(),\r\n    };\r\n\r\n    const credentials = yield Auth.federatedSignIn(\r\n      'google',\r\n      { token: id_token, expires_at },\r\n      user\r\n    );\r\n    yield fetchGoogleUser(credentials);\r\n  } catch (e) {\r\n    yield put(\r\n      setAlertAction({\r\n        text: e.message,\r\n        color: 'error',\r\n      })\r\n    );\r\n  }\r\n}\r\n\r\nexport function* fetchGoogleUser({ credentials }) {\r\n  try {\r\n    yield put(setAuth({ user: credentials, status: AUTH_STATES.AUTHED }));\r\n  } catch (e) {\r\n    yield put(\r\n      setAlertAction({\r\n        text: e.message,\r\n        color: 'error',\r\n      })\r\n    );\r\n    yield put(setAuth({ user: null, status: AUTH_STATES.AUTH_FAILED }));\r\n  }\r\n}\r\n\r\nfunction* forgotPassword({ values }) {\r\n  try {\r\n    yield Auth.forgotPassword(values.email);\r\n    yield put(setAuth({ status: AUTH_STATES.FORGOT_PASSWORD_STARTED }));\r\n  } catch (e) {\r\n    yield put(\r\n      setAlertAction({\r\n        text: e.message,\r\n        color: 'error',\r\n      })\r\n    );\r\n  }\r\n}\r\n\r\nfunction* changePassword({ values }) {\r\n  try {\r\n    const { email, code, password } = values;\r\n    yield Auth.forgotPasswordSubmit(email, code, password);\r\n    yield put(setAuth({ status: AUTH_STATES.CODE_VERIFIED }));\r\n    yield put(\r\n      setAlertAction({\r\n        text: 'Password changed!',\r\n        color: 'success',\r\n      })\r\n    );\r\n  } catch (e) {\r\n    yield put(\r\n      setAlertAction({\r\n        text: e.message,\r\n        color: 'error',\r\n      })\r\n    );\r\n  }\r\n}\r\n\r\n//TODO:\r\n/*removeEmpty = (obj) => {\r\n    let newObj = {};\r\n    Object.keys(obj).forEach((key) => {\r\n      if (obj[key] === Object(obj[key]))\r\n        newObj[key] = this.removeEmpty(obj[key]);\r\n      else if (obj[key] !== undefined) newObj[key] = obj[key];\r\n    });\r\n    return newObj;\r\n  };*/\r\n\r\n/*updateUser = async (values) => {\r\n    const user = await Auth.currentAuthenticatedUser();\r\n    let attributes = {\r\n      name: values.name,\r\n      email: values.email,\r\n      phone_number: values.phone,\r\n      'custom:role': values.role,\r\n    };\r\n    Object.keys(attributes).forEach((key) =>\r\n      attributes[key] === undefined ? delete attributes[key] : {}\r\n    );\r\n    //this.removeEmpty(attributes);\r\n    console.log(attributes);\r\n    try {\r\n      await Auth.updateUserAttributes(user, attributes);\r\n      this.fetchUser();\r\n    } catch (error) {\r\n      console.log('error loging in', error);\r\n      let err = null;\r\n      !error.message ? (err = { message: error }) : (err = error);\r\n      values.cognito = err;\r\n      console.log(values.cognito);\r\n    }\r\n  };*/\r\n\r\nfunction* watchLoginUser() {\r\n  yield takeLatest(LOGIN, login);\r\n}\r\n\r\nfunction* watchLoginGoogleUser() {\r\n  yield takeLatest(LOGIN_GOOGLE, loginGoogle);\r\n}\r\n\r\nfunction* watchSignupUser() {\r\n  yield takeLatest(SIGN_UP, signUp);\r\n}\r\n\r\nfunction* watchLogoutUser() {\r\n  yield takeLatest(LOGOUT, logout);\r\n}\r\n\r\nfunction* watchFetchUser() {\r\n  yield takeLatest(FETCH_USER, fetchUser);\r\n}\r\n\r\nfunction* watchFetchGoogleUser() {\r\n  yield takeLatest(FETCH_GOOGLE_USER, fetchGoogleUser);\r\n}\r\n\r\nfunction* watchForgotPassword() {\r\n  yield takeLatest(FORGOT_PASSWORD, forgotPassword);\r\n}\r\n\r\nfunction* watchChangePassword() {\r\n  yield takeLatest(CHANGE_PASSWORD, changePassword);\r\n}\r\n\r\nexport function* userSaga() {\r\n  yield all([\r\n    watchLoginUser(),\r\n    watchLogoutUser(),\r\n    watchFetchUser(),\r\n    watchSignupUser(),\r\n    watchLoginGoogleUser(),\r\n    watchFetchGoogleUser(),\r\n    watchForgotPassword(),\r\n    watchChangePassword(),\r\n  ]);\r\n}\r\n","import { call, all, takeEvery, put, takeLatest } from 'redux-saga/effects';\r\nimport { API } from 'aws-amplify';\r\nimport { listProjects } from '../../graphql/projectQueries';\r\nimport { formatProjectsData } from '../helpers/projectSagaHelper';\r\nimport {\r\n  ADD_PROJECT,\r\n  DELETE_PROJECT,\r\n  FETCH_PROJECTS,\r\n  PROJECT_DELETED,\r\n  SET_PROJECTS_STATE,\r\n} from '../ducks/projectsReducer';\r\nimport {\r\n  deleteProject as deleteP,\r\n  createProject,\r\n} from '../../graphql/mutations';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nexport function* fetchProjects() {\r\n  try {\r\n    // Switch authMode to AMAZON_COGNITO_USER_POOLS for non-public access\r\n    const { data } = yield call([API, 'graphql'], {\r\n      query: listProjects,\r\n      authMode: 'AMAZON_COGNITO_USER_POOLS',\r\n    });\r\n    const projects = data.listProjects.items;\r\n    yield put({\r\n      type: SET_PROJECTS_STATE,\r\n      payload: projects,\r\n    });\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nexport function* deleteProject({ id }) {\r\n  try {\r\n    yield call([API, 'graphql'], {\r\n      query: deleteP,\r\n      variables: { input: id },\r\n      authMode: 'AMAZON_COGNITO_USER_POOLS',\r\n    });\r\n    yield put({\r\n      type: PROJECT_DELETED,\r\n      payload: id,\r\n    });\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nexport function* addProject({ values }) {\r\n  try {\r\n    const { name, zip, city, address, description } = values;\r\n    let projectDetails = {\r\n      id: uuidv4(),\r\n      name,\r\n      postalCode: zip,\r\n      city,\r\n      address,\r\n      description,\r\n    };\r\n    yield call([API, 'graphql'], {\r\n      query: createProject,\r\n      variables: { input: projectDetails },\r\n      authMode: 'AMAZON_COGNITO_USER_POOLS',\r\n    });\r\n    yield fetchProjects();\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nfunction* watchProjectsFetch() {\r\n  yield takeEvery(FETCH_PROJECTS, fetchProjects);\r\n}\r\n\r\nfunction* watchProjectAdd() {\r\n  yield takeLatest(ADD_PROJECT, addProject);\r\n}\r\n\r\nfunction* watchProjectDelete() {\r\n  yield takeEvery(DELETE_PROJECT, deleteProject);\r\n}\r\n\r\nexport function* projectSaga() {\r\n  yield all([watchProjectsFetch(), watchProjectDelete(), watchProjectAdd()]);\r\n}\r\n","import { all } from 'redux-saga/effects';\r\nimport { conceptSaga } from './conceptSaga';\r\nimport { plantsSaga } from './plantsSaga';\r\nimport { userSaga } from './userSaga';\r\nimport { projectSaga } from './projectSaga';\r\n\r\n//generator functions\r\n//eases out the async proccess\r\nexport function* watcherSaga() {\r\n  //look for dispatches by store\r\n  //and map to handler functions to for api calls\r\n  yield all([userSaga(), conceptSaga(), plantsSaga(), projectSaga()]);\r\n}\r\n","import { combineReducers, createStore, applyMiddleware } from 'redux';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport alertReducer from './ducks/alertReducer';\r\nimport conceptsReducer from './ducks/conceptsReducer';\r\nimport userReducer from './ducks/userReducer';\r\nimport plantsReducer from './ducks/plantsReducer';\r\nimport { watcherSaga } from './sagas/rootSaga';\r\nimport projectsReducer from './ducks/projectsReducer';\r\n\r\nconst reducer = combineReducers({\r\n  user: userReducer,\r\n  alert: alertReducer,\r\n  concepts: conceptsReducer,\r\n  plants: plantsReducer,\r\n  projects: projectsReducer,\r\n});\r\n\r\n//listen to any dispatches for redux\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst store = createStore(reducer, applyMiddleware(sagaMiddleware));\r\n\r\n//watcher saga listens to any actions and runs them\r\nsagaMiddleware.run(watcherSaga);\r\n\r\nexport default store;\r\n","const reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import i18n from 'i18next';\r\nimport { initReactI18next } from 'react-i18next';\r\nimport LanguageDetector from 'i18next-browser-languagedetector';\r\nimport HttpApi from 'i18next-http-backend';\r\n\r\ni18n\r\n  // detect user language\r\n  // learn more: https://github.com/i18next/i18next-browser-languageDetector\r\n  .use(LanguageDetector)\r\n  // pass the i18n instance to react-i18next.\r\n  .use(initReactI18next)\r\n  // init i18next\r\n  // for all options read: https://www.i18next.com/overview/configuration-options\r\n  .use(HttpApi)\r\n  .init({\r\n    supportedLngs: ['en', 'no'],\r\n    fallbackLng: 'en',\r\n    detection: {\r\n      order: ['path', /*\"cookie\",*/ 'htmlTag', 'localStorage', 'subdomain'],\r\n      //caches: [\"cookie\"],\r\n    },\r\n    backend: {\r\n      loadPath: '/assets/locales/{{lng}}/translation.json',\r\n    },\r\n    react: { useSuspense: false },\r\n  });\r\n\r\nexport default i18n;\r\n","import React from 'react';\r\nimport './spinner.css';\r\n\r\nconst Spinner = () => (\r\n  <div className='fallback-spinner'>\r\n    <div className='loading component-loader'>\r\n      <div className='effect-1 effects' />\r\n      <div className='effect-2 effects' />\r\n      <div className='effect-3 effects' />\r\n    </div>\r\n  </div>\r\n);\r\nexport default Spinner;\r\n","/* eslint-disable */\n// WARNING: DO NOT EDIT. This file is automatically generated by AWS Amplify. It will be overwritten.\n\nconst awsmobile = {\n  aws_project_region: 'eu-north-1',\n  aws_cognito_identity_pool_id:\n    'eu-north-1:9912852f-0c2f-485f-aa4c-22259b9345ee',\n  aws_cognito_region: 'eu-north-1',\n  aws_user_pools_id: 'eu-north-1_gF4dv0suP',\n  aws_user_pools_web_client_id: '76vfko2ooq5c76noviiqbr5knp',\n  oauth: {},\n  aws_cognito_username_attributes: ['EMAIL'],\n  aws_cognito_social_providers: [],\n  aws_cognito_signup_attributes: ['EMAIL', 'NAME', 'PHONE_NUMBER'],\n  aws_cognito_mfa_configuration: 'OFF',\n  aws_cognito_mfa_types: ['SMS'],\n  aws_cognito_password_protection_settings: {\n    passwordPolicyMinLength: 8,\n    passwordPolicyCharacters: [],\n  },\n  aws_cognito_verification_mechanisms: ['EMAIL'],\n  aws_user_files_s3_bucket:\n    'squarerootprojectcc0a600ac4c447429b537b9669e5bc113924-dev',\n  aws_user_files_s3_bucket_region: 'eu-north-1',\n  aws_dynamodb_all_tables_region: 'eu-north-1',\n  aws_dynamodb_table_schemas: [\n    {\n      tableName: 'contactFormTable-dev',\n      region: 'eu-north-1',\n    },\n  ],\n  aws_appsync_graphqlEndpoint:\n    'https://pjhxhgaoardsbmws3kfg2dtx5q.appsync-api.eu-north-1.amazonaws.com/graphql',\n  aws_appsync_region: 'eu-north-1',\n  aws_appsync_authenticationType: 'AMAZON_COGNITO_USER_POOLS',\n  aws_appsync_apiKey: 'da2-rkbsoyslmnb67d2775c64y47xq',\n  aws_cloud_logic_custom: [\n    {\n      name: 'contactFormApi',\n      endpoint: 'https://ijj8nyjdd5.execute-api.eu-north-1.amazonaws.com/dev',\n      region: 'eu-north-1',\n    },\n  ],\n};\n\nexport default awsmobile;\n","import React, { Suspense } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/ConfigureStore';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport './components/utility/i18n';\r\nimport 'flag-icon-css/css/flag-icon.min.css';\r\n\r\nimport Spinner from './views/spinner/Spinner';\r\nimport Amplify from 'aws-amplify';\r\nimport config from './aws-exports';\r\n\r\nconst updatedAwsConfig = {\r\n  ...config,\r\n  oauth: {\r\n    ...config.oauth,\r\n    redirectSignIn: config.oauth.redirectSignIn,\r\n    redirectSignOut: config.oauth.redirectSignOut,\r\n  },\r\n};\r\n\r\nAmplify.configure(updatedAwsConfig);\r\nrequire('dotenv').config();\r\n\r\nstore.subscribe(() => {\r\n  // When state will be updated(in our case, when items will be fetched),\r\n  // we will update local component state and force component to rerender\r\n  // with new data.\r\n\r\n  console.log(store.getState());\r\n});\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <Suspense fallback={<Spinner />}>\r\n      <Router>\r\n        <App />\r\n      </Router>\r\n    </Suspense>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","//actions\r\nconst SET_ALERT = 'SET_ALERT';\r\nconst RESET_ALERT = 'RESET_ALERT';\r\n\r\n//state\r\nconst initialState = {\r\n  text: '',\r\n  color: '',\r\n};\r\n\r\nexport const setAlertAction = (msg) => ({\r\n  type: SET_ALERT,\r\n  msg,\r\n});\r\n\r\nexport const resetAlertAction = () => ({\r\n  type: RESET_ALERT,\r\n});\r\n\r\nconst AlertReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_ALERT:\r\n      return action.msg; //this is the payload when set alert is called\r\n    case RESET_ALERT:\r\n      return initialState;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default AlertReducer;\r\n","//actions\r\nexport const FETCH_PROJECTS = 'fetchProjects';\r\nexport const SET_PROJECTS_STATE = 'setProjectsState';\r\nexport const DELETE_PROJECT = 'deleteProject';\r\nconst OPEN_MODAL = 'openAddProjectModal';\r\nexport const ADD_PROJECT = 'addProject';\r\nexport const PROJECT_DELETED = 'projectDeleted';\r\n\r\nexport const fetchProjects = () => ({\r\n  type: FETCH_PROJECTS,\r\n});\r\n\r\nexport const addProject = (values) => ({\r\n  type: ADD_PROJECT,\r\n  values,\r\n});\r\n\r\nexport const deleteProject = (payload) => ({\r\n  type: DELETE_PROJECT,\r\n  payload,\r\n});\r\n\r\nexport const openAddProjectModal = (payload) => ({\r\n  type: OPEN_MODAL,\r\n  payload,\r\n});\r\n\r\nexport const initialState = {\r\n  projects: [],\r\n  addProjectModalOpen: false,\r\n  currentMember: null,\r\n  members: [],\r\n};\r\n\r\nconst ProjectsReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_PROJECTS_STATE:\r\n      return { ...state, projects: action.payload };\r\n    case OPEN_MODAL:\r\n      return { ...state, addProjectModalOpen: action.payload };\r\n    case PROJECT_DELETED:\r\n      return {\r\n        ...state,\r\n        projects: state.projects.filter(\r\n          (project) => project.id !== action.payload\r\n        ),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default ProjectsReducer;\r\n","//actions\r\nexport const FETCH_CATEGORIES = 'fetchCategories';\r\nexport const CATEGORIES_FETCHED = 'categoriesFetched';\r\nexport const FETCH_CONCEPTS = 'fetchConcepts';\r\nexport const CONCEPTS_FETCHED = 'conceptsFetched';\r\n\r\nexport const fetchCategories = () => ({\r\n  type: FETCH_CATEGORIES,\r\n});\r\n\r\nexport const fetchConcepts = () => ({\r\n  type: FETCH_CONCEPTS,\r\n});\r\n\r\nexport const initialState = {\r\n  concepts: [],\r\n  categories: [],\r\n};\r\n\r\nconst ConceptsReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case CATEGORIES_FETCHED:\r\n      return { ...state, categories: action.payload };\r\n    case CONCEPTS_FETCHED:\r\n      return { ...state, concepts: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const selectCategory = (state, name) =>\r\n  state.concepts.categories.find((category) => category.category_name === name);\r\n\r\nexport const selectConcept = (state, name) =>\r\n  state.concepts.concepts.find((concept) => concept.name === name);\r\n\r\nexport const selectConceptFromCategory = (state, categoryName) =>\r\n  state.concepts.concepts.filter((concept) =>\r\n    concept.categories.some((category) => category === categoryName)\r\n  );\r\n\r\nexport default ConceptsReducer;\r\n","//actions\r\nexport const FETCH_PLANTS = 'fetchPlants';\r\nexport const PLANTS_SET_STATE = 'setPlantsState';\r\n\r\nexport const fetchPlants = () => ({\r\n  type: FETCH_PLANTS,\r\n});\r\n\r\nexport const initialState = {\r\n  plants: [],\r\n};\r\n\r\nconst PlantsReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case PLANTS_SET_STATE:\r\n      return { ...state, plants: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default PlantsReducer;\r\n"],"sourceRoot":""}