{"version":3,"sources":["components/container/PageContainer.js","layouts/full-layout/breadcrumb/Breadcrumb.js","../node_modules/@mui/material/CardContent/cardContentClasses.js","../node_modules/@mui/material/CardContent/CardContent.js","../node_modules/@mui/system/esm/Box/Box.js","views/apps/shop/ConceptsForCategory.js"],"names":["PageContainer","title","description","children","name","content","Breadcrumb","subtitle","items","container","sx","p","item","xs","sm","lg","color","fontWeight","variant","separator","fontSize","map","to","underline","component","NavLink","lineHeight","display","alignItems","md","justifyContent","width","getCardContentUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","CardContentRoot","styled","overridesResolver","props","styles","root","padding","paddingBottom","CardContent","React","inProps","ref","useThemeProps","className","other","_objectWithoutPropertiesLoose","ownerState","_extends","classes","composeClasses","useUtilityClasses","_jsx","as","clsx","Box","createBox","ConceptsForCategory","params","useParams","categoryName","charAt","toUpperCase","slice","BCrumb","concepts","useSelector","state","selectConceptFromCategory","spacing","concept","textDecoration","Link","src","photo","alt","category","mt","id"],"mappings":"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","file":"static/js/54.f47f95a3.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Helmet } from 'react-helmet';\r\n\r\nconst PageContainer = ({ title, description, children }) => (\r\n  <div>\r\n    <Helmet>\r\n      <title>{title}</title>\r\n      <meta name='description' content={description} />\r\n    </Helmet>\r\n    {children}\r\n  </div>\r\n);\r\n\r\nPageContainer.propTypes = {\r\n  title: PropTypes.string,\r\n  description: PropTypes.string,\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default PageContainer;\r\n","import React from 'react';\r\nimport { Grid, Typography, Box, Breadcrumbs, Link } from '@mui/material';\r\nimport { NavLink } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport NavigateNextIcon from '@mui/icons-material/NavigateNext';\r\n\r\nconst Breadcrumb = ({ subtitle, items, title, children }) => (\r\n  <Grid\r\n    container\r\n    sx={{\r\n      p: '15px',\r\n    }}\r\n  >\r\n    <Grid item xs={12} sm={6} lg={8}>\r\n      <Typography color='textSecondary' fontWeight='400' variant='h4'>\r\n        {subtitle}\r\n      </Typography>\r\n\r\n      <Breadcrumbs\r\n        separator={<NavigateNextIcon fontSize='small' />}\r\n        aria-label='breadcrumb'\r\n      >\r\n        {items\r\n          ? items.map((item) => (\r\n              <div key={item.title}>\r\n                {item.to ? (\r\n                  <Link\r\n                    underline='none'\r\n                    color='inherit'\r\n                    component={NavLink}\r\n                    to={item.to}\r\n                  >\r\n                    {item.title}\r\n                  </Link>\r\n                ) : (\r\n                  <Typography color='textPrimary'>{item.title}</Typography>\r\n                )}\r\n              </div>\r\n            ))\r\n          : ''}\r\n      </Breadcrumbs>\r\n      <Typography\r\n        fontWeight='700'\r\n        variant='h1'\r\n        sx={{\r\n          lineHeight: '1.235',\r\n        }}\r\n      >\r\n        {title}\r\n      </Typography>\r\n    </Grid>\r\n    <Grid item xs={12} sm={6} lg={4} display='flex' alignItems='flex-end'>\r\n      <Box\r\n        sx={{\r\n          display: { xs: 'none', md: 'block', lg: 'flex' },\r\n          alignItems: 'center',\r\n          justifyContent: 'flex-end',\r\n          width: '100%',\r\n        }}\r\n      >\r\n        {children}\r\n      </Box>\r\n    </Grid>\r\n  </Grid>\r\n);\r\n\r\nBreadcrumb.propTypes = {\r\n  subtitle: PropTypes.string,\r\n  items: PropTypes.array,\r\n  title: PropTypes.string,\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default Breadcrumb;\r\n","import { generateUtilityClass, generateUtilityClasses } from '@mui/core';\nexport function getCardContentUtilityClass(slot) {\n  return generateUtilityClass('MuiCardContent', slot);\n}\nconst cardContentClasses = generateUtilityClasses('MuiCardContent', ['root']);\nexport default cardContentClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/core';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getCardContentUtilityClass } from './cardContentClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardContentUtilityClass, classes);\n};\n\nconst CardContentRoot = styled('div', {\n  name: 'MuiCardContent',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  };\n});\nconst CardContent = /*#__PURE__*/React.forwardRef(function CardContent(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCardContent'\n  });\n\n  const {\n    className,\n    component = 'div'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    component\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardContentRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default CardContent;","import createBox from '../createBox';\nconst Box = createBox();\nexport default Box;","import React from 'react';\r\nimport { useParams } from 'react-router';\r\nimport Breadcrumb from '../../../layouts/full-layout/breadcrumb/Breadcrumb';\r\nimport PageContainer from '../../../components/container/PageContainer';\r\nimport { useSelector } from 'react-redux';\r\nimport { selectConceptFromCategory } from '../../../redux/ducks/conceptsReducer';\r\nimport { Card, CardContent, Grid, Link, Typography } from '@mui/material';\r\nimport { Box } from '@mui/system';\r\n\r\nexport default function ConceptsForCategory() {\r\n  const params = useParams();\r\n  const categoryName =\r\n    params.name.charAt(0).toUpperCase() + params.name.slice(1);\r\n\r\n  const BCrumb = [\r\n    {\r\n      to: '/dashboard',\r\n      title: 'Dashboard',\r\n    },\r\n    {\r\n      title: categoryName,\r\n    },\r\n  ];\r\n\r\n  const concepts = useSelector((state) =>\r\n    selectConceptFromCategory(state, categoryName)\r\n  );\r\n\r\n  return (\r\n    <PageContainer title={categoryName} description='this is Shop List page'>\r\n      {/* breadcrumb */}\r\n      <Breadcrumb title={categoryName} items={BCrumb} />\r\n      <Grid container spacing={0}>\r\n        {concepts.map((concept) => (\r\n          <Grid\r\n            item\r\n            xs={12}\r\n            lg={4}\r\n            sm={4}\r\n            display='flex'\r\n            alignItems='stretch'\r\n            key={concept.id}\r\n          >\r\n            <Card\r\n              sx={{ p: 0, width: '100%', textDecoration: 'none' }}\r\n              component={Link}\r\n              to='/shop/shop-detail'\r\n            >\r\n              <img src={concept.photo} alt={concept.name} width='100%' />\r\n              <CardContent sx={{ p: 3 }}>\r\n                <Typography variant='caption'>{concept.category}</Typography>\r\n                <Typography\r\n                  fontWeight='500'\r\n                  sx={{\r\n                    display: 'block',\r\n                    textDecoration: 'none',\r\n                    color: 'rgba(0, 0, 0, 0.87)',\r\n                  }}\r\n                >\r\n                  {concept.name}\r\n                </Typography>\r\n                <Box\r\n                  display='flex'\r\n                  alignItems='center'\r\n                  sx={{\r\n                    mt: '15px',\r\n                  }}\r\n                >\r\n                  {/* ---- project icons ---- */}\r\n                  {/*<FeatherIcon>{product.icons}</FeatherIcon>*/}\r\n                </Box>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n    </PageContainer>\r\n  );\r\n}\r\n"],"sourceRoot":""}