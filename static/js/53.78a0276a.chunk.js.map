{"version":3,"sources":["components/container/PageContainer.js","layouts/full-layout/breadcrumb/Breadcrumb.js","components/base-card/BaseCard.js","components/forms/custom-elements/CustomCheckbox.js","views/form-elements/ExCheckbox.js"],"names":["PageContainer","title","description","children","name","content","Breadcrumb","subtitle","items","container","sx","p","item","xs","sm","lg","color","fontWeight","variant","separator","fontSize","map","to","underline","component","NavLink","lineHeight","display","alignItems","md","justifyContent","width","BaseCard","BpIcon","styled","theme","borderRadius","height","boxShadow","palette","mode","backgroundColor","outline","outlineOffset","primary","background","BpCheckedIcon","backgroundImage","CustomCheckbox","bgcolor","props","disableRipple","checkedIcon","icon","inputProps","BCrumb","ExCheckbox","React","useState","checked","setChecked","handleChange","event","target","spacing","textAlign","onChange","inputprops","disabled","defaultChecked","indeterminate","control","label","success","main","error","warning","row","value","labelPlacement"],"mappings":"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","file":"static/js/53.78a0276a.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Helmet } from 'react-helmet';\n\nconst PageContainer = ({ title, description, children }) => (\n  <div>\n    <Helmet>\n      <title>{title}</title>\n      <meta name='description' content={description} />\n    </Helmet>\n    {children}\n  </div>\n);\n\nPageContainer.propTypes = {\n  title: PropTypes.string,\n  description: PropTypes.string,\n  children: PropTypes.node,\n};\n\nexport default PageContainer;\n","import React from 'react';\nimport { Grid, Typography, Box, Breadcrumbs, Link } from '@mui/material';\nimport { NavLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport NavigateNextIcon from '@mui/icons-material/NavigateNext';\n\nconst Breadcrumb = ({ subtitle, items, title, children }) => (\n  <Grid\n    container\n    sx={{\n      p: '15px',\n    }}\n  >\n    <Grid item xs={12} sm={6} lg={8}>\n      <Typography color='textSecondary' fontWeight='400' variant='h4'>\n        {subtitle}\n      </Typography>\n\n      <Breadcrumbs\n        separator={<NavigateNextIcon fontSize='small' />}\n        aria-label='breadcrumb'\n      >\n        {items\n          ? items.map((item) => (\n              <div key={item.title}>\n                {item.to ? (\n                  <Link\n                    underline='none'\n                    color='inherit'\n                    component={NavLink}\n                    to={item.to}\n                  >\n                    {item.title}\n                  </Link>\n                ) : (\n                  <Typography color='textPrimary'>{item.title}</Typography>\n                )}\n              </div>\n            ))\n          : ''}\n      </Breadcrumbs>\n      <Typography\n        fontWeight='700'\n        variant='h1'\n        sx={{\n          lineHeight: '1.235',\n        }}\n      >\n        {title}\n      </Typography>\n    </Grid>\n    <Grid item xs={12} sm={6} lg={4} display='flex' alignItems='flex-end'>\n      <Box\n        sx={{\n          display: { xs: 'none', md: 'block', lg: 'flex' },\n          alignItems: 'center',\n          justifyContent: 'flex-end',\n          width: '100%',\n        }}\n      >\n        {children}\n      </Box>\n    </Grid>\n  </Grid>\n);\n\nBreadcrumb.propTypes = {\n  subtitle: PropTypes.string,\n  items: PropTypes.array,\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\n\nexport default Breadcrumb;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Card, CardHeader, CardContent, Divider } from '@mui/material';\n\nconst BaseCard = ({ title, children }) => (\n  <Card\n    sx={{\n      width: '100%',\n      p: 0,\n    }}\n  >\n    <CardHeader title={title} />\n\n    <Divider />\n    <CardContent>{children}</CardContent>\n  </Card>\n);\n\nBaseCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node,\n};\n\nexport default BaseCard;\n","import * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport Checkbox from '@mui/material/Checkbox';\nimport PropTypes from 'prop-types';\n\nconst BpIcon = styled('span')(({ theme }) => ({\n  borderRadius: 3,\n  width: 21,\n  height: 21,\n\n  boxShadow:\n    theme.palette.mode === 'dark'\n      ? '0 0 0 1px rgb(16 22 26 / 40%)'\n      : 'inset 0 0 0 1px rgba(0,0,0,.2)',\n  backgroundColor: theme.palette.mode === 'dark' ? 'rgba(0,0,0,0.4)' : '',\n\n  '.Mui-focusVisible &': {\n    outline: '0px auto rgba(19,124,189,.6)',\n    outlineOffset: 2,\n  },\n  'input:hover ~ &': {\n    backgroundColor:\n      theme.palette.mode === 'dark'\n        ? theme.palette.primary\n        : theme.palette.primary,\n  },\n  'input:disabled ~ &': {\n    boxShadow: 'none',\n    background:\n      theme.palette.mode === 'dark'\n        ? 'rgba(57,75,89,.5)'\n        : 'rgba(206,217,224,.5)',\n  },\n}));\n\nconst BpCheckedIcon = styled(BpIcon)({\n  boxShadow: 'none',\n  width: 21,\n  height: 21,\n  '&:before': {\n    display: 'block',\n    width: 21,\n    height: 21,\n    backgroundImage:\n      \"url(\\\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'%3E%3Cpath\" +\n      \" fill-rule='evenodd' clip-rule='evenodd' d='M12 5c-.28 0-.53.11-.71.29L7 9.59l-2.29-2.3a1.003 \" +\n      \"1.003 0 00-1.42 1.42l3 3c.18.18.43.29.71.29s.53-.11.71-.29l5-5A1.003 1.003 0 0012 5z' fill='%23fff'/%3E%3C/svg%3E\\\")\",\n    content: '\"\"',\n  },\n});\n\n// Inspired by blueprintjs\nfunction CustomCheckbox({ bgcolor, ...props }) {\n  return (\n    <Checkbox\n      disableRipple\n      color='default'\n      checkedIcon={\n        <BpCheckedIcon\n          sx={{\n            backgroundColor: bgcolor || 'primary.main',\n          }}\n        />\n      }\n      icon={<BpIcon />}\n      inputProps={{ 'aria-label': 'Checkbox demo' }}\n      {...props}\n    />\n  );\n}\n\nCustomCheckbox.propTypes = {\n  bgcolor: PropTypes.string,\n};\n\nexport default CustomCheckbox;\n","import React from 'react';\nimport {\n  Grid,\n  Box,\n  Checkbox,\n  FormGroup,\n  FormControlLabel,\n  FormControl,\n} from '@mui/material';\nimport CheckBoxOutlineBlankIcon from '@mui/icons-material/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '@mui/icons-material/CheckBox';\nimport Favorite from '@mui/icons-material/Favorite';\nimport FavoriteBorder from '@mui/icons-material/FavoriteBorder';\nimport PageContainer from '../../components/container/PageContainer';\nimport BaseCard from '../../components/base-card/BaseCard';\nimport Breadcrumb from '../../layouts/full-layout/breadcrumb/Breadcrumb';\n\nimport CustomCheckbox from '../../components/forms/custom-elements/CustomCheckbox';\n\nconst BCrumb = [\n  {\n    to: '/',\n    title: 'Home',\n  },\n  {\n    title: 'Checkbox',\n  },\n];\n\nconst ExCheckbox = () => {\n  // 2\n  const [checked, setChecked] = React.useState(true);\n\n  const handleChange = (event) => {\n    setChecked(event.target.checked);\n  };\n  return (\n    <PageContainer title='Checkbox' description='this is Checkbox page'>\n      {/* breadcrumb */}\n      <Breadcrumb title='Checkbox' items={BCrumb} />\n      {/* end breadcrumb */}\n      <Grid container spacing={0}>\n        {/* ------------------------- custom row 1 ------------------------- */}\n        <Grid item xs={12} lg={6} sm={6} display='flex' alignItems='stretch'>\n          <BaseCard title='Custom Checkbox'>\n            <Box\n              sx={{\n                textAlign: 'center',\n              }}\n            >\n              <CustomCheckbox\n                checked={checked}\n                onChange={handleChange}\n                inputprops={{ 'aria-label': 'primary checkbox' }}\n              />\n\n              <CustomCheckbox\n                disabled\n                checked\n                inputprops={{ 'aria-label': 'disabled checked checkbox' }}\n              />\n              <CustomCheckbox\n                defaultChecked\n                indeterminate\n                inputprops={{ 'aria-label': 'indeterminate checkbox' }}\n              />\n              <CustomCheckbox\n                defaultChecked\n                color='default'\n                inputprops={{ 'aria-label': 'checkbox with default color' }}\n              />\n            </Box>\n          </BaseCard>\n        </Grid>\n        <Grid item xs={12} lg={6} sm={6} display='flex' alignItems='stretch'>\n          <BaseCard title='Custom Checkbox with Color'>\n            <Box\n              sx={{\n                textAlign: 'center',\n              }}\n            >\n              <FormControlLabel\n                control={<CustomCheckbox defaultChecked />}\n                label='Primary'\n              />\n              <FormControlLabel\n                control={\n                  <CustomCheckbox\n                    defaultChecked\n                    bgcolor='#1e4db7'\n                    inputprops={{ 'aria-label': 'checkbox with default color' }}\n                  />\n                }\n                label='Secondary'\n              />\n              <FormControlLabel\n                control={\n                  <CustomCheckbox\n                    defaultChecked\n                    bgcolor='#39cb7f'\n                    inputprops={{ 'aria-label': 'checkbox with default color' }}\n                  />\n                }\n                label='Success'\n              />\n              <FormControlLabel\n                control={\n                  <CustomCheckbox\n                    defaultChecked\n                    bgcolor='#fec90f'\n                    inputprops={{ 'aria-label': 'checkbox with default color' }}\n                  />\n                }\n                label='Warning'\n              />\n              <FormControlLabel\n                control={\n                  <CustomCheckbox\n                    defaultChecked\n                    bgcolor='#fc4b6c'\n                    inputprops={{ 'aria-label': 'checkbox with default color' }}\n                  />\n                }\n                label='Error'\n              />\n            </Box>\n          </BaseCard>\n        </Grid>\n        {/* ------------------------- row 1 ------------------------- */}\n        <Grid item xs={12} lg={4} sm={6} display='flex' alignItems='stretch'>\n          <BaseCard title='Default Checkbox'>\n            <Box\n              sx={{\n                textAlign: 'center',\n              }}\n            >\n              <Checkbox\n                checked={checked}\n                onChange={handleChange}\n                inputprops={{ 'aria-label': 'primary checkbox' }}\n              />\n\n              <Checkbox\n                disabled\n                checked\n                inputprops={{ 'aria-label': 'disabled checked checkbox' }}\n              />\n              <Checkbox\n                defaultChecked\n                indeterminate\n                inputprops={{ 'aria-label': 'indeterminate checkbox' }}\n              />\n              <Checkbox\n                defaultChecked\n                color='default'\n                inputprops={{ 'aria-label': 'checkbox with default color' }}\n              />\n            </Box>\n          </BaseCard>\n        </Grid>\n        {/* ------------------------- row 1 ------------------------- */}\n        <Grid item xs={12} lg={4} sm={6} display='flex' alignItems='stretch'>\n          <BaseCard title='Default with Colors'>\n            <Box\n              sx={{\n                textAlign: 'center',\n              }}\n            >\n              <Checkbox\n                defaultChecked\n                color='primary'\n                inputprops={{ 'aria-label': 'checkbox with default color' }}\n              />\n              <Checkbox\n                defaultChecked\n                color='secondary'\n                inputprops={{ 'aria-label': 'checkbox with default color' }}\n              />\n              <Checkbox\n                defaultChecked\n                sx={{\n                  color: (theme) => theme.palette.success.main,\n                  '&.Mui-checked': {\n                    color: (theme) => theme.palette.success.main,\n                  },\n                }}\n              />\n              <Checkbox\n                defaultChecked\n                sx={{\n                  color: (theme) => theme.palette.error.main,\n                  '&.Mui-checked': {\n                    color: (theme) => theme.palette.error.main,\n                  },\n                }}\n              />\n              <Checkbox\n                defaultChecked\n                sx={{\n                  color: (theme) => theme.palette.warning.main,\n                  '&.Mui-checked': {\n                    color: (theme) => theme.palette.warning.main,\n                  },\n                }}\n              />\n            </Box>\n          </BaseCard>\n        </Grid>\n        {/* ------------------------- row 1 ------------------------- */}\n        <Grid item xs={12} lg={4} sm={6} display='flex' alignItems='stretch'>\n          <BaseCard title='Sizes & Custom icon'>\n            <Box>\n              <FormGroup\n                row\n                sx={{\n                  display: 'flex',\n                  justifyContent: 'center',\n                }}\n              >\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      icon={<CheckBoxOutlineBlankIcon />}\n                      checkedIcon={<CheckBoxIcon />}\n                      name='checkednormal'\n                    />\n                  }\n                  label='Normal Size'\n                />\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      icon={<CheckBoxOutlineBlankIcon fontSize='small' />}\n                      checkedIcon={<CheckBoxIcon fontSize='small' />}\n                      name='checkedsmall'\n                    />\n                  }\n                  label='Small size'\n                />\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      icon={<FavoriteBorder />}\n                      checkedIcon={<Favorite />}\n                      name='checkedH'\n                    />\n                  }\n                  label='Heart'\n                />\n              </FormGroup>\n            </Box>\n          </BaseCard>\n        </Grid>\n\n        {/* ------------------------- row 1 ------------------------- */}\n        <Grid item xs={12} lg={6} sm={6} display='flex' alignItems='stretch'>\n          <BaseCard title='Placement'>\n            <FormControl\n              component='fieldset'\n              sx={{\n                display: 'flex',\n                justifyContent: 'center',\n              }}\n            >\n              <FormGroup\n                aria-label='position'\n                row\n                sx={{\n                  justifyContent: 'center',\n                }}\n              >\n                <FormControlLabel\n                  value='top'\n                  control={<Checkbox color='primary' />}\n                  label='Top'\n                  labelPlacement='top'\n                />\n                <FormControlLabel\n                  value='start'\n                  control={<Checkbox color='primary' />}\n                  label='Start'\n                  labelPlacement='start'\n                />\n                <FormControlLabel\n                  value='bottom'\n                  control={<Checkbox color='primary' />}\n                  label='Bottom'\n                  labelPlacement='bottom'\n                />\n                <FormControlLabel\n                  value='end'\n                  control={<Checkbox color='primary' />}\n                  label='End'\n                  labelPlacement='end'\n                />\n              </FormGroup>\n            </FormControl>\n          </BaseCard>\n        </Grid>\n\n        {/* ------------------------- row 1 ------------------------- */}\n        <Grid item xs={12} lg={6} sm={6} display='flex' alignItems='stretch'>\n          <BaseCard title='Color with Label'>\n            <Box\n              sx={{\n                textAlign: 'center',\n              }}\n            >\n              <FormControlLabel\n                value='end'\n                control={<Checkbox color='primary' checked />}\n                label='Primary'\n                labelPlacement='end'\n              />\n              <FormControlLabel\n                value='end'\n                control={<Checkbox color='secondary' checked />}\n                label='Secondary'\n                labelPlacement='end'\n              />\n              <FormControlLabel\n                value='end'\n                control={\n                  <Checkbox\n                    checked\n                    sx={{\n                      color: (theme) => theme.palette.success.main,\n                      '&.Mui-checked': {\n                        color: (theme) => theme.palette.success.main,\n                      },\n                    }}\n                  />\n                }\n                label='Success'\n                labelPlacement='end'\n              />\n\n              <FormControlLabel\n                value='end'\n                control={\n                  <Checkbox\n                    checked\n                    sx={{\n                      color: (theme) => theme.palette.error.main,\n                      '&.Mui-checked': {\n                        color: (theme) => theme.palette.error.main,\n                      },\n                    }}\n                  />\n                }\n                label='Danger'\n                labelPlacement='end'\n              />\n\n              <FormControlLabel\n                value='end'\n                control={\n                  <Checkbox\n                    checked\n                    sx={{\n                      color: (theme) => theme.palette.warning.main,\n                      '&.Mui-checked': {\n                        color: (theme) => theme.palette.warning.main,\n                      },\n                    }}\n                  />\n                }\n                label='Warning'\n                labelPlacement='end'\n              />\n            </Box>\n          </BaseCard>\n        </Grid>\n      </Grid>\n    </PageContainer>\n  );\n};\n\nexport default ExCheckbox;\n"],"sourceRoot":""}