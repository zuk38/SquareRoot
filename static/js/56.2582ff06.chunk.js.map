{"version":3,"sources":["components/ContactForm.js","views/landing/Partner.js"],"names":["ContactForm","Partner","props","t","useTranslation","className","src","alt"],"mappings":"mHAAA,kDAEe,SAASA,IACtB,OAAO,0C,uDCHT,wFAKe,SAASC,EAAQC,GAC9B,IAAQC,EAAMC,cAAND,EACR,OACE,qBAAKE,UAAU,cAAf,SACE,sBAAKA,UAAU,SAAf,UACE,oBAAIA,UAAU,cAAd,SAA6BF,EAAE,wBAE/B,qBAAKE,UAAU,kBAEf,sBAAKA,UAAU,cAAf,UACE,qBAAKA,UAAU,yBAAf,SACE,qBACEC,IAAI,wBACJD,UAAU,iBACVE,IAAI,cAIR,qBAAKF,UAAU,yBAAf,SACE,sBAAKA,UAAU,sBAAf,UACE,oBAAIA,UAAU,sBAAd,SACGF,EAAE,2BAEJA,EAAE,4BACH,uBACA,+BAKN,qBAAKE,UAAU,mCAAf,SACE,sBAAKA,UAAU,cAAf,UACE,sBAAKA,UAAU,aAAf,UACE,qBAAKA,UAAU,sBAAf,SAAsCF,EAAE,sBACxC,qBAAKE,UAAU,iBACf,4BAAIF,EAAE,2BAGR,sBAAKE,UAAU,aAAf,UACE,qBAAKA,UAAU,sBAAf,SACGF,EAAE,uBAGL,qBAAKE,UAAU,iBACf,4BAAIF,EAAE,4BAGR,sBAAKE,UAAU,aAAf,UACE,qBAAKA,UAAU,sBAAf,SACGF,EAAE,uBAEL,qBAAKE,UAAU,iBACf,4BAAIF,EAAE,4BAGR,sBAAKE,UAAU,aAAf,UACE,qBAAKA,UAAU,sBAAf,SAAsCF,EAAE,qBACxC,qBAAKE,UAAU,iBACf,4BAAIF,EAAE,+BAIZ,qBAAKE,UAAU,2CAAf,SACE,sBAAKA,UAAU,cAAf,UACE,oBAAIA,UAAU,uCAAd,SACGF,EAAE,0BAEL,qBAAKE,UAAU,gBAAf,SACE,cAAC,IAAD","file":"static/js/56.2582ff06.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport default function ContactForm() {\r\n  return <div>alala</div>;\r\n} /*}\r\n\r\n/*import React, { useState } from 'react';\r\nimport { API } from 'aws-amplify';\r\n\r\nimport useForm from './hooks/useForm';\r\nimport validate from './utility/ContactFormValidation';\r\nimport '../styles/Partner.css';\r\nimport { useLocation } from 'react-router-dom';\r\nimport Alert from '@mui/material/Alert';\r\nimport AlertTitle from '@mui/material/AlertTitle';\r\nimport { Trans, useTranslation } from 'react-i18next';\r\n\r\nexport default function ContactForm(props) {\r\n  const { t } = useTranslation();\r\n  let location = useLocation();\r\n  const pathname = location.pathname;\r\n\r\n  const { values, errors, handleChange, handleSubmit } = useForm(\r\n    addContact,\r\n    validate,\r\n    callback\r\n  );\r\n\r\n  const [isSending, setIsSending] = useState(false);\r\n  const [sent, setSent] = useState(false);\r\n\r\n  async function addContact() {\r\n    console.log('called add contact');\r\n    setIsSending(true);\r\n    // create request body\r\n    const data = {\r\n      body: {\r\n        name: values.name,\r\n        email: values.email,\r\n        message: values.message || 'This is a demo request',\r\n        phone: values.phone || '',\r\n        location: values.location || '',\r\n      },\r\n    };\r\n    // call the API gateway\r\n    const apiData = await API.post('contactFormApi', '/contact', data);\r\n    console.log({ apiData });\r\n    setIsSending(false);\r\n    setSent(true);\r\n  }\r\n\r\n  function callback() {\r\n    console.log(values.message);\r\n    console.log(errors.message);\r\n  }\r\n\r\n  const openInNewTab = (url) => {\r\n    const newWindow = window.open(url, '_blank', 'noopener,noreferrer');\r\n    if (newWindow) newWindow.opener = null;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/*isSending ? (\r\n        <Loading />\r\n      ) : (\r\n      <>\r\n        {sent && (\r\n          <Alert\r\n            severity='success'\r\n            onClose={() => {\r\n              setSent(false);\r\n            }}\r\n          >\r\n            <AlertTitle>\r\n              <strong>{t('contact_page.email_notif_title')}</strong>\r\n            </AlertTitle>\r\n            {t('contact_page.email_notif_text')}\r\n          </Alert>\r\n        )}\r\n        <form>\r\n          <div\r\n            className={\r\n              pathname === '/contact-us'\r\n                ? 'o-form__group'\r\n                : pathname === '/'\r\n                ? 'o-form__group-full'\r\n                : 'o-form__group u-txt--center'\r\n            }\r\n          >\r\n            {props.title && (\r\n              <h3 className={props.title_classname}>\r\n                {t(`contact_page.${props.title}`)}\r\n              </h3>\r\n            )}\r\n            <div className='o-form__matrix-2'>\r\n              <span className='form-control-wrap your-name is-required'>\r\n                <input\r\n                  type='text'\r\n                  name='name'\r\n                  value-size='40'\r\n                  className='o-form__control'\r\n                  placeholder='Name'\r\n                  value={values.name || ''}\r\n                  onChange={handleChange}\r\n                />\r\n                {errors.name && <p className='help is-danger'>{errors.name}</p>}\r\n              </span>\r\n              <span className='form-control-wrap your-email is-required'>\r\n                <input\r\n                  type='text'\r\n                  name='email'\r\n                  value-size='40'\r\n                  className='o-form__control'\r\n                  placeholder='E-mail'\r\n                  value={values.email || ''}\r\n                  onChange={handleChange}\r\n                />\r\n                {errors.email && (\r\n                  <p className='help is-danger'>{errors.email}</p>\r\n                )}\r\n              </span>\r\n              <span className='form-control-wrap your-name'>\r\n                <input\r\n                  type='text'\r\n                  name='phone'\r\n                  value-size='40'\r\n                  value={values.phone || ''}\r\n                  onChange={handleChange}\r\n                  className='o-form__control'\r\n                  placeholder='Phone number (optional)'\r\n                />\r\n              </span>\r\n              {!props.demo && (\r\n                <span className='form-control-wrap your-location'>\r\n                  <input\r\n                    type='text'\r\n                    name='location'\r\n                    value-size='40'\r\n                    value={values.location || ''}\r\n                    onChange={handleChange}\r\n                    className='o-form__control'\r\n                    placeholder='Location (optional)'\r\n                  />\r\n                </span>\r\n              )}\r\n            </div>\r\n          </div>\r\n          {!props.demo && (\r\n            <div\r\n              className={\r\n                pathname === '/contact-us'\r\n                  ? 'o-form__group'\r\n                  : 'o-form__group u-txt--center'\r\n              }\r\n            >\r\n              <span className='form-control-wrap message'>\r\n                <textarea\r\n                  name='message'\r\n                  cols='40'\r\n                  rows='6'\r\n                  className='o-form__control textarea is-required o-form__control'\r\n                  placeholder=\"Tell us what you're working on\"\r\n                  type='text'\r\n                  value={values.message || ''}\r\n                  onChange={handleChange}\r\n                />\r\n                {errors.message && (\r\n                  <p className='help is-danger'>{errors.message}</p>\r\n                )}\r\n              </span>\r\n            </div>\r\n          )}\r\n\r\n          <div\r\n            className={\r\n              pathname === '/contact-us'\r\n                ? 'o-form__group'\r\n                : pathname === '/'\r\n                ? 'o-form__group-full'\r\n                : 'o-form__group u-txt--center'\r\n            }\r\n          >\r\n            <span className='form-control-wrap gdpr-contact-consent'>\r\n              <span className='list-item is-required'>\r\n                <label>\r\n                  <input\r\n                    type='checkbox'\r\n                    name='conditions'\r\n                    value={values.conditions || false}\r\n                    onChange={handleChange}\r\n                  />\r\n\r\n                  <span\r\n                    className={\r\n                      props.demo\r\n                        ? 'list-item-label is-white'\r\n                        : 'list-item-label'\r\n                    }\r\n                  >\r\n                    <Trans i18nKey='contact_page.accept1'>\r\n                      I accept SquareRoot's\r\n                      <a\r\n                        onClick={() =>\r\n                          openInNewTab(\r\n                            'https://squareroot-as.github.io/SquareRoot/tou.html'\r\n                          )\r\n                        }\r\n                      >\r\n                        &nbsp;Terms of Use&nbsp;\r\n                      </a>\r\n                      and\r\n                      <a\r\n                        onClick={() =>\r\n                          openInNewTab(\r\n                            'https://squareroot-as.github.io/SquareRoot/privacy.html'\r\n                          )\r\n                        }\r\n                      >\r\n                        &nbsp;Privacy Policy\r\n                      </a>\r\n                    </Trans>\r\n                  </span>\r\n                </label>\r\n              </span>\r\n            </span>\r\n            {errors.conditions && (\r\n              <p className='help is-danger'>{errors.conditions}</p>\r\n            )}\r\n\r\n            <span className='form-control-wrap subscribe-contact'>\r\n              <span className='list-item'>\r\n                <label>\r\n                  <input\r\n                    type='checkbox'\r\n                    name='consent'\r\n                    value={values.consent || false}\r\n                    onChange={handleChange}\r\n                  />\r\n\r\n                  <span\r\n                    className={\r\n                      props.demo\r\n                        ? 'list-item-label is-white'\r\n                        : 'list-item-label'\r\n                    }\r\n                  >\r\n                    {t('contact_page.accept2')}\r\n                  </span>\r\n                </label>\r\n              </span>\r\n            </span>\r\n          </div>\r\n          {props.demo ? (\r\n            <button\r\n              className='submit-form-control submit o-btn'\r\n              onClick={handleSubmit}\r\n              disabled={errors.conditions || errors.name || errors.email}\r\n            >\r\n              {t('contact_page.send')}\r\n            </button>\r\n          ) : (\r\n            <button\r\n              className='submit-form-control submit o-btn'\r\n              onClick={handleSubmit}\r\n              disabled={\r\n                errors.conditions ||\r\n                errors.name ||\r\n                errors.email ||\r\n                errors.message\r\n              }\r\n            >\r\n              {t('contact_page.send')}\r\n            </button>\r\n          )}\r\n        </form>\r\n      </>\r\n      )}{\" \"}\r\n    </>\r\n  );\r\n}*/\r\n","import React, { useState } from 'react';\r\nimport '../../styles/Partner.css';\r\nimport { useTranslation } from 'react-i18next';\r\nimport ContactForm from '../../components/ContactForm';\r\n\r\nexport default function Partner(props) {\r\n  const { t } = useTranslation();\r\n  return (\r\n    <div className='o-container'>\r\n      <div className='c-hero'>\r\n        <h1 className='c-txt--hero'>{t('partner_page.title')}</h1>\r\n\r\n        <div className='c-mrg--bottom' />\r\n\r\n        <div className='c-grid--2x1'>\r\n          <div className='grid-item3 margin-left'>\r\n            <img\r\n              src='../images/partner.jpg'\r\n              className='c-img flip-img'\r\n              alt='Partner'\r\n            />\r\n          </div>\r\n\r\n          <div className='grid-item1 padding-top'>\r\n            <div className='c-txt-punchline--sm'>\r\n              <h2 className='c-txt-punchline--sm'>\r\n                {t('partner_page.subtitle')}\r\n              </h2>\r\n              {t('partner_page.description')}\r\n              <br />\r\n              <br />\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className='o-container--lrg background-grey'>\r\n          <div className='c-grid--4x1'>\r\n            <div className='4x1--item1'>\r\n              <div className='c-txt-punchline--sm'>{t('partner_page.RED')}</div>\r\n              <div className='short-border' />\r\n              <p>{t('partner_page.RED_d')}</p>\r\n            </div>\r\n\r\n            <div className='4x1--item2'>\r\n              <div className='c-txt-punchline--sm'>\r\n                {t('partner_page.LARK')}\r\n              </div>\r\n\r\n              <div className='short-border' />\r\n              <p>{t('partner_page.LARK_d')}</p>\r\n            </div>\r\n\r\n            <div className='4x1--item3'>\r\n              <div className='c-txt-punchline--sm'>\r\n                {t('partner_page.LENT')}\r\n              </div>\r\n              <div className='short-border' />\r\n              <p>{t('partner_page.LENT_d')}</p>\r\n            </div>\r\n\r\n            <div className='4x1--item4'>\r\n              <div className='c-txt-punchline--sm'>{t('partner_page.PN')}</div>\r\n              <div className='short-border' />\r\n              <p>{t('partner_page.PN_d')}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className='c-section c-section--cta background-grey'>\r\n          <div className='o-container'>\r\n            <h2 className='c-txt-sectiontitle--sm u-txt--center'>\r\n              {t('partner_page.contact')}\r\n            </h2>\r\n            <div className='u-txt--center'>\r\n              <ContactForm />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"sourceRoot":""}