{"version":3,"sources":["components/container/PageContainer.js","layouts/full-layout/breadcrumb/Breadcrumb.js","components/base-card/BaseCard.js","components/forms/custom-elements/CustomCheckbox.js","views/form-elements/ExCheckbox.js"],"names":["PageContainer","title","description","children","name","content","Breadcrumb","subtitle","items","container","sx","p","item","xs","sm","lg","color","fontWeight","variant","separator","fontSize","map","to","underline","component","NavLink","lineHeight","display","alignItems","md","justifyContent","width","BaseCard","centering","style","textAlign","BpIcon","styled","theme","borderRadius","height","boxShadow","palette","mode","backgroundColor","outline","outlineOffset","primary","background","BpCheckedIcon","backgroundImage","CustomCheckbox","bgcolor","props","disableRipple","checkedIcon","icon","inputProps","BCrumb","ExCheckbox","React","useState","checked","setChecked","handleChange","event","target","spacing","onChange","inputprops","disabled","defaultChecked","indeterminate","control","label","success","main","error","warning","row","value","labelPlacement"],"mappings":"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","file":"static/js/50.b7e0996d.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Helmet } from 'react-helmet';\r\n\r\nconst PageContainer = ({ title, description, children }) => (\r\n  <div>\r\n    <Helmet>\r\n      <title>{title}</title>\r\n      <meta name='description' content={description} />\r\n    </Helmet>\r\n    {children}\r\n  </div>\r\n);\r\n\r\nPageContainer.propTypes = {\r\n  title: PropTypes.string,\r\n  description: PropTypes.string,\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default PageContainer;\r\n","import React from 'react';\r\nimport { Grid, Typography, Box, Breadcrumbs, Link } from '@mui/material';\r\nimport { NavLink } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport NavigateNextIcon from '@mui/icons-material/NavigateNext';\r\n\r\nconst Breadcrumb = ({ subtitle, items, title, children }) => (\r\n  <Grid\r\n    container\r\n    sx={{\r\n      p: '15px',\r\n    }}\r\n  >\r\n    <Grid item xs={12} sm={6} lg={8}>\r\n      <Typography color='textSecondary' fontWeight='400' variant='h4'>\r\n        {subtitle}\r\n      </Typography>\r\n\r\n      <Breadcrumbs\r\n        separator={<NavigateNextIcon fontSize='small' />}\r\n        aria-label='breadcrumb'\r\n      >\r\n        {items\r\n          ? items.map((item) => (\r\n              <div key={item.title}>\r\n                {item.to ? (\r\n                  <Link\r\n                    underline='none'\r\n                    color='inherit'\r\n                    component={NavLink}\r\n                    to={item.to}\r\n                  >\r\n                    {item.title}\r\n                  </Link>\r\n                ) : (\r\n                  <Typography color='textPrimary'>{item.title}</Typography>\r\n                )}\r\n              </div>\r\n            ))\r\n          : ''}\r\n      </Breadcrumbs>\r\n      <Typography\r\n        fontWeight='700'\r\n        variant='h1'\r\n        sx={{\r\n          lineHeight: '1.235',\r\n        }}\r\n      >\r\n        {title}\r\n      </Typography>\r\n    </Grid>\r\n    <Grid item xs={12} sm={6} lg={4} display='flex' alignItems='flex-end'>\r\n      <Box\r\n        sx={{\r\n          display: { xs: 'none', md: 'block', lg: 'flex' },\r\n          alignItems: 'center',\r\n          justifyContent: 'flex-end',\r\n          width: '100%',\r\n        }}\r\n      >\r\n        {children}\r\n      </Box>\r\n    </Grid>\r\n  </Grid>\r\n);\r\n\r\nBreadcrumb.propTypes = {\r\n  subtitle: PropTypes.string,\r\n  items: PropTypes.array,\r\n  title: PropTypes.string,\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default Breadcrumb;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  Divider,\r\n  Typography,\r\n} from '@mui/material';\r\n\r\nconst BaseCard = ({ title, children, variant, centering }) => (\r\n  <Card\r\n    sx={{\r\n      width: '100%',\r\n      p: 0,\r\n    }}\r\n  >\r\n    <CardHeader\r\n      style={centering && { textAlign: 'center' }}\r\n      title={\r\n        variant ? <Typography variant={variant}>{title}</Typography> : title\r\n      }\r\n    />\r\n    <Divider />\r\n    <CardContent\r\n      sx={{ alignItems: 'center', justifyContent: 'center', display: 'flex' }}\r\n    >\r\n      {children}\r\n    </CardContent>\r\n  </Card>\r\n);\r\n\r\nBaseCard.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.node,\r\n  variant: PropTypes.string,\r\n  centering: PropTypes.bool,\r\n};\r\n\r\nexport default BaseCard;\r\n","import * as React from 'react';\r\nimport { styled } from '@mui/material/styles';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst BpIcon = styled('span')(({ theme }) => ({\r\n  borderRadius: 3,\r\n  width: 21,\r\n  height: 21,\r\n\r\n  boxShadow:\r\n    theme.palette.mode === 'dark'\r\n      ? '0 0 0 1px rgb(16 22 26 / 40%)'\r\n      : 'inset 0 0 0 1px rgba(0,0,0,.2)',\r\n  backgroundColor: theme.palette.mode === 'dark' ? 'rgba(0,0,0,0.4)' : '',\r\n\r\n  '.Mui-focusVisible &': {\r\n    outline: '0px auto rgba(19,124,189,.6)',\r\n    outlineOffset: 2,\r\n  },\r\n  'input:hover ~ &': {\r\n    backgroundColor:\r\n      theme.palette.mode === 'dark'\r\n        ? theme.palette.primary\r\n        : theme.palette.primary,\r\n  },\r\n  'input:disabled ~ &': {\r\n    boxShadow: 'none',\r\n    background:\r\n      theme.palette.mode === 'dark'\r\n        ? 'rgba(57,75,89,.5)'\r\n        : 'rgba(206,217,224,.5)',\r\n  },\r\n}));\r\n\r\nconst BpCheckedIcon = styled(BpIcon)({\r\n  boxShadow: 'none',\r\n  width: 21,\r\n  height: 21,\r\n  '&:before': {\r\n    display: 'block',\r\n    width: 21,\r\n    height: 21,\r\n    backgroundImage:\r\n      \"url(\\\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'%3E%3Cpath\" +\r\n      \" fill-rule='evenodd' clip-rule='evenodd' d='M12 5c-.28 0-.53.11-.71.29L7 9.59l-2.29-2.3a1.003 \" +\r\n      \"1.003 0 00-1.42 1.42l3 3c.18.18.43.29.71.29s.53-.11.71-.29l5-5A1.003 1.003 0 0012 5z' fill='%23fff'/%3E%3C/svg%3E\\\")\",\r\n    content: '\"\"',\r\n  },\r\n});\r\n\r\n// Inspired by blueprintjs\r\nfunction CustomCheckbox({ bgcolor, ...props }) {\r\n  return (\r\n    <Checkbox\r\n      disableRipple\r\n      color='default'\r\n      checkedIcon={\r\n        <BpCheckedIcon\r\n          sx={{\r\n            backgroundColor: bgcolor || 'primary.main',\r\n          }}\r\n        />\r\n      }\r\n      icon={<BpIcon />}\r\n      inputProps={{ 'aria-label': 'Checkbox demo' }}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n\r\nCustomCheckbox.propTypes = {\r\n  bgcolor: PropTypes.string,\r\n};\r\n\r\nexport default CustomCheckbox;\r\n","import React from 'react';\r\nimport {\r\n  Grid,\r\n  Box,\r\n  Checkbox,\r\n  FormGroup,\r\n  FormControlLabel,\r\n  FormControl,\r\n} from '@mui/material';\r\nimport CheckBoxOutlineBlankIcon from '@mui/icons-material/CheckBoxOutlineBlank';\r\nimport CheckBoxIcon from '@mui/icons-material/CheckBox';\r\nimport Favorite from '@mui/icons-material/Favorite';\r\nimport FavoriteBorder from '@mui/icons-material/FavoriteBorder';\r\nimport PageContainer from '../../components/container/PageContainer';\r\nimport BaseCard from '../../components/base-card/BaseCard';\r\nimport Breadcrumb from '../../layouts/full-layout/breadcrumb/Breadcrumb';\r\n\r\nimport CustomCheckbox from '../../components/forms/custom-elements/CustomCheckbox';\r\n\r\nconst BCrumb = [\r\n  {\r\n    to: '/',\r\n    title: 'Home',\r\n  },\r\n  {\r\n    title: 'Checkbox',\r\n  },\r\n];\r\n\r\nconst ExCheckbox = () => {\r\n  // 2\r\n  const [checked, setChecked] = React.useState(true);\r\n\r\n  const handleChange = (event) => {\r\n    setChecked(event.target.checked);\r\n  };\r\n  return (\r\n    <PageContainer title='Checkbox' description='this is Checkbox page'>\r\n      {/* breadcrumb */}\r\n      <Breadcrumb title='Checkbox' items={BCrumb} />\r\n      {/* end breadcrumb */}\r\n      <Grid container spacing={0}>\r\n        {/* ------------------------- custom row 1 ------------------------- */}\r\n        <Grid item xs={12} lg={6} sm={6} display='flex' alignItems='stretch'>\r\n          <BaseCard title='Custom Checkbox'>\r\n            <Box\r\n              sx={{\r\n                textAlign: 'center',\r\n              }}\r\n            >\r\n              <CustomCheckbox\r\n                checked={checked}\r\n                onChange={handleChange}\r\n                inputprops={{ 'aria-label': 'primary checkbox' }}\r\n              />\r\n\r\n              <CustomCheckbox\r\n                disabled\r\n                checked\r\n                inputprops={{ 'aria-label': 'disabled checked checkbox' }}\r\n              />\r\n              <CustomCheckbox\r\n                defaultChecked\r\n                indeterminate\r\n                inputprops={{ 'aria-label': 'indeterminate checkbox' }}\r\n              />\r\n              <CustomCheckbox\r\n                defaultChecked\r\n                color='default'\r\n                inputprops={{ 'aria-label': 'checkbox with default color' }}\r\n              />\r\n            </Box>\r\n          </BaseCard>\r\n        </Grid>\r\n        <Grid item xs={12} lg={6} sm={6} display='flex' alignItems='stretch'>\r\n          <BaseCard title='Custom Checkbox with Color'>\r\n            <Box\r\n              sx={{\r\n                textAlign: 'center',\r\n              }}\r\n            >\r\n              <FormControlLabel\r\n                control={<CustomCheckbox defaultChecked />}\r\n                label='Primary'\r\n              />\r\n              <FormControlLabel\r\n                control={\r\n                  <CustomCheckbox\r\n                    defaultChecked\r\n                    bgcolor='#1e4db7'\r\n                    inputprops={{ 'aria-label': 'checkbox with default color' }}\r\n                  />\r\n                }\r\n                label='Secondary'\r\n              />\r\n              <FormControlLabel\r\n                control={\r\n                  <CustomCheckbox\r\n                    defaultChecked\r\n                    bgcolor='#39cb7f'\r\n                    inputprops={{ 'aria-label': 'checkbox with default color' }}\r\n                  />\r\n                }\r\n                label='Success'\r\n              />\r\n              <FormControlLabel\r\n                control={\r\n                  <CustomCheckbox\r\n                    defaultChecked\r\n                    bgcolor='#fec90f'\r\n                    inputprops={{ 'aria-label': 'checkbox with default color' }}\r\n                  />\r\n                }\r\n                label='Warning'\r\n              />\r\n              <FormControlLabel\r\n                control={\r\n                  <CustomCheckbox\r\n                    defaultChecked\r\n                    bgcolor='#fc4b6c'\r\n                    inputprops={{ 'aria-label': 'checkbox with default color' }}\r\n                  />\r\n                }\r\n                label='Error'\r\n              />\r\n            </Box>\r\n          </BaseCard>\r\n        </Grid>\r\n        {/* ------------------------- row 1 ------------------------- */}\r\n        <Grid item xs={12} lg={4} sm={6} display='flex' alignItems='stretch'>\r\n          <BaseCard title='Default Checkbox'>\r\n            <Box\r\n              sx={{\r\n                textAlign: 'center',\r\n              }}\r\n            >\r\n              <Checkbox\r\n                checked={checked}\r\n                onChange={handleChange}\r\n                inputprops={{ 'aria-label': 'primary checkbox' }}\r\n              />\r\n\r\n              <Checkbox\r\n                disabled\r\n                checked\r\n                inputprops={{ 'aria-label': 'disabled checked checkbox' }}\r\n              />\r\n              <Checkbox\r\n                defaultChecked\r\n                indeterminate\r\n                inputprops={{ 'aria-label': 'indeterminate checkbox' }}\r\n              />\r\n              <Checkbox\r\n                defaultChecked\r\n                color='default'\r\n                inputprops={{ 'aria-label': 'checkbox with default color' }}\r\n              />\r\n            </Box>\r\n          </BaseCard>\r\n        </Grid>\r\n        {/* ------------------------- row 1 ------------------------- */}\r\n        <Grid item xs={12} lg={4} sm={6} display='flex' alignItems='stretch'>\r\n          <BaseCard title='Default with Colors'>\r\n            <Box\r\n              sx={{\r\n                textAlign: 'center',\r\n              }}\r\n            >\r\n              <Checkbox\r\n                defaultChecked\r\n                color='primary'\r\n                inputprops={{ 'aria-label': 'checkbox with default color' }}\r\n              />\r\n              <Checkbox\r\n                defaultChecked\r\n                color='secondary'\r\n                inputprops={{ 'aria-label': 'checkbox with default color' }}\r\n              />\r\n              <Checkbox\r\n                defaultChecked\r\n                sx={{\r\n                  color: (theme) => theme.palette.success.main,\r\n                  '&.Mui-checked': {\r\n                    color: (theme) => theme.palette.success.main,\r\n                  },\r\n                }}\r\n              />\r\n              <Checkbox\r\n                defaultChecked\r\n                sx={{\r\n                  color: (theme) => theme.palette.error.main,\r\n                  '&.Mui-checked': {\r\n                    color: (theme) => theme.palette.error.main,\r\n                  },\r\n                }}\r\n              />\r\n              <Checkbox\r\n                defaultChecked\r\n                sx={{\r\n                  color: (theme) => theme.palette.warning.main,\r\n                  '&.Mui-checked': {\r\n                    color: (theme) => theme.palette.warning.main,\r\n                  },\r\n                }}\r\n              />\r\n            </Box>\r\n          </BaseCard>\r\n        </Grid>\r\n        {/* ------------------------- row 1 ------------------------- */}\r\n        <Grid item xs={12} lg={4} sm={6} display='flex' alignItems='stretch'>\r\n          <BaseCard title='Sizes & Custom icon'>\r\n            <Box>\r\n              <FormGroup\r\n                row\r\n                sx={{\r\n                  display: 'flex',\r\n                  justifyContent: 'center',\r\n                }}\r\n              >\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox\r\n                      icon={<CheckBoxOutlineBlankIcon />}\r\n                      checkedIcon={<CheckBoxIcon />}\r\n                      name='checkednormal'\r\n                    />\r\n                  }\r\n                  label='Normal Size'\r\n                />\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox\r\n                      icon={<CheckBoxOutlineBlankIcon fontSize='small' />}\r\n                      checkedIcon={<CheckBoxIcon fontSize='small' />}\r\n                      name='checkedsmall'\r\n                    />\r\n                  }\r\n                  label='Small size'\r\n                />\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox\r\n                      icon={<FavoriteBorder />}\r\n                      checkedIcon={<Favorite />}\r\n                      name='checkedH'\r\n                    />\r\n                  }\r\n                  label='Heart'\r\n                />\r\n              </FormGroup>\r\n            </Box>\r\n          </BaseCard>\r\n        </Grid>\r\n\r\n        {/* ------------------------- row 1 ------------------------- */}\r\n        <Grid item xs={12} lg={6} sm={6} display='flex' alignItems='stretch'>\r\n          <BaseCard title='Placement'>\r\n            <FormControl\r\n              component='fieldset'\r\n              sx={{\r\n                display: 'flex',\r\n                justifyContent: 'center',\r\n              }}\r\n            >\r\n              <FormGroup\r\n                aria-label='position'\r\n                row\r\n                sx={{\r\n                  justifyContent: 'center',\r\n                }}\r\n              >\r\n                <FormControlLabel\r\n                  value='top'\r\n                  control={<Checkbox color='primary' />}\r\n                  label='Top'\r\n                  labelPlacement='top'\r\n                />\r\n                <FormControlLabel\r\n                  value='start'\r\n                  control={<Checkbox color='primary' />}\r\n                  label='Start'\r\n                  labelPlacement='start'\r\n                />\r\n                <FormControlLabel\r\n                  value='bottom'\r\n                  control={<Checkbox color='primary' />}\r\n                  label='Bottom'\r\n                  labelPlacement='bottom'\r\n                />\r\n                <FormControlLabel\r\n                  value='end'\r\n                  control={<Checkbox color='primary' />}\r\n                  label='End'\r\n                  labelPlacement='end'\r\n                />\r\n              </FormGroup>\r\n            </FormControl>\r\n          </BaseCard>\r\n        </Grid>\r\n\r\n        {/* ------------------------- row 1 ------------------------- */}\r\n        <Grid item xs={12} lg={6} sm={6} display='flex' alignItems='stretch'>\r\n          <BaseCard title='Color with Label'>\r\n            <Box\r\n              sx={{\r\n                textAlign: 'center',\r\n              }}\r\n            >\r\n              <FormControlLabel\r\n                value='end'\r\n                control={<Checkbox color='primary' checked />}\r\n                label='Primary'\r\n                labelPlacement='end'\r\n              />\r\n              <FormControlLabel\r\n                value='end'\r\n                control={<Checkbox color='secondary' checked />}\r\n                label='Secondary'\r\n                labelPlacement='end'\r\n              />\r\n              <FormControlLabel\r\n                value='end'\r\n                control={\r\n                  <Checkbox\r\n                    checked\r\n                    sx={{\r\n                      color: (theme) => theme.palette.success.main,\r\n                      '&.Mui-checked': {\r\n                        color: (theme) => theme.palette.success.main,\r\n                      },\r\n                    }}\r\n                  />\r\n                }\r\n                label='Success'\r\n                labelPlacement='end'\r\n              />\r\n\r\n              <FormControlLabel\r\n                value='end'\r\n                control={\r\n                  <Checkbox\r\n                    checked\r\n                    sx={{\r\n                      color: (theme) => theme.palette.error.main,\r\n                      '&.Mui-checked': {\r\n                        color: (theme) => theme.palette.error.main,\r\n                      },\r\n                    }}\r\n                  />\r\n                }\r\n                label='Danger'\r\n                labelPlacement='end'\r\n              />\r\n\r\n              <FormControlLabel\r\n                value='end'\r\n                control={\r\n                  <Checkbox\r\n                    checked\r\n                    sx={{\r\n                      color: (theme) => theme.palette.warning.main,\r\n                      '&.Mui-checked': {\r\n                        color: (theme) => theme.palette.warning.main,\r\n                      },\r\n                    }}\r\n                  />\r\n                }\r\n                label='Warning'\r\n                labelPlacement='end'\r\n              />\r\n            </Box>\r\n          </BaseCard>\r\n        </Grid>\r\n      </Grid>\r\n    </PageContainer>\r\n  );\r\n};\r\n\r\nexport default ExCheckbox;\r\n"],"sourceRoot":""}