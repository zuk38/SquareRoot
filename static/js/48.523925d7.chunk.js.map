{"version":3,"sources":["components/container/PageContainer.js","layouts/full-layout/breadcrumb/Breadcrumb.js","assets/images/products/s1.jpg","assets/images/products/s2.jpg","assets/images/products/s3.jpg","assets/images/products/s4.jpg","views/tables/CollapsibleTable.js"],"names":["PageContainer","title","description","children","name","content","Breadcrumb","subtitle","items","container","sx","p","item","xs","sm","lg","color","fontWeight","variant","separator","fontSize","map","to","underline","component","NavLink","lineHeight","display","alignItems","md","justifyContent","width","rows","imgsrc","img1","pname","customer","inventory","price","history","date","customerId","amount","img2","img3","img4","Row","props","row","React","useState","open","setOpen","borderBottom","size","onClick","src","alt","borderRadius","height","ml","backgroundColor","theme","palette","success","light","error","secondary","main","pl","pr","label","paddingBottom","paddingTop","colSpan","in","timeout","unmountOnExit","margin","gutterBottom","mt","grey","A700","mode","A200","historyRow","scope","Math","round","BCrumb","CollapsibleTable","Paper","whiteSpace"],"mappings":"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","file":"static/js/48.523925d7.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Helmet } from 'react-helmet';\n\nconst PageContainer = ({ title, description, children }) => (\n  <div>\n    <Helmet>\n      <title>{title}</title>\n      <meta name='description' content={description} />\n    </Helmet>\n    {children}\n  </div>\n);\n\nPageContainer.propTypes = {\n  title: PropTypes.string,\n  description: PropTypes.string,\n  children: PropTypes.node,\n};\n\nexport default PageContainer;\n","import React from 'react';\nimport { Grid, Typography, Box, Breadcrumbs, Link } from '@mui/material';\nimport { NavLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport NavigateNextIcon from '@mui/icons-material/NavigateNext';\n\nconst Breadcrumb = ({ subtitle, items, title, children }) => (\n  <Grid\n    container\n    sx={{\n      p: '15px',\n    }}\n  >\n    <Grid item xs={12} sm={6} lg={8}>\n      <Typography color='textSecondary' fontWeight='400' variant='h4'>\n        {subtitle}\n      </Typography>\n\n      <Breadcrumbs\n        separator={<NavigateNextIcon fontSize='small' />}\n        aria-label='breadcrumb'\n      >\n        {items\n          ? items.map((item) => (\n              <div key={item.title}>\n                {item.to ? (\n                  <Link\n                    underline='none'\n                    color='inherit'\n                    component={NavLink}\n                    to={item.to}\n                  >\n                    {item.title}\n                  </Link>\n                ) : (\n                  <Typography color='textPrimary'>{item.title}</Typography>\n                )}\n              </div>\n            ))\n          : ''}\n      </Breadcrumbs>\n      <Typography\n        fontWeight='700'\n        variant='h1'\n        sx={{\n          lineHeight: '1.235',\n        }}\n      >\n        {title}\n      </Typography>\n    </Grid>\n    <Grid item xs={12} sm={6} lg={4} display='flex' alignItems='flex-end'>\n      <Box\n        sx={{\n          display: { xs: 'none', md: 'block', lg: 'flex' },\n          alignItems: 'center',\n          justifyContent: 'flex-end',\n          width: '100%',\n        }}\n      >\n        {children}\n      </Box>\n    </Grid>\n  </Grid>\n);\n\nBreadcrumb.propTypes = {\n  subtitle: PropTypes.string,\n  items: PropTypes.array,\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\n\nexport default Breadcrumb;\n","export default __webpack_public_path__ + \"static/media/s1.69341801.jpg\";","export default __webpack_public_path__ + \"static/media/s2.3260a3b5.jpg\";","export default __webpack_public_path__ + \"static/media/s3.323ebcbe.jpg\";","export default __webpack_public_path__ + \"static/media/s4.f4c5d8f9.jpg\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Card,\n  CardContent,\n  Typography,\n  Box,\n  Avatar,\n  Chip,\n  Paper,\n  Collapse,\n  IconButton,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n} from '@mui/material';\n\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\nimport KeyboardArrowUpIcon from '@mui/icons-material/KeyboardArrowUp';\n\nimport Breadcrumb from '../../layouts/full-layout/breadcrumb/Breadcrumb';\nimport PageContainer from '../../components/container/PageContainer';\n\nimport img1 from '../../assets/images/products/s1.jpg';\nimport img2 from '../../assets/images/products/s2.jpg';\nimport img3 from '../../assets/images/products/s3.jpg';\nimport img4 from '../../assets/images/products/s4.jpg';\n\nconst rows = [\n  {\n    imgsrc: img1,\n    pname: 'Good butterscotch ice-cream',\n    customer: 'Sunil Joshi',\n    inventory: 'In Stock',\n    price: '250.00',\n    items: '2',\n    history: [\n      { date: '2021-02-05', customerId: '11091700', amount: 3 },\n      { date: '2021-02-02', customerId: 'Anonymous', amount: 1 },\n    ],\n  },\n  {\n    imgsrc: img2,\n    pname: 'Supreme fresh tomato available',\n    customer: 'John Deo',\n    inventory: 'Out of Stock',\n    price: '450.00',\n    items: '1',\n    history: [\n      { date: '2021-02-05', customerId: '15202410', amount: 3 },\n      { date: '2021-02-02', customerId: 'Anonymous', amount: 1 },\n    ],\n  },\n  {\n    imgsrc: img3,\n    pname: 'Red color candy from Gucci',\n    customer: 'Andrew McDownland',\n    inventory: 'Out of Stock',\n    price: '150.00',\n    items: '1',\n    history: [\n      { date: '2021-02-05', customerId: '15202410', amount: 3 },\n      { date: '2021-02-02', customerId: 'Anonymous', amount: 1 },\n    ],\n  },\n  {\n    imgsrc: img4,\n    pname: 'Stylish night lamp for night',\n    customer: 'Christopher Jamil',\n    inventory: 'In Stock',\n    price: '550.00',\n    items: '6',\n    history: [\n      { date: '2021-02-05', customerId: '15202410', amount: 3 },\n      { date: '2021-02-02', customerId: 'Anonymous', amount: 1 },\n    ],\n  },\n];\n\nfunction Row(props) {\n  const { row } = props;\n  const [open, setOpen] = React.useState(false);\n\n  return (\n    <>\n      <TableRow>\n        <TableCell\n          sx={{\n            borderBottom: '0',\n          }}\n        >\n          <IconButton\n            aria-label='expand row'\n            size='small'\n            onClick={() => setOpen(!open)}\n          >\n            {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\n          </IconButton>\n        </TableCell>\n        <TableCell\n          sx={{\n            borderBottom: '0',\n          }}\n        >\n          <Box display='flex' alignItems='center'>\n            <Avatar\n              src={row.imgsrc}\n              alt={row.imgsrc}\n              sx={{\n                borderRadius: '10px',\n                height: '70px',\n                width: '90px',\n              }}\n            />\n            <Box\n              sx={{\n                ml: 2,\n              }}\n            >\n              <Typography variant='h5' fontWeight='600'>\n                {row.pname}\n              </Typography>\n            </Box>\n          </Box>\n        </TableCell>\n        <TableCell\n          sx={{\n            borderBottom: '0',\n          }}\n        >\n          <Typography color='textSecondary' variant='h5' fontWeight='600'>\n            {row.customer}\n          </Typography>\n        </TableCell>\n        <TableCell\n          sx={{\n            borderBottom: '0',\n          }}\n        >\n          <Chip\n            sx={{\n              backgroundColor:\n                row.inventory === 'In Stock'\n                  ? (theme) => theme.palette.success.light\n                  : row.inventory === 'Out of Stock'\n                  ? (theme) => theme.palette.error.light\n                  : (theme) => theme.palette.secondary.light,\n              color:\n                row.inventory === 'In Stock'\n                  ? (theme) => theme.palette.success.main\n                  : row.inventory === 'Out of Stock'\n                  ? (theme) => theme.palette.error.main\n                  : (theme) => theme.palette.secondary.main,\n              borderRadius: '6px',\n              pl: '3px',\n              pr: '3px',\n            }}\n            size='small'\n            label={row.inventory}\n          />\n        </TableCell>\n        <TableCell\n          sx={{\n            borderBottom: '0',\n          }}\n        >\n          <Typography color='textSecondary' variant='h5' fontWeight='400'>\n            ${row.price}\n          </Typography>\n        </TableCell>\n        <TableCell\n          sx={{\n            borderBottom: '0',\n          }}\n        >\n          <Typography color='textSecondary' fontWeight='400'>\n            {row.items}\n          </Typography>\n        </TableCell>\n      </TableRow>\n      <TableRow>\n        <TableCell sx={{ paddingBottom: 0, paddingTop: 0 }} colSpan={6}>\n          <Collapse in={open} timeout='auto' unmountOnExit>\n            <Box margin={1}>\n              <Typography\n                gutterBottom\n                variant='h5'\n                sx={{\n                  mt: 2,\n                  backgroundColor: (theme) => theme.palette.grey.A700,\n                  p: '5px 15px',\n                  color: (theme) =>\n                    `${\n                      theme.palette.mode === 'dark'\n                        ? theme.palette.grey.A200\n                        : 'rgba(0, 0, 0, 0.87)'\n                    }`,\n                }}\n              >\n                History\n              </Typography>\n              <Table size='small' aria-label='purchases'>\n                <TableHead>\n                  <TableRow>\n                    <TableCell>\n                      <Typography variant='h6'>Date</Typography>\n                    </TableCell>\n                    <TableCell>\n                      <Typography variant='h6'>Customer</Typography>\n                    </TableCell>\n                    <TableCell>\n                      <Typography variant='h6'>Amount</Typography>\n                    </TableCell>\n                    <TableCell>\n                      <Typography variant='h6'>Total price ($)</Typography>\n                    </TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {row.history.map((historyRow) => (\n                    <TableRow key={historyRow.date}>\n                      <TableCell component='th' scope='row'>\n                        <Typography color='textSecondary' fontWeight='400'>\n                          {historyRow.date}\n                        </Typography>\n                      </TableCell>\n                      <TableCell>\n                        <Typography color='textSecondary' fontWeight='400'>\n                          {historyRow.customerId}\n                        </Typography>\n                      </TableCell>\n                      <TableCell>\n                        <Typography color='textSecondary' fontWeight='400'>\n                          {historyRow.amount}\n                        </Typography>\n                      </TableCell>\n                      <TableCell>\n                        <Typography fontWeight='600'>\n                          {Math.round(historyRow.amount * row.price * 100) /\n                            100}\n                        </Typography>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </Box>\n          </Collapse>\n        </TableCell>\n      </TableRow>\n    </>\n  );\n}\nRow.propTypes = {\n  row: PropTypes.shape({\n    price: PropTypes.string,\n    items: PropTypes.string,\n    history: PropTypes.arrayOf(\n      PropTypes.shape({\n        amount: PropTypes.number.isRequired,\n        customerId: PropTypes.string.isRequired,\n        date: PropTypes.string.isRequired,\n      })\n    ).isRequired,\n    inventory: PropTypes.string.isRequired,\n    imgsrc: PropTypes.string.isRequired,\n    customer: PropTypes.string.isRequired,\n    pname: PropTypes.string,\n  }),\n};\nconst BCrumb = [\n  {\n    to: '/',\n    title: 'Home',\n  },\n  {\n    title: 'Collapsible Table',\n  },\n];\n\nconst CollapsibleTable = () => (\n  <PageContainer\n    title='Collapsible Table'\n    description='this is Collapsible Table page'\n  >\n    {/* breadcrumb */}\n    <Breadcrumb title='Collapsible Table' items={BCrumb} />\n    {/* end breadcrumb */}\n    <Card>\n      <CardContent>\n        <TableContainer component={Paper}>\n          <Table\n            aria-label='collapsible table'\n            sx={{\n              whiteSpace: {\n                xs: 'nowrap',\n                sm: 'unset',\n              },\n            }}\n          >\n            <TableHead>\n              <TableRow>\n                <TableCell />\n                <TableCell>\n                  <Typography variant='h5'>Product</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography variant='h5'>Customer</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography variant='h5'>Inventory</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography variant='h5'>Price</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography variant='h5'>Items</Typography>\n                </TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {rows.map((row) => (\n                <Row key={row.pname} row={row} />\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </CardContent>\n    </Card>\n  </PageContainer>\n);\n\nexport default CollapsibleTable;\n"],"sourceRoot":""}