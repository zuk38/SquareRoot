{"version":3,"sources":["components/container/PageContainer.js","layouts/full-layout/breadcrumb/Breadcrumb.js","assets/images/products/s1.jpg","assets/images/products/s2.jpg","assets/images/products/s3.jpg","assets/images/products/s4.jpg","views/tables/CollapsibleTable.js"],"names":["PageContainer","title","description","children","name","content","Breadcrumb","subtitle","items","container","sx","p","item","xs","sm","lg","color","fontWeight","variant","separator","fontSize","map","to","underline","component","NavLink","lineHeight","display","alignItems","md","justifyContent","width","rows","imgsrc","img1","pname","customer","inventory","price","history","date","customerId","amount","img2","img3","img4","Row","props","row","React","useState","open","setOpen","borderBottom","size","onClick","src","alt","borderRadius","height","ml","backgroundColor","theme","palette","success","light","error","secondary","main","pl","pr","label","paddingBottom","paddingTop","colSpan","in","timeout","unmountOnExit","margin","gutterBottom","mt","grey","A700","mode","A200","historyRow","scope","Math","round","BCrumb","CollapsibleTable","Paper","whiteSpace"],"mappings":"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","file":"static/js/47.593143d0.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Helmet } from 'react-helmet';\r\n\r\nconst PageContainer = ({ title, description, children }) => (\r\n  <div>\r\n    <Helmet>\r\n      <title>{title}</title>\r\n      <meta name='description' content={description} />\r\n    </Helmet>\r\n    {children}\r\n  </div>\r\n);\r\n\r\nPageContainer.propTypes = {\r\n  title: PropTypes.string,\r\n  description: PropTypes.string,\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default PageContainer;\r\n","import React from 'react';\r\nimport { Grid, Typography, Box, Breadcrumbs, Link } from '@mui/material';\r\nimport { NavLink } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport NavigateNextIcon from '@mui/icons-material/NavigateNext';\r\n\r\nconst Breadcrumb = ({ subtitle, items, title, children }) => (\r\n  <Grid\r\n    container\r\n    sx={{\r\n      p: '15px',\r\n    }}\r\n  >\r\n    <Grid item xs={12} sm={6} lg={8}>\r\n      <Typography color='textSecondary' fontWeight='400' variant='h4'>\r\n        {subtitle}\r\n      </Typography>\r\n\r\n      <Breadcrumbs\r\n        separator={<NavigateNextIcon fontSize='small' />}\r\n        aria-label='breadcrumb'\r\n      >\r\n        {items\r\n          ? items.map((item) => (\r\n              <div key={item.title}>\r\n                {item.to ? (\r\n                  <Link\r\n                    underline='none'\r\n                    color='inherit'\r\n                    component={NavLink}\r\n                    to={item.to}\r\n                  >\r\n                    {item.title}\r\n                  </Link>\r\n                ) : (\r\n                  <Typography color='textPrimary'>{item.title}</Typography>\r\n                )}\r\n              </div>\r\n            ))\r\n          : ''}\r\n      </Breadcrumbs>\r\n      <Typography\r\n        fontWeight='700'\r\n        variant='h1'\r\n        sx={{\r\n          lineHeight: '1.235',\r\n        }}\r\n      >\r\n        {title}\r\n      </Typography>\r\n    </Grid>\r\n    <Grid item xs={12} sm={6} lg={4} display='flex' alignItems='flex-end'>\r\n      <Box\r\n        sx={{\r\n          display: { xs: 'none', md: 'block', lg: 'flex' },\r\n          alignItems: 'center',\r\n          justifyContent: 'flex-end',\r\n          width: '100%',\r\n        }}\r\n      >\r\n        {children}\r\n      </Box>\r\n    </Grid>\r\n  </Grid>\r\n);\r\n\r\nBreadcrumb.propTypes = {\r\n  subtitle: PropTypes.string,\r\n  items: PropTypes.array,\r\n  title: PropTypes.string,\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default Breadcrumb;\r\n","export default __webpack_public_path__ + \"static/media/s1.69341801.jpg\";","export default __webpack_public_path__ + \"static/media/s2.3260a3b5.jpg\";","export default __webpack_public_path__ + \"static/media/s3.323ebcbe.jpg\";","export default __webpack_public_path__ + \"static/media/s4.f4c5d8f9.jpg\";","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  Typography,\r\n  Box,\r\n  Avatar,\r\n  Chip,\r\n  Paper,\r\n  Collapse,\r\n  IconButton,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n} from '@mui/material';\r\n\r\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\r\nimport KeyboardArrowUpIcon from '@mui/icons-material/KeyboardArrowUp';\r\n\r\nimport Breadcrumb from '../../layouts/full-layout/breadcrumb/Breadcrumb';\r\nimport PageContainer from '../../components/container/PageContainer';\r\n\r\nimport img1 from '../../assets/images/products/s1.jpg';\r\nimport img2 from '../../assets/images/products/s2.jpg';\r\nimport img3 from '../../assets/images/products/s3.jpg';\r\nimport img4 from '../../assets/images/products/s4.jpg';\r\n\r\nconst rows = [\r\n  {\r\n    imgsrc: img1,\r\n    pname: 'Good butterscotch ice-cream',\r\n    customer: 'Sunil Joshi',\r\n    inventory: 'In Stock',\r\n    price: '250.00',\r\n    items: '2',\r\n    history: [\r\n      { date: '2021-02-05', customerId: '11091700', amount: 3 },\r\n      { date: '2021-02-02', customerId: 'Anonymous', amount: 1 },\r\n    ],\r\n  },\r\n  {\r\n    imgsrc: img2,\r\n    pname: 'Supreme fresh tomato available',\r\n    customer: 'John Deo',\r\n    inventory: 'Out of Stock',\r\n    price: '450.00',\r\n    items: '1',\r\n    history: [\r\n      { date: '2021-02-05', customerId: '15202410', amount: 3 },\r\n      { date: '2021-02-02', customerId: 'Anonymous', amount: 1 },\r\n    ],\r\n  },\r\n  {\r\n    imgsrc: img3,\r\n    pname: 'Red color candy from Gucci',\r\n    customer: 'Andrew McDownland',\r\n    inventory: 'Out of Stock',\r\n    price: '150.00',\r\n    items: '1',\r\n    history: [\r\n      { date: '2021-02-05', customerId: '15202410', amount: 3 },\r\n      { date: '2021-02-02', customerId: 'Anonymous', amount: 1 },\r\n    ],\r\n  },\r\n  {\r\n    imgsrc: img4,\r\n    pname: 'Stylish night lamp for night',\r\n    customer: 'Christopher Jamil',\r\n    inventory: 'In Stock',\r\n    price: '550.00',\r\n    items: '6',\r\n    history: [\r\n      { date: '2021-02-05', customerId: '15202410', amount: 3 },\r\n      { date: '2021-02-02', customerId: 'Anonymous', amount: 1 },\r\n    ],\r\n  },\r\n];\r\n\r\nfunction Row(props) {\r\n  const { row } = props;\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  return (\r\n    <>\r\n      <TableRow>\r\n        <TableCell\r\n          sx={{\r\n            borderBottom: '0',\r\n          }}\r\n        >\r\n          <IconButton\r\n            aria-label='expand row'\r\n            size='small'\r\n            onClick={() => setOpen(!open)}\r\n          >\r\n            {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\r\n          </IconButton>\r\n        </TableCell>\r\n        <TableCell\r\n          sx={{\r\n            borderBottom: '0',\r\n          }}\r\n        >\r\n          <Box display='flex' alignItems='center'>\r\n            <Avatar\r\n              src={row.imgsrc}\r\n              alt={row.imgsrc}\r\n              sx={{\r\n                borderRadius: '10px',\r\n                height: '70px',\r\n                width: '90px',\r\n              }}\r\n            />\r\n            <Box\r\n              sx={{\r\n                ml: 2,\r\n              }}\r\n            >\r\n              <Typography variant='h5' fontWeight='600'>\r\n                {row.pname}\r\n              </Typography>\r\n            </Box>\r\n          </Box>\r\n        </TableCell>\r\n        <TableCell\r\n          sx={{\r\n            borderBottom: '0',\r\n          }}\r\n        >\r\n          <Typography color='textSecondary' variant='h5' fontWeight='600'>\r\n            {row.customer}\r\n          </Typography>\r\n        </TableCell>\r\n        <TableCell\r\n          sx={{\r\n            borderBottom: '0',\r\n          }}\r\n        >\r\n          <Chip\r\n            sx={{\r\n              backgroundColor:\r\n                row.inventory === 'In Stock'\r\n                  ? (theme) => theme.palette.success.light\r\n                  : row.inventory === 'Out of Stock'\r\n                  ? (theme) => theme.palette.error.light\r\n                  : (theme) => theme.palette.secondary.light,\r\n              color:\r\n                row.inventory === 'In Stock'\r\n                  ? (theme) => theme.palette.success.main\r\n                  : row.inventory === 'Out of Stock'\r\n                  ? (theme) => theme.palette.error.main\r\n                  : (theme) => theme.palette.secondary.main,\r\n              borderRadius: '6px',\r\n              pl: '3px',\r\n              pr: '3px',\r\n            }}\r\n            size='small'\r\n            label={row.inventory}\r\n          />\r\n        </TableCell>\r\n        <TableCell\r\n          sx={{\r\n            borderBottom: '0',\r\n          }}\r\n        >\r\n          <Typography color='textSecondary' variant='h5' fontWeight='400'>\r\n            ${row.price}\r\n          </Typography>\r\n        </TableCell>\r\n        <TableCell\r\n          sx={{\r\n            borderBottom: '0',\r\n          }}\r\n        >\r\n          <Typography color='textSecondary' fontWeight='400'>\r\n            {row.items}\r\n          </Typography>\r\n        </TableCell>\r\n      </TableRow>\r\n      <TableRow>\r\n        <TableCell sx={{ paddingBottom: 0, paddingTop: 0 }} colSpan={6}>\r\n          <Collapse in={open} timeout='auto' unmountOnExit>\r\n            <Box margin={1}>\r\n              <Typography\r\n                gutterBottom\r\n                variant='h5'\r\n                sx={{\r\n                  mt: 2,\r\n                  backgroundColor: (theme) => theme.palette.grey.A700,\r\n                  p: '5px 15px',\r\n                  color: (theme) =>\r\n                    `${\r\n                      theme.palette.mode === 'dark'\r\n                        ? theme.palette.grey.A200\r\n                        : 'rgba(0, 0, 0, 0.87)'\r\n                    }`,\r\n                }}\r\n              >\r\n                History\r\n              </Typography>\r\n              <Table size='small' aria-label='purchases'>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell>\r\n                      <Typography variant='h6'>Date</Typography>\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      <Typography variant='h6'>Customer</Typography>\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      <Typography variant='h6'>Amount</Typography>\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      <Typography variant='h6'>Total price ($)</Typography>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {row.history.map((historyRow) => (\r\n                    <TableRow key={historyRow.date}>\r\n                      <TableCell component='th' scope='row'>\r\n                        <Typography color='textSecondary' fontWeight='400'>\r\n                          {historyRow.date}\r\n                        </Typography>\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        <Typography color='textSecondary' fontWeight='400'>\r\n                          {historyRow.customerId}\r\n                        </Typography>\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        <Typography color='textSecondary' fontWeight='400'>\r\n                          {historyRow.amount}\r\n                        </Typography>\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        <Typography fontWeight='600'>\r\n                          {Math.round(historyRow.amount * row.price * 100) /\r\n                            100}\r\n                        </Typography>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                </TableBody>\r\n              </Table>\r\n            </Box>\r\n          </Collapse>\r\n        </TableCell>\r\n      </TableRow>\r\n    </>\r\n  );\r\n}\r\nRow.propTypes = {\r\n  row: PropTypes.shape({\r\n    price: PropTypes.string,\r\n    items: PropTypes.string,\r\n    history: PropTypes.arrayOf(\r\n      PropTypes.shape({\r\n        amount: PropTypes.number.isRequired,\r\n        customerId: PropTypes.string.isRequired,\r\n        date: PropTypes.string.isRequired,\r\n      })\r\n    ).isRequired,\r\n    inventory: PropTypes.string.isRequired,\r\n    imgsrc: PropTypes.string.isRequired,\r\n    customer: PropTypes.string.isRequired,\r\n    pname: PropTypes.string,\r\n  }),\r\n};\r\nconst BCrumb = [\r\n  {\r\n    to: '/',\r\n    title: 'Home',\r\n  },\r\n  {\r\n    title: 'Collapsible Table',\r\n  },\r\n];\r\n\r\nconst CollapsibleTable = () => (\r\n  <PageContainer\r\n    title='Collapsible Table'\r\n    description='this is Collapsible Table page'\r\n  >\r\n    {/* breadcrumb */}\r\n    <Breadcrumb title='Collapsible Table' items={BCrumb} />\r\n    {/* end breadcrumb */}\r\n    <Card>\r\n      <CardContent>\r\n        <TableContainer component={Paper}>\r\n          <Table\r\n            aria-label='collapsible table'\r\n            sx={{\r\n              whiteSpace: {\r\n                xs: 'nowrap',\r\n                sm: 'unset',\r\n              },\r\n            }}\r\n          >\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell />\r\n                <TableCell>\r\n                  <Typography variant='h5'>Product</Typography>\r\n                </TableCell>\r\n                <TableCell>\r\n                  <Typography variant='h5'>Customer</Typography>\r\n                </TableCell>\r\n                <TableCell>\r\n                  <Typography variant='h5'>Inventory</Typography>\r\n                </TableCell>\r\n                <TableCell>\r\n                  <Typography variant='h5'>Price</Typography>\r\n                </TableCell>\r\n                <TableCell>\r\n                  <Typography variant='h5'>Items</Typography>\r\n                </TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {rows.map((row) => (\r\n                <Row key={row.pname} row={row} />\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </CardContent>\r\n    </Card>\r\n  </PageContainer>\r\n);\r\n\r\nexport default CollapsibleTable;\r\n"],"sourceRoot":""}