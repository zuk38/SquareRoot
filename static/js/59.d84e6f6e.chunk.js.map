{"version":3,"sources":["components/container/PageContainer.js","layouts/full-layout/breadcrumb/Breadcrumb.js","../node_modules/@mui/material/CardContent/cardContentClasses.js","../node_modules/@mui/material/CardContent/CardContent.js","views/apps/shop/ShopAllPlants.js"],"names":["PageContainer","title","description","children","name","content","Breadcrumb","subtitle","items","container","sx","p","item","xs","sm","lg","color","fontWeight","variant","separator","fontSize","map","to","underline","component","NavLink","lineHeight","display","alignItems","md","justifyContent","width","getCardContentUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","CardContentRoot","styled","overridesResolver","props","styles","root","padding","paddingBottom","CardContent","React","inProps","ref","useThemeProps","className","other","_objectWithoutPropertiesLoose","ownerState","_extends","classes","composeClasses","useUtilityClasses","_jsx","as","clsx","BCrumb","connect","plants","spacing","plant","textDecoration","Link","src","img","alt","norwegian_name","latin_name","categories","theme","palette","grey","A200","mt","icons","id"],"mappings":"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","file":"static/js/59.d84e6f6e.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Helmet } from 'react-helmet';\n\nconst PageContainer = ({ title, description, children }) => (\n  <div>\n    <Helmet>\n      <title>{title}</title>\n      <meta name='description' content={description} />\n    </Helmet>\n    {children}\n  </div>\n);\n\nPageContainer.propTypes = {\n  title: PropTypes.string,\n  description: PropTypes.string,\n  children: PropTypes.node,\n};\n\nexport default PageContainer;\n","import React from 'react';\nimport { Grid, Typography, Box, Breadcrumbs, Link } from '@mui/material';\nimport { NavLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport NavigateNextIcon from '@mui/icons-material/NavigateNext';\n\nconst Breadcrumb = ({ subtitle, items, title, children }) => (\n  <Grid\n    container\n    sx={{\n      p: '15px',\n    }}\n  >\n    <Grid item xs={12} sm={6} lg={8}>\n      <Typography color='textSecondary' fontWeight='400' variant='h4'>\n        {subtitle}\n      </Typography>\n\n      <Breadcrumbs\n        separator={<NavigateNextIcon fontSize='small' />}\n        aria-label='breadcrumb'\n      >\n        {items\n          ? items.map((item) => (\n              <div key={item.title}>\n                {item.to ? (\n                  <Link\n                    underline='none'\n                    color='inherit'\n                    component={NavLink}\n                    to={item.to}\n                  >\n                    {item.title}\n                  </Link>\n                ) : (\n                  <Typography color='textPrimary'>{item.title}</Typography>\n                )}\n              </div>\n            ))\n          : ''}\n      </Breadcrumbs>\n      <Typography\n        fontWeight='700'\n        variant='h1'\n        sx={{\n          lineHeight: '1.235',\n        }}\n      >\n        {title}\n      </Typography>\n    </Grid>\n    <Grid item xs={12} sm={6} lg={4} display='flex' alignItems='flex-end'>\n      <Box\n        sx={{\n          display: { xs: 'none', md: 'block', lg: 'flex' },\n          alignItems: 'center',\n          justifyContent: 'flex-end',\n          width: '100%',\n        }}\n      >\n        {children}\n      </Box>\n    </Grid>\n  </Grid>\n);\n\nBreadcrumb.propTypes = {\n  subtitle: PropTypes.string,\n  items: PropTypes.array,\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\n\nexport default Breadcrumb;\n","import { generateUtilityClass, generateUtilityClasses } from '@mui/core';\nexport function getCardContentUtilityClass(slot) {\n  return generateUtilityClass('MuiCardContent', slot);\n}\nconst cardContentClasses = generateUtilityClasses('MuiCardContent', ['root']);\nexport default cardContentClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/core';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getCardContentUtilityClass } from './cardContentClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardContentUtilityClass, classes);\n};\n\nconst CardContentRoot = styled('div', {\n  name: 'MuiCardContent',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  };\n});\nconst CardContent = /*#__PURE__*/React.forwardRef(function CardContent(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCardContent'\n  });\n\n  const {\n    className,\n    component = 'div'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    component\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardContentRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default CardContent;","import React from 'react';\nimport { Box, Grid, Card, Typography, CardContent } from '@mui/material';\nimport { Link } from 'react-router-dom';\nimport FeatherIcon from 'feather-icons-react';\nimport Breadcrumb from '../../../layouts/full-layout/breadcrumb/Breadcrumb';\nimport PageContainer from '../../../components/container/PageContainer';\nimport { connect } from 'react-redux';\nimport { theme } from '../../../assets/global/Theme-variable';\n\nconst BCrumb = [\n  {\n    to: '/',\n    title: 'Plants for',\n  },\n  {\n    title: 'Indoor',\n  },\n];\n\nconst ShopPage = (props) => {\n  let { plants } = props;\n  return (\n    <PageContainer title='Shop List' description='this is Shop List page'>\n      {/* breadcrumb */}\n      <Breadcrumb title='All Plants' items={BCrumb} />\n\n      <Grid container spacing={0}>\n        {plants.map((plant) => (\n          <Grid\n            item\n            xs={12}\n            lg={4}\n            sm={4}\n            display='flex'\n            alignItems='stretch'\n            key={plant.id}\n          >\n            <Card\n              sx={{ p: 0, width: '100%', textDecoration: 'none' }}\n              component={Link}\n              to='/shop/shop-detail'\n            >\n              <img\n                src={plant.img}\n                alt={plant.norwegian_name ?? plant.latin_name}\n                width='100%'\n              />\n              <CardContent sx={{ p: 3 }}>\n                <Typography variant='caption'>{plant.categories[0]}</Typography>\n                <Typography\n                  fontWeight='500'\n                  sx={{\n                    display: 'block',\n                    textDecoration: 'none',\n                    color: theme.palette.grey.A200,\n                  }}\n                >\n                  {plant.norwegian_name ?? plant.latin_name}\n                </Typography>\n                <Box\n                  display='flex'\n                  alignItems='center'\n                  sx={{\n                    mt: '15px',\n                  }}\n                >\n                  {/**  ----- product price -----\n                <Typography variant=\"h5\" sx={{ mr: 'auto' }}>\n                  {product.price}\n                </Typography>\n\n                */}\n\n                  {/* ---- project icons ---- */}\n                  <FeatherIcon>{plant.icons}</FeatherIcon>\n\n                  {/** \n                {product.star.map((index) => (\n                  <FeatherIcon\n                    icon=\"star\"\n                    key={index}\n                    size=\"14\"\n                    style={{ fill: '#fdd43f', stroke: '#fdd43f' }}\n                  />\n\n                ))}\n                */}\n                </Box>\n              </CardContent>\n            </Card>\n          </Grid>\n        ))}\n      </Grid>\n    </PageContainer>\n  );\n};\n\nconst mapStateToProps = ({ plants }) => ({\n  plants: plants.plants,\n});\n\nexport default connect(mapStateToProps)(ShopPage);\n"],"sourceRoot":""}