{"version":3,"sources":["components/container/PageContainer.js","layouts/full-layout/breadcrumb/Breadcrumb.js","components/base-card/BaseCard.js","views/alert/ExAlert.js"],"names":["PageContainer","title","description","children","name","content","Breadcrumb","subtitle","items","container","sx","p","item","xs","sm","lg","color","fontWeight","variant","separator","fontSize","map","to","underline","component","NavLink","lineHeight","display","alignItems","md","justifyContent","width","BaseCard","centering","style","textAlign","BCrumb","ExAlert","React","useState","open","setOpen","spacing","severity","onClose","action","size","in","onClick","icon","disabled"],"mappings":"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","file":"static/js/57.65f6d458.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Helmet } from 'react-helmet';\r\n\r\nconst PageContainer = ({ title, description, children }) => (\r\n  <div>\r\n    <Helmet>\r\n      <title>{title}</title>\r\n      <meta name='description' content={description} />\r\n    </Helmet>\r\n    {children}\r\n  </div>\r\n);\r\n\r\nPageContainer.propTypes = {\r\n  title: PropTypes.string,\r\n  description: PropTypes.string,\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default PageContainer;\r\n","import React from 'react';\r\nimport { Grid, Typography, Box, Breadcrumbs, Link } from '@mui/material';\r\nimport { NavLink } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport NavigateNextIcon from '@mui/icons-material/NavigateNext';\r\n\r\nconst Breadcrumb = ({ subtitle, items, title, children }) => (\r\n  <Grid\r\n    container\r\n    sx={{\r\n      p: '15px',\r\n    }}\r\n  >\r\n    <Grid item xs={12} sm={6} lg={8}>\r\n      <Typography color='textSecondary' fontWeight='400' variant='h4'>\r\n        {subtitle}\r\n      </Typography>\r\n\r\n      <Breadcrumbs\r\n        separator={<NavigateNextIcon fontSize='small' />}\r\n        aria-label='breadcrumb'\r\n      >\r\n        {items\r\n          ? items.map((item) => (\r\n              <div key={item.title}>\r\n                {item.to ? (\r\n                  <Link\r\n                    underline='none'\r\n                    color='inherit'\r\n                    component={NavLink}\r\n                    to={item.to}\r\n                  >\r\n                    {item.title}\r\n                  </Link>\r\n                ) : (\r\n                  <Typography color='textPrimary'>{item.title}</Typography>\r\n                )}\r\n              </div>\r\n            ))\r\n          : ''}\r\n      </Breadcrumbs>\r\n      <Typography\r\n        fontWeight='700'\r\n        variant='h1'\r\n        sx={{\r\n          lineHeight: '1.235',\r\n        }}\r\n      >\r\n        {title}\r\n      </Typography>\r\n    </Grid>\r\n    <Grid item xs={12} sm={6} lg={4} display='flex' alignItems='flex-end'>\r\n      <Box\r\n        sx={{\r\n          display: { xs: 'none', md: 'block', lg: 'flex' },\r\n          alignItems: 'center',\r\n          justifyContent: 'flex-end',\r\n          width: '100%',\r\n        }}\r\n      >\r\n        {children}\r\n      </Box>\r\n    </Grid>\r\n  </Grid>\r\n);\r\n\r\nBreadcrumb.propTypes = {\r\n  subtitle: PropTypes.string,\r\n  items: PropTypes.array,\r\n  title: PropTypes.string,\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default Breadcrumb;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  Divider,\r\n  Typography,\r\n} from '@mui/material';\r\n\r\nconst BaseCard = ({ title, children, variant, centering }) => (\r\n  <Card\r\n    sx={{\r\n      width: '100%',\r\n      p: 0,\r\n    }}\r\n  >\r\n    <CardHeader\r\n      style={centering && { textAlign: 'center' }}\r\n      title={\r\n        variant ? <Typography variant={variant}>{title}</Typography> : title\r\n      }\r\n    />\r\n    <Divider />\r\n    <CardContent\r\n      sx={{ alignItems: 'center', justifyContent: 'center', display: 'flex' }}\r\n    >\r\n      {children}\r\n    </CardContent>\r\n  </Card>\r\n);\r\n\r\nBaseCard.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.node,\r\n  variant: PropTypes.string,\r\n  centering: PropTypes.bool,\r\n};\r\n\r\nexport default BaseCard;\r\n","import React from 'react';\r\nimport { Grid, Stack, Button, IconButton, Collapse } from '@mui/material';\r\nimport Alert from '@mui/lab/Alert';\r\nimport FeatherIcon from 'feather-icons-react';\r\nimport Breadcrumb from '../../layouts/full-layout/breadcrumb/Breadcrumb';\r\nimport BaseCard from '../../components/base-card/BaseCard';\r\nimport PageContainer from '../../components/container/PageContainer';\r\n\r\nconst BCrumb = [\r\n  {\r\n    to: '/',\r\n    title: 'Home',\r\n  },\r\n  {\r\n    title: 'Alert',\r\n  },\r\n];\r\n\r\nconst ExAlert = () => {\r\n  const [open, setOpen] = React.useState(true);\r\n\r\n  return (\r\n    <PageContainer title='Alert' description='this is Alert page'>\r\n      {/* breadcrumb */}\r\n      <Breadcrumb title='Alert' items={BCrumb} />\r\n      {/* end breadcrumb */}\r\n      <Grid container spacing={0}>\r\n        {/* ------------------------- row 1 ------------------------- */}\r\n        <Grid item xs={12} lg={6} sm={6} display='flex' alignItems='stretch'>\r\n          <BaseCard title='Filled Alert'>\r\n            <Stack spacing={1}>\r\n              <Alert variant='filled' severity='error'>\r\n                This is an error alert — check it out!\r\n              </Alert>\r\n              <Alert variant='filled' severity='warning'>\r\n                This is a warning alert — check it out!\r\n              </Alert>\r\n              <Alert variant='filled' severity='info'>\r\n                This is an info alert — check it out!\r\n              </Alert>\r\n              <Alert variant='filled' severity='success'>\r\n                This is a success alert — check it out!\r\n              </Alert>\r\n            </Stack>\r\n          </BaseCard>\r\n        </Grid>\r\n        {/* ------------------------- row 1 ------------------------- */}\r\n        <Grid item xs={12} lg={6} sm={6} display='flex' alignItems='stretch'>\r\n          <BaseCard title='Action Alert'>\r\n            <Stack spacing={1}>\r\n              <Alert variant='filled' severity='warning' onClose={() => {}}>\r\n                This is a success alert — check it out!\r\n              </Alert>\r\n              <Alert\r\n                variant='filled'\r\n                severity='info'\r\n                action={\r\n                  <Button color='inherit' size='small'>\r\n                    UNDO\r\n                  </Button>\r\n                }\r\n              >\r\n                This is a success alert — check it out!\r\n              </Alert>\r\n            </Stack>\r\n          </BaseCard>\r\n        </Grid>\r\n        {/* ------------------------- row 1 ------------------------- */}\r\n        <Grid item xs={12} lg={6} sm={6} display='flex' alignItems='stretch'>\r\n          <BaseCard title='Transition Alert'>\r\n            <Stack spacing={1}>\r\n              <Collapse in={open}>\r\n                <Alert\r\n                  variant='filled'\r\n                  severity='info'\r\n                  action={\r\n                    <IconButton\r\n                      aria-label='close'\r\n                      color='inherit'\r\n                      size='small'\r\n                      onClick={() => {\r\n                        setOpen(false);\r\n                      }}\r\n                    >\r\n                      <FeatherIcon icon='x' width='20' />\r\n                    </IconButton>\r\n                  }\r\n                >\r\n                  Close me!\r\n                </Alert>\r\n              </Collapse>\r\n              <Button\r\n                disabled={open}\r\n                variant='outlined'\r\n                onClick={() => {\r\n                  setOpen(true);\r\n                }}\r\n              >\r\n                Re-open\r\n              </Button>\r\n            </Stack>\r\n          </BaseCard>\r\n        </Grid>\r\n      </Grid>\r\n    </PageContainer>\r\n  );\r\n};\r\n\r\nexport default ExAlert;\r\n"],"sourceRoot":""}